{"title": "系統管理與維護命令", "class": "文件系统管理"}
{"title": "Linux Fork Bomb Command命令", "class": "文件系统管理"}
{"title": "基於Web的文件管理器，發布 eXtplorer 2.1.5 版本命令", "class": "文件系统管理"}
{"title": "SkyNet：用開源系統管理物聯網命令", "class": "文件系统管理"}
{"title": "Linux jobs命令用法详解：显示Linux中的任务列表及任务状态命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "文件系统管理"}
{"title": "repquota命令", "语法": "repquota(选项)(参数)", "选项": "-a：列出在/etc/fstab文件里，有加入quota设置的分区的使用状况，包括用户和群组； -g：列出所有群组的磁盘空间限制； -u：列出所有用户的磁盘空间限制； -v：显示该用户或群组的所有空间限制。", "参数": "文件系统：要打印报表的文件系统或者对应的设备文件名。", "实例": "显示所有文件系统的磁盘使用情况", "class": "文件系统管理"}
{"title": "e2label命令", "语法": "e2label(参数)", "参数": "文件系统：指定文件系统所对应的设备文件名；\n新卷标：为文件系统指定新卷标。", "实例": "许多用了多年Linux的人可能也没有用过e2label命令。但是这个命令相当有效。在介绍它之前,我们先看看/etc/fstab文件：", "class": "文件系统管理"}
{"title": "findfs命令", "语法": "findfs(参数)", "参数": "LABEL=<卷标>或者UUID=<UUID>：按照卷标或者UUID查询文件系统。", "实例": "通过卷标名查找对应的文件系统：", "class": "文件系统管理"}
{"title": "resize2fs命令", "语法": "resize2fs(选项)(参数)", "选项": "-d：打开调试特性； -p：打印已完成的百分比进度条； -f：强制执行调整大小操作，覆盖掉安全检查操作； -F：开始执行调整大小前，刷新文件系统设备的缓冲区。", "参数": "设备文件名：增大要调整大小的文件系统所对应的设备文件名；\n大小：文件系统的新大小。", "实例": "LV分区重设大小", "class": "文件系统管理"}
{"title": "e2image命令", "语法": "e2image(选项)(参数)", "选项": "-l：将文件中的“ext2/ext3”文件系统元数据还原到分区上。", "参数": "文件系统：指定文件系统对应的设备文件名；\n文件：指定保存文件系统元数据的文件名。", "class": "文件系统管理"}
{"title": "tune2fs命令", "语法": "tune2fs(选项)(参数)", "选项": "-c：调整最大加载次数； -C：设置文件系统已经被加载的次数； -e：设置内核代码检测到错误时的行为； -f：强制执行修改，即使发生错误； -i：设置相邻两次文件系统检查的相隔时间； -j：为“ext2”文件系统添加日志功能，将其转换为“ext3”文件系统； -l：显示文件超级块内容； -L：设置文件系统卷标； -m：显示文件保留块的百分比； -M：设置文件系统最后被加载到的目录； -o：设置或清除文件系统加载的特性或选项； -O：设置或清除文件系统的特性或选项； -r：设置文件系统保留块的大小； -T：设置文件系统上次被检查的时间； -u：设置可以使用文件系统保留块的用户； -U：设置文件系统的UUID。", "参数": "文件系统：指定调整的文件系统或者其对应的设备文件名。", "实例": "tune2fs -c 30 /dev/hda1 设置强制检查前文件系统可以挂载的次数 tune2fs -c -l /dev/hda1 关闭强制检查挂载次数限制。 tune2fs -i 10 /dev/hda1 10天后检查 tune2fs -i 1d /dev/hda1 1天后检查 tune2fs -i 3w /dev/hda1 3周后检查 tune2fs -i 6m /dev/hda1 半年后检查 tune2fs -i 0 /dev/hda1 禁用时间检查 tune2fs -j /dev/hda1 添加日志功能，将ext2转换成ext3文件系统 tune2fs -r 40000 /dev/hda1 调整/dev/hda1分区的保留空间为40000个磁盘块 tune2fs -o acl,user_xattr /dev/hda1 设置/dev/hda1挂载选项，启用Posix Access Control Lists和用户指定的扩展属性", "class": "文件系统管理"}
{"title": "sync命令", "语法": "sync(选项)", "选项": "--help：显示帮助； --version：显示版本信息。", "buffer与cache": "buffer：为了解决写磁盘的效率\ncache：为了解决读磁盘的效率", "class": "文件系统管理"}
{"title": "swapoff命令", "语法": "swapoff(选项)(参数)", "选项": "-a：关闭配置文件“/etc/fstab”中所有的交换空间。", "参数": "交换空间：指定需要激活的交换空间，可以是交换文件和交换分区，如果是交换分区则指定交换分区对应的设备文件。", "实例": "关闭交换分区", "class": "文件系统管理"}
{"title": "swapon命令", "语法": "swapon(选项)(参数)", "选项": "-a：将/etc/fstab文件中所有设置为swap的设备，启动为交换区； -h：显示帮助； -p<优先顺序>：指定交换区的优先顺序； -s：显示交换区的使用状况； -V：显示版本信息。", "参数": "交换空间：指定需要激活的交换空间，可以是交换文件和交换分区，如果是交换分区则指定交换分区对应的设备文件。", "实例": "mkswap -c /dev/hdb4 （-c是检查有无坏块） swapon -v /dev/hdb4 swapon -s Filename type Size Used Priority /dev/hda5 partition 506008 96 -1 /dev/hdb4 partition 489972 0 -2", "class": "文件系统管理"}
{"title": "quota命令", "语法": "quota(选项)(参数)", "选项": "-g：列出群组的磁盘空间限制； -q：简明列表，只列出超过限制的部分； -u：列出用户的磁盘空间限制； -v：显示该用户或群组，在所有挂入系统的存储设备的空间限制； -V：显示版本信息。", "参数": "用户或者工作组：指定要显示的用户或者工作组。", "实例": "我们可以限制某一群组所能使用的最大磁盘配额，而且可以再限制某一使用者的最大磁盘配额 ，好比做一个收费的应用，vip可以得到空间更大一些。另外，以 Link 的方式，来使邮件可以作为限制的配额（更改/var/spool/mail 这个路径），不2，需要重新再规划一个硬盘！直接使用 Link 的方式指向 /home （或者其它已经做好的 quota 磁盘）就可以！这通常是用在原本规划不好，但是却又不想要更动原有主机架构的情况中！", "class": "文件系统管理"}
{"title": "quotastats命令", "语法": "quotastats", "实例": "显示磁盘配额限制状态", "class": "文件系统管理"}
{"title": "edquota命令", "语法": "edquota(选项)(参数)", "选项": "-u：设置用户的quota，这是预设的参数； -g：设置群组的quota； -p<源用户名称>：将源用户的quota设置套用至其他用户或群组； -t：设置宽限期限。", "参数": "用户：指定要编辑磁盘配额限制的用户名或者工作组。", "实例": "配置系统的磁盘配额支持", "class": "文件系统管理"}
{"title": "quotaon命令", "语法": "quotaon(选项)(参数)", "选项": "-a：开启在/ect/fstab文件里，有加入quota设置的分区的空间限制； -g：开启群组的磁盘空间限制； -u：开启用户的磁盘空间限制； -v：显示指令指令执行过程。", "参数": "文件系统：指定要激活磁盘配额功能的文件系统。", "class": "文件系统管理"}
{"title": "quotacheck命令", "语法": "quotacheck(选项)(参数)", "选项": "-a：扫描在/etc/fstab文件里，有加入quota设置的分区； -d：详细显示指令执行过程，便于排错或了解程序执行的情形； -g：扫描磁盘空间时，计算每个群组识别码所占用的目录和文件数目； -R：排除根目录所在的分区； -u：扫描磁盘空间时，计算每个用户识别码所占用的目录和文件数目； -v：显示指令执行过程。", "参数": "文件系统：指定要扫描的文件系统。", "实例": "将所有的在/etc/mtab内，含有quota支持的partition进行扫描：", "class": "文件系统管理"}
{"title": "quotaoff命令", "语法": "quotaoff(选项)(参数)", "选项": "-a：关闭在/etc/fstab文件里，有加入quota设置的分区的空间限制； -g：关闭群组的磁盘空间限制； -u：关闭用户的磁盘空间限制； -v：显示指令执行过程。", "参数": "文件系统：指定要关闭磁盘配额功能的文件系统。", "class": "文件系统管理"}
{"title": "mkfs命令", "语法": "mkfs(选项)(参数)", "选项": "fs：指定建立文件系统时的参数； -t<文件系统类型>：指定要建立何种文件系统； -v：显示版本信息与详细的使用方法； -V：显示简要的使用方法； -c：在制做档案系统前，检查该partition是否有坏轨。", "参数": "文件系统：指定要创建的文件系统对应的设备文件名；\n块数：指定文件系统的磁盘块数。", "实例": "在/dev/hda5上建一个msdos的档案系统，同时检查是否有坏轨存在，并且将过程详细列出来：", "class": "文件系统管理"}
{"title": "mountpoint命令", "语法": "mountpoint(选项)(参数)", "选项": "-q：不打印任何信息； -d：打印文件系统的主设备号和次设备号； -x：打印块数设备的主设备号和次设备号。", "参数": "目录：指定要判断的目录。", "实例": "查看/mnt目录是不是挂载点：", "class": "文件系统管理"}
{"title": "umount命令", "语法": "umount(选项)(参数)", "选项": "-a：卸除/etc/mtab中记录的所有文件系统； -h：显示帮助； -n：卸除时不要将信息存入/etc/mtab文件中； -r：若无法成功卸除，则尝试以只读的方式重新挂入文件系统； -t<文件系统类型>：仅卸除选项中所指定的文件系统； -v：执行时显示详细的信息； -V：显示版本信息。", "参数": "文件系统：指定要卸载的文件系统或者其对应的设备文件名。", "实例": "下面两条命令分别通过设备名和挂载点卸载文件系统，同时输出详细信息：", "class": "文件系统管理"}
{"title": "e2fsck命令", "语法": "e2fsck(选项)(参数)", "选项": "-a：不询问使用者意见，便自动修复文件系统； -b<superblock>：指定superblock，而不使用预设的superblock； -B<区块大小>：指定区块的大小，单位为字节； -c：一并执行badblocks，以标示损坏的区块； -C：将检查过程的信息完整记录在file descriptor中，使得整个检查过程都能完整监控； -d：显示排错信息； -f：即使文件系统没有错误迹象，仍强制地检查正确性； -F：执行前先清除设备的缓冲区； -l<文件>：将文件中指定的区块加到损坏区块列表； -L<文件>：先清除损坏区块列表，再将文件中指定的区块加到损坏区块列表。因此损坏区块列表的区块跟文件中指定的区块是一样的； -n：以只读模式开启文件系统，并采取非互动方式执行，所有的问题对话均设置以\"no\"回答； -p：不询问使用者意见，便自动修复文件系统； -r：此参数只为了兼容性而存在，并无实际作用； -s：如果文件系统的字节顺序不适当，就交换字节顺序，否则不做任何动作； -S：不管文件系统的字节顺序，一律交换字节顺序； -t：显示时间信息； -v：执行时显示详细的信息； -V：显示版本信息； -y：采取非互动方式执行，所有的问题均设置以\"yes\"回答。", "参数": "文件系统或者分区：指定文件系统或者分区所对应的设备文件名。", "实例": "检查/dev/sda1是否有问题，如发现问题便自动修复：", "class": "文件系统管理"}
{"title": "dumpe2fs命令", "语法": "dumpe2fs(选项)(参数)", "选项": "-b：打印文件系统中预留的块信息； -ob<超级块>：指定检查文件系统时使用的超级块； -OB<块大小>：检查文件系统时使用的指定的块大小； -h：仅显示超级块信息； -i：从指定的文件系统映像文件中读取文件系统信息； -x：以16进制格式打印信息块成员。", "参数": "文件系统：指定要查看信息的文件系统。", "实例": "dumpe2fs /dev/hda1 dumpe2fs 1.39 (29-May-2006) Filesystem volume name: / last mounted on: <not available> Filesystem UUID: 845ccd40-1f3b-4729-a63d-cb80f51b082a Filesystem magic number: 0xEF53 Filesystem revision #: 1 (dynamic) Filesystem features: has_journal ext_attr resize_inode dir_index filetype needs_recovery sparse_super large_file Default mount options: user_xattr acl Filesystem state: clean Errors behavior: Continue Filesystem OS type: Linux Inode count: 5242880 Block count: 5241817 Reserved block count: 262090 free blocks: 4434157 Free inodes: 5170836 First block: 0 Block size: 4096 Fragment size: 4096 Reserved GDT blocks: 1022 Blocks per group: 32768 Fragments per group: 32768 Inodes per group: 32768 Inode blocks per group: 1024 Filesystem created: Sun Mar 24 02:09:14 2013 Last mount time: Thu Aug 1 16:42:07 2013 Last write time: Thu Aug 1 16:42:07 2013 Mount count: 10 Maximum mount count: -1 Last checked: Sun Mar 24 02:09:14 2013 Check interval: 0 (<none>) Reserved blocks uid: 0 (user root) Reserved blocks gid: 0 (group root) First inode: 11 Inode size: 128 Journal inode: 8 First orphan inode: 3735559 Default directory hash: tea Directory Hash Seed: e3f7162e-1194-4161-805d-763db89dbc69 Journal backup: inode blocks Journal size: 128M Group 0: (Blocks 0-32767) Primary superblock at 0, Group descriptors at 1-2 Reserved GDT blocks at 3-1024 Block bitmap at 1025 (+1025), Inode bitmap at 1026 (+1026) Inode table at 1027-2050 (+1027) 0 free blocks, 32757 free inodes, 2 directories Free blocks: Free inodes: 12-32768 ...", "class": "文件系统管理"}
{"title": "fsck命令", "语法": "fsck(选项)(参数)", "选项": "-a：自动修复文件系统，不询问任何问题； -A：依照/etc/fstab配置文件的内容，检查文件内所列的全部文件系统； -N：不执行指令，仅列出实际执行会进行的动作； -P：当搭配\"-A\"参数使用时，则会同时检查所有的文件系统； -r：采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式； -R：当搭配\"-A\"参数使用时，则会略过/目录的文件系统不予检查； -s：依序执行检查作业，而非同时执行； -t<文件系统类型>：指定要检查的文件系统类型； -T：执行fsck指令时，不显示标题信息； -V：显示指令执行过程。", "参数": "文件系统：指定要查看信息的文件系统。", "实例": "linux的文件系统损坏会导致linux不正常关机，出错的时候如果系统告诉你是哪一块硬盘的分区有问题，比如是/dev/hda2，接着用如下的命令去对付它：", "class": "文件系统管理"}
{"title": "mount命令", "语法": "mount(选项)(参数)", "选项": "-V：显示程序版本； -l：显示已加载的文件系统列表； -h：显示帮助信息并退出； -v：冗长模式，输出指令执行的详细信息； -n：加载没有写入文件“/etc/mtab”中的文件系统； -r：将文件系统加载为只读模式； -a：加载文件“/etc/fstab”中描述的所有文件系统。", "参数": "设备文件名：指定要加载的文件系统对应的设备名；\n加载点：指定加载点目录。", "实例": "mount -t auto /dev/cdrom /mnt/cdrom mount: mount point /mnt/cdrom does not exist /mnt/cdrom目录不存在，需要先创建。 cd /mnt -bash: cd: /mnt: No such file or directory mkdir -p /mnt/cdrom 创建/mnt/cdrom目录 ls bin dev home lib media mnt proc sbin srv tmp var boot etc initrd lost+found misc opt root selinux sys usr mount -t auto /dev/cdrom /mnt/cdrom 挂载cdrom mount: block device /dev/cdrom is write-protected, mounting read-only 挂载成功 ll /mnt/cdrom 查看cdrom里面内容 total 859 dr-xr-xr-x 4 root root 2048 Sep 4 2005 CentOS -r--r--r-- 2 root root 8859 Mar 19 2005 centosdocs-man.css -r--r--r-- 9 root root 18009 Mar 1 2005 GPL dr-xr-xr-x 2 root root 241664 May 7 02:32 headers dr-xr-xr-x 4 root root 2048 May 7 02:23 images dr-xr-xr-x 2 root root 4096 May 7 02:23 isolinux dr-xr-xr-x 2 root root 18432 May 2 18:50 NOTES -r--r--r-- 2 root root 5443 May 7 01:49 RELEASE-NOTES-en.html dr-xr-xr-x 2 root root 2048 May 7 02:34 repodata -r--r--r-- 9 root root 1795 Mar 1 2005 rpm-GPG-KEY -r--r--r-- 2 root root 1795 Mar 1 2005 RPM-GPG-KEY-centos4 -r--r--r-- 1 root root 571730 May 7 01:39 yumgroups.xml", "class": "文件系统管理"}
{"title": "mke2fs命令", "语法": "mke2fs(选项)(参数)", "选项": "-b<区块大小>：指定区块大小，单位为字节； -c；检查是否有损坏的区块； -f<不连续区段大小>：指定不连续区段的大小，单位为字节； -F：不管指定的设备为何，强制执行mke2fs； -i<字节>：指定\"字节/inode\"的比例； -N<inode数>：指定要建立的inode数目； -l<文件>：从指定的文件中，读取文件西中损坏区块的信息； -L<标签>：设置文件系统的标签名称； -m<百分比值>：指定给管理员保留区块的比例，预设为5%； -M：记录最后一次挂入的目录； -q：执行时不显示任何信息； -r：指定要建立的ext2文件系统版本； -R=<区块数>：设置磁盘阵列参数； -S：仅写入superblock与group descriptors，而不更改inode able inode bitmap以及block bitmap； -v：执行时显示详细信息； -V：显示版本信息。", "参数": "设备文件：指定要创建的文件系统的分区设备文件名；\n块数：指定要创建的文件系统的磁盘块数量。", "实例": "创建指定的ext2文件系统。", "class": "文件系统管理"}
{"title": "讓你提前認識軟件開發(2)：軟件開發工程師常用的工具軟件命令", "class": "常用工具命令"}
{"title": "磁盤與文件系統管理命令", "class": "常用工具命令"}
{"title": "技巧05監測樹莓派的硬件命令", "class": "常用工具命令"}
{"title": "linux文件和目錄管理的基本命令命令", "class": "常用工具命令"}
{"title": "Find命令", "class": "常用工具命令"}
{"title": "rm – Remove命令", "class": "常用工具命令"}
{"title": "cd – Change Directory命令", "對於當前在終端運行的會中中， cd <directory> 將給定的文件夾（或目錄）設置成當前工作目錄。": "", "class": "常用工具命令"}
{"title": "ls – List命令", "class": "常用工具命令"}
{"title": "Decompression Bomb命令", "class": "常用工具命令"}
{"title": "Malicious Source Code命令", "class": "常用工具命令"}
{"title": "Dd Command命令", "class": "常用工具命令"}
{"title": "Tar Bomb命令", "class": "常用工具命令"}
{"title": "Mkfs Command命令", "class": "常用工具命令"}
{"title": "Rm -Rf Command命令", "class": "常用工具命令"}
{"title": "Mv Folder/Dev/Null Command命令", "class": "常用工具命令"}
{"title": "蘋果與斯坦福攜手深入進行心臟項目研究命令", "class": "常用工具命令"}
{"title": "pssh命令", "安装pssh": "在CentOS系统环境下，介绍yum的安装和源码安装的方式：", "选项": "--version：查看版本 --help：查看帮助，即此信息 -h：主机文件列表，内容格式”[user@]host[:port]” -H：主机字符串，内容格式”[user@]host[:port]” -：登录使用的用户名 -p：并发的线程数【可选】 -o：输出的文件目录【可选】 -e：错误输入文件【可选】 -t：TIMEOUT 超时时间设置，0无限制【可选】 -O：SSH的选项 -v：详细模式 -A：手动输入密码模式 -x：额外的命令行参数使用空白符号，引号，反斜线处理 -X：额外的命令行参数，单个参数模式，同-x -i：每个服务器内部处理信息输出 -P：打印出服务器返回信息", "实例": "获取每台服务器的uptime：", "class": "常用工具命令"}
{"title": "screen命令", "语法": "# screen [-AmRvx -ls -wipe][-d ][-h ][-r ][-s ][-S ]", "选项": "-A 　将所有的视窗都调整为目前终端机的大小。 -d <作业名称> 　将指定的screen作业离线。 -h <行数> 　指定视窗的缓冲区行数。 -m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r <作业名称> 　恢复离线的screen作业。 -R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s 　指定建立新视窗时，所要执行的shell。 -S <作业名称> 　指定screen作业的名称。 -v 　显示版本信息。 -x 　恢复之前离线的screen作业。 -ls或--list 　显示目前所有的screen作业。 -wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。", "常用screen参数": "screen -S yourname -> 新建一个叫yourname的session screen -ls -> 列出当前所有的session screen -r yourname -> 回到yourname这个session screen -d yourname -> 远程detach某个session screen -d -r yourname -> 结束当前session并回到yourname这个session", "使用 screen": "安装screen", "screen 高级应用": "会话共享", "class": "常用工具命令"}
{"title": "speedtest-cli命令", "安装speedtest－cli": "speedtest-cli需要在python 2.4-3.4的环境下，安装方法都很简单，自己选择以下最适合你的一种。", "用法": "-h, --help show this help message and exit --share 分享你的网速，该命令会在speedtest网站上生成网速测试结果的图片。 --simple Suppress verbose output, only show basic information --list 根据距离显示speedtest.net的测试服务器列表。 --server=SERVER 指定列表中id的服务器来做测试。 --mini=MINI URL of the Speedtest Mini server --source=SOURCE Source ip address to bind to --version Show the version number and exit", "实例": "列出所有在中国的测试服务器：", "class": "常用工具命令"}
{"title": "clockdiff命令", "选项": "-o：使用IP时间戳选项来测量系统时间差。时间戳只用3个。 -o1：使用IP时间戳选项来测量系统时间差。用4个时间戳。如果-o和-o1都没有设置，那么就是用ICMP时间戳来测试系统时间差。", "实例": "lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1 PING www.ustc.edu.cn (202.38.64.9) 56(124) bytes of data. 64 bytes from 202.38.64.9: icmp_seq=1 ttl=62 time=0.823 ms TS: lixi-desktop.local (210.45.74.25) 12522473 absolute 210.45.74.1 -251 local-gw.ustc.edu.cn (202.38.64.126) 248 202.38.64.9 -857514 Unrecorded hops: 3 --- www.ustc.edu.cn ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.823/0.823/0.823/0.000 ms", "class": "常用工具命令"}
{"title": "ntpdate命令", "语法": "ntpdate [ -b] [ -d] [ -s] [ -u] [ -aKeyid] [ -eAuthenticationDelay] [ -kKeyFile] [ -oVersion] [ -pSamples] [ -tTimeOut] Server...", "选项": "-aKeyid\n使用 Keyid 来认证全部数据包。\n-b\n通过调用 settimeofday 子例程来增加时钟的时间。\n-d\n指定调试方式。判断 ntpdate 命令会产生什么结果（不产生实际的结果）。结果再现在屏幕上。这个标志使用无特权的端口。\n-eAuthenticationDelay\n指定延迟认证处理的时间秒数。\n-kKeyFile\n当不使用缺省值 /etc/ntp.keys 文件时，为包含密钥的文件指定一个不同的名称。 请参阅文件KeyFile的描述。\n-oVersion\n当轮询它的发出数据包时，指定使用的 NTP 版本实现。 Version 的值可以是 1，2，3。缺省值是 3。\n-pSamples\n指定从每个服务器获取的样本的数目。 Samples 的值在 1 和 8 之间，并包括 1 和 8。它的缺省值是 4。\n-s\n指定日志操作 syslog 设施的使用，而不是使用标准输出。 当运行 ntpdate 命令和 cron命令时，它是很有用的。\n-tTimeOut\n指定等待响应的时间。给定 TimeOut 的值四舍五入为 0.2 秒的倍数。缺省值是 1 秒。\n-u\n指定使用无特权的端口发送数据包。 当在一个对特权端口的输入流量进行阻拦的防火墙后是很有益的， 并希望在防火墙之外和主机同步。防火墙是一个系统或者计算机，它控制从外网对专用网的访问。", "class": "常用工具命令"}
{"title": "rsync命令", "语法": "rsync [OPTION]... SRC DEST rsync [OPTION]... SRC [USER@]host:DEST rsync [OPTION]... [USER@]HOST:SRC DEST rsync [OPTION]... [USER@]HOST::SRC DEST rsync [OPTION]... SRC [USER@]HOST::DEST rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]", "选项": "-v, --verbose 详细模式输出。 -q, --quiet 精简输出模式。 -c, --checksum 打开校验开关，强制对文件传输进行校验。 -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。 -r, --recursive 对子目录以递归模式处理。 -R, --relative 使用相对路径信息。 -b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。 --backup-dir 将备份文件(如~filename)存放在在目录下。 -suffix=SUFFIX 定义备份文件前缀。 -u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。 -l, --links 保留软链结。 -L, --copy-links 想对待常规文件一样处理软链结。 --copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。 --safe-links 忽略指向SRC路径目录树以外的链结。 -H, --hard-links 保留硬链结。 -p, --perms 保持文件权限。 -o, --owner 保持文件属主信息。 -g, --group 保持文件属组信息。 -D, --devices 保持设备文件信息。 -t, --times 保持文件时间信息。 -S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。 -n, --dry-run现实哪些文件将被传输。 -w, --whole-file 拷贝文件，不进行增量检测。 -x, --one-file-system 不要跨越文件系统边界。 -B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。 -e, --rsh=command 指定使用rsh、ssh方式进行数据同步。 --rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。 -C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。 --existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。 --delete 删除那些DST中SRC没有的文件。 --delete-excluded 同样删除接收端那些被该选项指定排除的文件。 --delete-after 传输结束以后再删除。 --ignore-errors 及时出现IO错误也进行删除。 --max-delete=NUM 最多删除NUM个文件。 --partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。 --force 强制删除目录，即使不为空。 --numeric-ids 不将数字的用户和组id匹配为用户名和组名。 --timeout=time ip超时时间，单位为秒。 -I, --ignore-times 不跳过那些有同样的时间和长度的文件。 --size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。 --modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。 -T --temp-dir=DIR 在DIR中创建临时文件。 --compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。 -P 等同于 --partial。 --progress 显示备份过程。 -z, --compress 对备份的文件在传输时进行压缩处理。 --exclude=PATTERN 指定排除不需要传输的文件模式。 --include=PATTERN 指定不排除而需要传输的文件模式。 --exclude-from=FILE 排除FILE中指定模式的文件。 --include-from=FILE 不排除FILE指定模式匹配的文件。 --version 打印版本信息。 --address 绑定到特定的地址。 --config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。 --port=PORT 指定其他的rsync服务端口。 --blocking-io 对远程shell使用阻塞IO。 -stats 给出某些文件的传输状态。 --progress 在传输时现实传输过程。 --log-format=formAT 指定日志文件格式。 --password-file=FILE 从FILE中得到密码。 --bwlimit=KBPS 限制I/O带宽，KBytes per second。 -h, --help 显示帮助信息。", "实例": "SSH方式", "class": "常用工具命令"}
{"title": "vdfuse命令", "什么是VirtualBox": "VirtualBox是一款功能强大的x86虚拟机软件，它不仅具有丰富的特色，而且性能也很优异。更可喜的是，VirtualBox于数日前走向开源，成为了一个发布在GPL许可之下的自由软件。VirtualBox可以在Linux和Windows主机中运行，并支持在其中安装Windows (NT 4.0、2000、XP、Server 2003、Vista)、DOS/Windows 3.x、Linux (2.4 和 2.6)、OpenBSD等系列的客户操作系统。", "语法": "vdfuse [options] -f image-file mountpoint", "选项": "-h 帮助 -r 只读 -t 类型 (VDI, VMDK, VHD, or raw; default: auto) -f 镜像文件 -a 允许所有用户读取 -w 允许所有用户都写 -g 前台运行 -v 输出反馈 -d debug模式", "实例": "使用如下如下语句挂载.vdi文件：", "class": "常用工具命令"}
{"title": "ngrep命令", "安装": "ngrep命令的下载地址：http://ngrep.sourceforge.net/，libpcap下载地址：http://www.tcpdump.org/。先用yum install libpcap完全安装libpcap，注意有时候用libpcap安装包安装的不完整会影响ngrep的使用。", "语法": "ngrep <-LhNXViwqpevxlDtTRM> <-IO pcap_dump> <-n num> <-d dev> <-A num> <-s snaplen> <-S limitlen> <-w normal|byline|single|none> <-c cols> <-P char> <-F file> <match expression> <bpf filter>", "选项": "-e ：显示空数据包 -i ：忽略大小写 -v ：反转匹配 -R ：don't do privilege revocation logic -x ：以16进制格式显示 -X ：以16进制格式匹配 -w ：整字匹配 -p ：不使用混杂模式 -l ：make stdout line buffered -D ：replay pcap_dumps with their recorded time intervals -t ：在每个匹配的包之前显示时间戳 -T ：显示上一个匹配的数据包之间的时间间隔 -M ：仅进行单行匹配 -I ：从文件中读取数据进行匹配 -O ：将匹配的数据保存到文件 -n ：仅捕获指定数目的数据包进行查看 -A ：匹配到数据包后dump随后的指定数目的数据包 -s ：set the bpf caplen -S ：set the limitlen on matched packets -W ：设置显示格式byline将解析包中的换行符 -c ：强制显示列的宽度 -P ：set the non-printable display char to what is specified -F ：使用文件中定义的bpf(Berkeley Packet Filter) -N ：显示由IANA定义的子协议号 -d ：使用哪个网卡，可以用-L选项查询 -L ：查询网卡接口", "实例": "捕捉cloudian：18080端口的request和response，-W byline用来解析包中的换行符，否则包里的所有数据都是连续的，可读性差。-d lo是监听本地网卡：", "class": "常用工具命令"}
{"title": "tempfile命令", "tempfile命令": "tempfile命令只有在基于Debian的发行版中才默认自带，比如Ubuntu，其他发行版没有这个命令。", "$$变量": "如果没有tempfile命令的Linux发行版，也可以使用自己的临时文件名：", "class": "常用工具命令"}
{"title": "xargs命令", "xargs命令用法": "xargs用作替换工具，读取输入数据重新格式化后输出。", "子Shell（Subshells）": "运行一个shell脚本时会启动另一个命令解释器.，就好像你的命令是在命令行提示下被解释的一样，类似于批处理文件里的一系列命令。每个shell脚本有效地运行在父shell(parent shell)的一个子进程里。这个父shell是指在一个控制终端或在一个xterm窗口中给你命令指示符的进程。", "class": "常用工具命令"}
{"title": "awk命令", "模式": "模式可以是以下任意一个：", "操作": "操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：", "awk的工作原理": "awk 'BEGIN{ commands } pattern{ commands } END{ commands }'", "算术运算符": "运算符\n描述\n+ -\n加，减\n* / &\n乘，除与求余\n+ - !\n一元加，减和逻辑非\n^ ***\n求幂\n++ --\n增加或减少，作为前缀或后缀", "赋值运算符": "运算符\n描述\n= += -= *= /= %= ^= **=\n赋值语句", "逻辑运算符": "运算符\n描述\n||\n逻辑或\n&&\n逻辑与", "正则运算符": "运算符\n描述\n~ ~!\n匹配正则表达式和不匹配正则表达式", "关系运算符": "运算符\n描述\n< <= > >= != ==\n关系运算符", "其它运算符": "运算符\n描述\n$\n字段引用\n空格\n字符串连接符\n?:\nC条件表达式\nin\n数组中是否存在某键值", "运算级优先级表": "级别越高越优先", "读取下一条记录": "awk中next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。net语句一般用于多行合并：", "简单地读取一条记录": "awk getline用法：输出重定向需用到getline函数。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。", "关闭文件": "awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。", "输出到一个文件": "awk中允许用如下方式将结果输出到一个文件：", "条件判断语句": "if(表达式) 语句1 else 语句2", "循环语句": "while语句", "其他语句": "break 当 break 语句用于 while 或 for 语句时，导致退出程序循环。\ncontinue 当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。\nnext 能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。\nexit 语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。", "数组的定义": "数字做数组索引（下标）：", "数组相关函数": "得到数组长度：", "二维、多维数组使用": "awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，array[2,4]=1这样的访问是允许的。awk使用一个特殊的字符串SUBSEP(�34)作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2�344。", "算术函数": "格式\n描述\natan2( y, x )\n返回 y/x 的反正切。\ncos( x )\n返回 x 的余弦；x 是弧度。\nsin( x )\n返回 x 的正弦；x 是弧度。\nexp( x )\n返回 x 幂函数。\nlog( x )\n返回 x 的自然对数。\nsqrt( x )\n返回 x 平方根。\nint( x )\n返回 x 的截断至整数的值。\nrand( )\n返回任意数字 n，其中 0 <= n < 1。\nsrand( [expr] )\n将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。", "字符串函数": "格式\n描述\ngsub( Ere, Repl, [ In ] )\n除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。\nsub( Ere, Repl, [ In ] )\n用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。\nindex( String1, String2 )\n在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。\nlength [(String)]\n返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nblength [(String)]\n返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nsubstr( String, M, [ N ] )\n返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。\nmatch( String, Ere )\n在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。\nsplit( String, A, [Ere] )\n将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。\ntolower( String )\n返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\ntoupper( String )\n返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\nsprintf(Format, Expr, Expr, . . . )\n根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。", "一般函数": "格式\n描述\nclose( Expression )\n用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。\nsystem(command )\n执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。\nExpression | getline [ Variable ]\n从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ] < Expression\n从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ]\n将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。", "时间函数": "格式\n描述\n函数名\n说明\nmktime( YYYY MM dd HH MM ss[ DST])\n生成时间格式\nstrftime([format [, timestamp]])\n格式化时间输出，将时间戳转为时间字符串\n具体格式，见下表.\nsystime()\n得到时间戳,返回从1970年1月1日开始到当前时间(不计闰年)的整秒数", "class": "常用工具命令"}
{"title": "yes命令", "语法": "yes(参数)", "参数": "字符串：指定要重复打印的字符串。", "实例": "[root@localhost ~]# yes testline testline testline testline testline testline testline testline testline ...一直重复打印 testline，按Ctrl+C结束。", "class": "常用工具命令"}
{"title": "date命令", "语法": "date(选项)(参数)", "选项": "-d<字符串>：显示字符串所指的日期与时间。字符串前后必须加上双引号； -s<字符串>：根据字符串来设置日期与时间。字符串前后必须加上双引号； -u：显示GMT； --help：在线帮助； --version：显示版本信息。", "参数": "<+时间日期格式>：指定显示时使用的日期时间格式。", "日期格式字符串列表": "%H 小时，24小时制（00~23） %I 小时，12小时制（01~12） %k 小时，24小时制（0~23） %l 小时，12小时制（1~12） %M 分钟（00~59） %p 显示出AM或PM %r 显示时间，12小时制（hh:mm:ss %p） %s 从1970年1月1日00:00:00到目前经历的秒数 %S 显示秒（00~59） %T 显示时间，24小时制（hh:mm:ss） %X 显示时间的格式（%H:%M:%S） %Z 显示时区，日期域（CST） %a 星期的简称（Sun~Sat） %A 星期的全称（Sunday~Saturday） %h,%b 月的简称（Jan~Dec） %B 月的全称（January~December） %c 日期和时间（Tue Nov 20 14:12:58 2012） %d 一个月的第几天（01~31） %x,%D 日期（mm/dd/yy） %j 一年的第几天（001~366） %m 月份（01~12） %w 一个星期的第几天（0代表星期天） %W 一年的第几个星期（00~53，星期一为第一天） %y 年的最后两个数字（1999则是99）", "实例": "格式化输出：", "class": "常用工具命令"}
{"title": "consoletype命令", "语法": "consoletype", "实例": "[root@localhost ~]# consoletype pty", "class": "常用工具命令"}
{"title": "info命令", "语法": "info(选项)(参数)", "选项": "-d：添加包含info格式帮助文档的目录； -f：指定要读取的info格式的帮助文档； -n：指定首先访问的info帮助文件的节点； -o：输出被选择的节点内容到指定文件。", "参数": "帮助主题：指定需要获得帮助的主题，可以是指令、函数以及配置文件。", "实例": "在info后面输入命令的名称就可以查看该命令的info帮助文档了：", "class": "常用工具命令"}
{"title": "hostid命令", "语法": "hostid", "选项": "--help：显示帮助信息； --version：显示版本信息。", "实例": "[root@localhost ~]# hostid 007f0100", "class": "常用工具命令"}
{"title": "clear命令", "语法": "clear", "实例": "直接输入clear命令当前终端上的任何信息就可被清除。", "class": "常用工具命令"}
{"title": "whoami命令", "语法": "whoami(选项)", "选项": "--help：在线帮助； --version：显示版本信息。", "实例": "[root@localhost ~]# whoami root [root@localhost ~]# id -un root", "class": "常用工具命令"}
{"title": "users命令", "语法": "users(选项)", "选项": "--help：显示命令的帮助信息； --version：显示命令的版本信息。", "实例": "[root@localhost ~]# users root root", "class": "常用工具命令"}
{"title": "sleep命令", "语法": "sleep(参数)", "参数": "时间：指定要暂停时间的长度。", "实例": "有时在写一些以循环方式运行的监控脚本，设置时间间隔是必不可少的，下面是一个Shell进度条的脚本演示在脚本中生成延时。", "class": "常用工具命令"}
{"title": "md5sum命令", "语法": "md5sum(选项)(参数)", "选项": "-b：二进制模式读取文件； -t或--text：把输入的文件作为文本文件看待； -c：从指定文件中读取MD5校验和，并进行校验； --status：验证成功时不输出任何信息； -w：当校验不正确时给出警告信息。", "参数": "文件：指定保存着文件名和校验和的文本文件。", "实例": "生成一个文件insert.sql的md5值：", "class": "常用工具命令"}
{"title": "mesg命令", "语法": "mesg(参数)", "参数": "y/n：y表示运行向当前终端写信息，n表示禁止向当前终端写信息。", "实例": "[root@localhost ~]# mesg y #允许系统用户将信息直接显示在你的屏幕上。 [root@localhost ~]# mesg n #不允许系统用户将信息直接显示在你的屏幕上。", "class": "常用工具命令"}
{"title": "mtools命令", "语法": "mtools(选项)", "选项": "-a：长文件名重复时自动更改目标文件的长文件名； -A：短文件名重复但长文件名不同时自动更改目标文件的短文件名； -o：长文件名重复时，将目标文件覆盖现有的文件； -O：短文件名重复但长文件名不同时，将目标文件覆盖现有的文件； -r：长文件名重复时，要求用户更改目标文件的长文件名； -R：短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名； -s：长文件名重复时，则不处理该目标文件； -S：短文件名重复但长文件名不同时，则不处理该目标文件； -v：执行时显示详细的说明； -V：显示版本信息。", "实例": "使用mtools命令显示其支持的所有的指令，输入如下命令：", "class": "常用工具命令"}
{"title": "login命令", "语法": "login(选项)(参数)", "选项": "-p：告诉login指令不销毁环境变量； -h：指定远程服务器的主机名。", "参数": "用户名：指定登录使用的用户名。", "class": "常用工具命令"}
{"title": "RHCSA 系列（二）: 如何進行文件和目錄管理命令", "创建、删除、复制和移动文件及目录": "文件和目錄管理是每一個系統管理員都應該掌握的必備技能。它包括了從頭開始的創建、刪除文本文件（每個程序的核心配置）以及目錄（你用來組織文件和其它目錄），以及識別已有文件的類型。", "输入输出重定向以及管道": "命令行環境提供了兩個非常有用的功能：允許重定向命令的輸入和輸出為另一個文件，以及發送命令的輸出到另一個命令，這分別稱為重定向和管道。", "归档，压缩，解包，解压文件": "如果你需要傳輸、備份、或者通過郵件發送一組文件，你可以使用一個存檔（或打包）工具，如 tar，通常與gzip，bzip2，或 xz 等壓縮工具配合使用。", "创建软连接和硬链接": "在Linux中，有2種類型的鏈接文件：硬鏈接和軟（也稱為符號）鏈接。因為硬鏈接文件只是現存文件的另一個名字，使用相同的 inode 號，它指向實際的數據；而符號鏈接只是指向的文件名。", "class": "Shell内建命令"}
{"title": "Pstree命令", "class": "Shell内建命令"}
{"title": "Vmstat命令", "class": "Shell内建命令"}
{"title": "xeyes命令", "class": "Shell内建命令"}
{"title": "fg , bg命令", "class": "Shell内建命令"}
{"title": "w命令", "class": "Shell内建命令"}
{"title": "sh命令", "语法": "bash [options] [file]", "选项": "-c string：命令从-c后的字符串读取。 -i：实现脚本交互。 -n：进行shell脚本的语法检查。 -x：实现shell脚本逐条语句的跟踪。", "实例": "使用-x选项跟踪脚本调试shell脚本，能打印出所执行的每一行命令以及当前状态：", "class": "Shell内建命令"}
{"title": "trap命令", "语法": "trap [-lp] [[arg] sigspec ...]", "选项参数说明": "如果arg参数缺省或者为“-”，每个接收到的sigspec信号都将会被重置为它们进入shell时的值；", "信号": "信号是一种进程间通信机制，它给应用程序提供一种异步的软件中断，使应用程序有机会接受其他程序活终端发送的命令(即信号)。应用程序收到信号后，有三种处理方式：忽略，默认，或捕捉。进程收到一个信号后，会检查对该信号的处理机制。如果是SIG_IGN，就忽略该信号；如果是SIG_DFT，则会采用系统默认的处理动作，通常是终止进程或忽略该信号；如果给该信号指定了一个处理函数(捕捉)，则会中断当前进程正在执行的任务，转而去执行该信号的处理函数，返回后再继续执行被中断的任务。", "捕获信号": "当你按下 Ctrl + C 键或 Break 键在终端一个shell程序的执行过程中，正常程序将立即终止，并返回命令提示符。这可能并不总是可取的。例如，你可能最终留下了一堆临时文件，将不会清理。", "class": "Shell内建命令"}
{"title": "let命令", "语法": "let arg [arg ...] #arg代表运算式", "用法": "自加操作let no++\n自减操作let no--\n简写形式let no+=10，let no-=20，分别等同于let no=no+10，let no=no-20", "实例": "#!/bin/bash let a=5+4 b=9-3 echo $a $b", "class": "Shell内建命令"}
{"title": "seq命令", "语法": "seq [选项]... 尾数 seq [选项]... 首数 尾数 seq [选项]... 首数 增量 尾数", "选项": "-f, --format=格式 使用printf 样式的浮点格式 -s, --separator=字符串 使用指定字符串分隔数字（默认使用：\\n） -w, --equal-width 在列前添加0 使得宽度相同", "实例": "-f选项：指定格式", "class": "Shell内建命令"}
{"title": "tput命令", "什么是 terminfo 数据库？": "UNIX 系统上的 terminfo 数据库用于定义终端和打印机的属性及功能，包括各设备（例如，终端和打印机）的行数和列数以及要发送至该设备的文本的属性。UNIX 中的几个常用程序都依赖 terminfo 数据库提供这些属性以及许多其他内容，其中包括 vi 和 emacs 编辑器以及 curses 和 man 程序。", "实例": "使输出的字符串有颜色，底色，加粗：", "class": "Shell内建命令"}
{"title": "apropos命令", "语法": "apropos [-dalhvV] [-e|-w|-r] [-s section] [-m system[,...]] [-M path] [-L locale] [-C file] keyword ...", "选项": "-d, --debug：输出调试信息。 -v, --verbose：输出详细的警告信息。 -r, -- regex：将每个keyword作为正则表达式解释。这是默认行为。每个keyword将匹配手册页和描述。 -w, --wildcard：将每个keyword作为shell样式的通配符解释。 -e, --exact：每个keyword将精确匹配手册页名字和描述。 -a, --and：只显示匹配所有keyword的手册页和描述。默认显示匹配任何keyword的项。 -l, --long：不根据终端宽度缩减输出。 -s section, --section section：只查找指定的手册section。 -m system[,...], --systems=system[,...]：用于查找其它操作系统的手册页。 -M path, --manpath=path：指定从其它以冒号分隔的手册页层次查找。默认使用$MANPATH环境变量。这个选项覆盖$MANPATH的内容。 -L locale, --locale=locale：apropos调用C函数setlocale来得到当前本地化信息，包括$LC_MESSAGE和$LANG。使用该选项提供一个locale字符串来临时更改本地化信息。 -C file, --config-file=file：使用这个用户配置文件而不是默认的~/.manpath。 -h, --help：打印帮助信息并退出。 -V, --version：打印版本信息并退出。", "返回值": "返回0表示成功，1表示用法、语法或配置文件错误，2表示操作错误，16表示没有找到匹配的内容。", "实例": "[root@localhost ~]# man -k who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::whoami (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid [root@localhost ~]# apropos who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::WhoAmI (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid", "class": "Shell内建命令"}
{"title": "set命令", "语法": "set(选项)(参数)", "选项": "-a：标示已修改的变量，以供输出至环境变量。 -b：使被中止的后台程序立刻回报执行状态。 -C：转向所产生的文件无法覆盖已存在的文件。 -d：Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 -e：若指令传回值不等于0，则立即退出shell。 -f：取消使用通配符。 -h：自动记录函数的所在位置。 -H Shell：可利用\"!\"加<指令编号>的方式来执行history中记录的指令。 -k：指令所给的参数都会被视为此指令的环境变量。 -l：记录for循环的变量名称。 -m：使用监视模式。 -n：只读取指令，而不实际执行。 -p：启动优先顺序模式。 -P：启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 -t：执行完随后的指令，即退出shell。 -u：当执行时使用到未定义过的变量，则显示错误信息。 -v：显示shell所读取的输入值。 -x：执行指令后，会先显示该指令及所下的参数。", "参数": "取消某个set曾启动的参数。", "实例": "使用declare命令定义一个新的环境变量\"mylove\"，并且将其值设置为\"Visual C++\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "command命令", "语法": "command(参数)", "参数": "指令：需要调用的指令及参数。", "实例": "使用command命令调用执行echo Linux，输入如下命令：", "class": "Shell内建命令"}
{"title": "dris命令", "语法": "dris(选项)", "选项": "+n：显示从左边算起第n笔的目录； -n：显示从右边算起第n笔的目录； -l：显示目录完整的记录。", "class": "Shell内建命令"}
{"title": "fc命令", "语法": "fc(选项)(参数)", "选项": "-l：显示历史命令； -n：显示历史命令时，不显示编号； -r：反序显示历史命令。", "参数": "起始指令编号：指定要编辑的起始指令编号；\n结尾指令编号：指定要编辑的结尾指令编号。", "实例": "使用该指令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "bind命令", "语法": "bind(选项)", "选项": "-d：显示按键配置的内容； -f<按键配置文件>：载入指定的按键配置文件； -l：列出所有的功能； -m<按键配置>：指定按键配置； -q<功能>：显示指定功能的按键； -v：列出目前的按键配置与其功能。", "实例": "bind -x '\"\\C-l\":ls -l' #直接按 CTRL+L 就列出目录", "class": "Shell内建命令"}
{"title": "readonly命令", "语法": "readonly(选项)(参数)", "选项": "-f：定义只读函数； -a：定义只读数组变量； -p：显示系统中全部只读变量列表。", "参数": "变量定义：定义变量，格式为“变量名=‘变量值’”。", "实例": "使用readonly命令显示系统中所有的已经定义的只读变量，输入如下命令：", "class": "Shell内建命令"}
{"title": "read命令", "语法": "read(选项)(参数)", "选项": "-p：指定读取值时的提示符； -t：指定读取值时等待的时间（秒）。", "参数": "变量：指定读取值的变量名。", "实例": "下面的列表给出了read命令的常用方式：", "class": "Shell内建命令"}
{"title": "bg命令", "语法": "bg(参数)", "参数": "作业标识：指定需要放到后台的作业标识号。", "实例": "使用bg命令将任务号为1的任务放到后台继续执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "ulimit命令", "语法": "ulimit(选项)", "选项": "-a：显示目前资源限制的设定； -c <core文件上限>：设定core文件的最大值，单位为区块； -d <数据节区大小>：程序数据节区的最大值，单位为KB； -f <文件大小>：shell所能建立的最大文件，单位为区块； -H：设定资源的硬性限制，也就是管理员所设下的限制； -m <内存大小>：指定可使用内存的上限，单位为KB； -n <文件数目>：指定同一时间最多可开启的文件数； -p <缓冲区大小>：指定管道缓冲区的大小，单位512字节； -s <堆叠大小>：指定堆叠的上限，单位为KB； -S：设定资源的弹性限制； -t <CPU时间>：指定CPU使用时间的上限，单位为秒； -u <程序数目>：用户最多可开启的程序数目； -v <虚拟内存大小>：指定可使用的虚拟内存上限，单位为KB。", "实例": "[root@localhost ~]# ulimit -a core file size (blocks, -c) 0 #core文件的最大值为100 blocks。 data seg size (kbytes, -d) unlimited #进程的数据段可以任意大。 scheduling priority (-e) 0 file size (blocks, -f) unlimited #文件可以任意大。 pending signals (-i) 98304 #最多有98304个待处理的信号。 max locked memory (kbytes, -l) 32 #一个任务锁住的物理内存的最大值为32KB。 max memory size (kbytes, -m) unlimited #一个任务的常驻物理内存的最大值。 open files (-n) 1024 #一个任务最多可以同时打开1024的文件。 pipe size (512 bytes, -p) 8 #管道的最大空间为4096字节。 POSIX message queues (bytes, -q) 819200 #POSIX的消息队列的最大值为819200字节。 real-time priority (-r) 0 stack size (kbytes, -s) 10240 #进程的栈的最大值为10240字节。 cpu time (seconds, -t) unlimited #进程使用的CPU时间。 max user processes (-u) 98304 #当前用户同时打开的进程（包括线程）的最大个数为98304。 virtual memory (kbytes, -v) unlimited #没有限制进程的最大地址空间。 file locks (-x) unlimited #所能锁住的文件的最大个数没有限制。", "class": "Shell内建命令"}
{"title": "enable命令", "语法": "enable(选项)(参数)", "选项": "-n：关闭指定的内部命令； -a：显示所有激活的内部命令； -f：从指定文件中读取内部命令。", "参数": "内部命令：指定要关闭或激活的内部命令。", "实例": "使用enable命令显示所有激活的内部命令：", "class": "Shell内建命令"}
{"title": "declare命令", "语法": "declare(选项)(参数)", "选项": "+/-：\"-\"可用来指定变量的属性，\"+\"则是取消变量所设的属性； -f：仅显示函数； r：将变量设置为只读； x：指定的变量会成为环境变量，可供shell以外的程序来使用； i：[设置值]可以是数值，字符串或运算式。", "参数": "shell变量：声明shell变量，格式为“变量名=值”。", "实例": "首先使用declare命令定义shell变量\"test\"，并且将其值设置为\"man.linuxde.net\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "wait命令", "语法": "wait(参数)", "参数": "进程或作业标示：指定进程号或者作业号。", "实例": "使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：", "class": "Shell内建命令"}
{"title": "builtin命令", "语法": "builtin(参数)", "参数": "shell内部命令：指定需要执行的shell内部命令。", "实例": "使用builtin命令执行shell内部命alias显示命令别名，输入如下命令：", "class": "Shell内建命令"}
{"title": "shopt命令", "语法": "shopt(选项)(参数)", "选项": "-s：激活指定的shell行为选项； -u：关闭指定的shell行为选项。", "参数": "shell选项：指定要操作的shell选项。", "实例": "使用shopt命令显示当前所有可以设置的shell操作选项，输入如下命令：", "class": "Shell内建命令"}
{"title": "exit命令", "语法": "exit(参数)", "参数": "返回值：指定shell返回值。", "实例": "退出当前shell：", "class": "Shell内建命令"}
{"title": "jobs命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "Shell内建命令"}
{"title": "help命令", "语法": "help(选项)(参数)", "选项": "-s：输出短格式的帮助信息。仅包括命令格式。", "参数": "内部命令：指定需要显示帮助信息的shell内部命令。", "实例": "使用help命令显示shell内部shopt命令的帮助信息，输入如下命令：", "class": "Shell内建命令"}
{"title": "history命令", "语法": "history(选项)(参数)", "选项": "-c：清空当前历史命令； -a：将历史命令缓冲区中命令写入历史命令文件中； -r：将历史命令文件中的命令读入当前历史命令缓冲区； -w：将当前历史命令缓冲区命令写入历史命令文件中。", "参数": "n：打印最近的n条历史命令。", "实例": "使用history命令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "logout命令", "语法": "logout", "class": "Shell内建命令"}
{"title": "export命令", "语法": "export(选项)(参数)", "选项": "-f：代表[变量名称]中为函数名称； -n：删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中； -p：列出所有的shell赋予程序的环境变量。", "参数": "变量：指定要输出或者删除的环境变量。", "实例": "一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。查看已经存在的环境变量：", "class": "Shell内建命令"}
{"title": "exec命令", "语法": "exec(选项)(参数)", "选项": "-c：在空环境中执行指定的命令。", "参数": "指令：要执行的指令和相应的参数。", "实例": "首先使用echo命令将文本“Linux C++”进行输出，输入如下命令：", "class": "Shell内建命令"}
{"title": "env命令", "语法": "env(选项)(参数)", "选项": "-i：开始一个新的空的环境； -u<变量名>：从当前环境中删除指定的变量。", "参数": "变量定义：定义在新的环境中变量，定义多个变量定义用空格隔开。格式为“变量名=值”；\n指定：指定要执行的指令和参数。", "实例": "[root@localhost ~]# env hostname=LinServ-1 TERM=linux SHELL=/bin/bash HISTSIZE=1000 SSH_CLIENT=192.168.2.111 2705 22 SSH_TTY=/dev/pts/0 USER=root LS_COLORS=no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35: mail=/var/spool/mail/root PATH=/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin INPUTRC=/etc/inputrc pwd=/root LANG=zh_CN.UTF-8 SHLVL=1 HOME=/root logname=root SSH_CONNECTION=192.168.2.111 2705 192.168.2.2 22 LESSOPEN=|/usr/bin/lesspipe.sh %s G_BROKEN_FILENAMES=1 _=/bin/env", "class": "Shell内建命令"}
{"title": "unset命令", "语法": "unset(选项)(参数)", "选项": "-f：仅删除函数； -v：仅删除变量。", "参数": "shell变量或函数：指定要删除的shell变量或shell函数。", "实例": "使用unset命令将前面所创建的环境变量mylove及其对应的值进行删除，输入如下命令：", "class": "Shell内建命令"}
{"title": "kill命令", "语法": "kill(选项)(参数)", "选项": "-a：当处理当前进程时，不限制命令名和进程号的对应关系； -l <信息编号>：若不加<信息编号>选项，则-l参数会列出全部的信息名称； -p：指定kill 命令只打印相关进程的进程号，而不发送任何信号； -s <信息名称或编号>：指定要送出的信息； -u：指定用户。", "参数": "进程或作业识别号：指定要删除的进程或作业。", "实例": "列出所有信号名称：", "class": "Shell内建命令"}
{"title": "unalias命令", "语法": "unalias(选项)(参数)", "选项": "-a：取消所有命令别名。", "参数": "命令别名：指定要取消的命令别名。", "实例": "使用unalias命令将已经设置的命令别名\"cc\"取消，输入如下命令：", "class": "Shell内建命令"}
{"title": "type命令", "语法": "type(选项)(参数)", "选项": "-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”； -p：如果给出的指令为外部指令，则显示其绝对路径； -a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。", "参数": "指令：要显示类型的指令。", "实例": "[root@localhost ~]# type ls ls is aliased to `ls --color=tty' [root@localhost ~]# type cd cd is a shell builtin [root@localhost ~]# type date date is /bin/date [root@localhost ~]# type mysql mysql is /usr/bin/mysql [root@localhost ~]# type nginx -bash: type: nginx: not found [root@localhost ~]# type if if is a shell keyword [root@localhost ~]# type which which is aliased to `alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde' [root@localhost ~]# type -a cd cd is a shell builtin [root@localhost ~]# type -a grep grep is /bin/grep", "class": "Shell内建命令"}
{"title": "fg命令", "语法": "fg(参数)", "参数": "作业标识：指定要放到前台的作业标识号。", "实例": "使用fg命令将任务号为1的任务从后台执行转换到前台执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "alias命令", "语法": "alias(选项)(参数)", "选项": "-p：打印已经设置的命令别名。", "参数": "命令别名设置：定义命令别名，格式为“命令别名=‘实际命令’”。", "实例": "alias 的基本使用方法为：", "class": "Shell内建命令"}
{"title": "基於 Android 的遠程系統管理，Cura 0.4.0 發布命令", "class": "软件开发"}
{"title": "谷歌VR團隊再獲關鍵人物：曾開發Vive最好應用命令", "class": "软件开发"}
{"title": "一起高效写代码，软件开发平台「CircleCI」获C轮3100万美元融资命令", "class": "软件开发"}
{"title": "syslog命令", "使用方法": "在/var/log中创建并写入日志信息是由syslog协议处理的，是由守护进程sylogd负责执行。每个标准的进程都可以用syslog记录日志。可以使用logger命令通过syslogd记录日志。", "class": "系统安全"}
{"title": "openssl命令", "实例": "1、消息摘要算法应用例子", "class": "系统安全"}
{"title": "logwatch命令", "语法": "logwatch(选项)", "选项": "--detail<报告详细程度>：指定日志报告的详细程度； --logfile<日志文件>：仅处理指定的日志文件； --service<服务名>：仅处理指定服务的日志文件； --print：打印结果到标准输出； --mailto<邮件地址>：将结果发送到指定邮箱； --range<日期范围>：指定处理日志的日期范围； --archives：处理归档日志文件； --debug<调试等级>：调试模式； --save<文件名>：将结果保存到指定文件中，而不显示或者发送到指定邮箱； --logdir<目录>：指定查找日志文件的目录，而不使用默认的日志目录； --hostname<主机名>：指定在日志报告中使用的主机名，不使用系统默认的主机名； --numeric：在报告中显示ip地址而不是主机名； --help：显示指令的帮助信息。", "实例": "检查你的主机上是否已经存在Logwatch（Redhat默认已经安装了Logwatch，不过版本比较旧）：", "class": "系统安全"}
{"title": "lastb命令", "语法": "lastb(选项)(参数)", "选项": "-a：把从何处登入系统的主机名称或ip地址显示在最后一行； -d：将IP地址转换成主机名称； -f<记录文件>：指定记录文件； -n<显示列数>或-<显示列数>：设置列出名单的显示列数； -R：不显示登入系统的主机名称或IP地址； -x：显示系统关机，重新开机，以及执行等级的改变等信息。", "参数": "用户名：显示中的用户的登录列表；\n终端：显示从指定终端的登录列表。", "实例": "首次运行lastb命令会报下的错误：", "class": "系统安全"}
{"title": "sudo命令", "语法": "sudo(选项)(参数)", "选项": "-b：在后台执行指令； -h：显示帮助； -H：将HOME环境变量设为新身份的HOME环境变量； -k：结束密码的有效期限，也就是下次再执行sudo时便需要输入密码；。 -l：列出目前用户可执行与无法执行的指令； -p：改变询问密码的提示符号； -s<shell>：执行指定的shell； -u<用户>：以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份； -v：延长密码有效期限5分钟； -V ：显示版本信息。", "参数": "指令：需要运行的指令和对应的参数。", "实例": "配置sudo必须通过编辑/etc/sudoers文件，而且只有超级用户才可以修改它，还必须使用visudo编辑。之所以使用visudo有两个原因，一是它能够防止两个用户同时修改它；二是它也能进行有限的语法检查。所以，即使只有你一个超级用户，你也最好用visudo来检查一下语法。", "class": "系统安全"}
{"title": "lastlog命令", "语法": "lastlog(选项)", "选项": "-b<天数>：显示指定天数前的登录信息； -h：显示召集令的帮助信息； -t<天数>：显示指定天数以来的登录信息； -u<用户名>：显示指定用户的最近登录信息。", "实例": "lastlog Username Port From Latest root pts/0 221.6.45.34 Tue Dec 17 09:40:48 +0800 2013 bin **Never logged in** daemon **Never logged in** adm **Never logged in** lp **Never logged in** sync **Never logged in** shutdown **Never logged in** halt **Never logged in** mail **Never logged in** news **Never logged in** uucp **Never logged in** operator **Never logged in** games **Never logged in** gopher **Never logged in** ftp **Never logged in** nobody **Never logged in** vcsa **Never logged in** ntp **Never logged in** sshd **Never logged in** nscd **Never logged in** ldap **Never logged in** postfix **Never logged in** www **Never logged in** mysql **Never logged in**", "class": "系统安全"}
{"title": "logrotate命令", "语法": "logrotate(选项)(参数)", "选项": "-?或--help：在线帮助； -d或--debug：详细显示指令执行过程，便于排错或了解程序执行的情况； -f或--force ：强行启动记录文件维护操作，纵使logrotate指令认为没有需要亦然； -s<状态文件>或--state=<状态文件>：使用指定的状态文件； -v或--version：显示指令执行过程； -usage：显示指令基本用法。", "参数": "配置文件：指定lograote指令的配置文件。", "class": "系统安全"}
{"title": "chroot命令", "语法": "chroot(选项)(参数)", "选项": "--help：在线帮助； --version：显示版本信息。", "参数": "目录：指定新的根目录；\n指令：指定要执行的指令。", "实例": "将target作为根目录（运行其中的/bin/sh）:", "class": "系统安全"}
{"title": "logsave命令", "语法": "logsave(选项)(参数)", "选项": "-a：追加信息到指定的日志文件中。", "参数": "日志文件：指定记录运行信息的日志文件；\n指令：需要执行的指令。", "class": "系统安全"}
{"title": "last命令", "语法": "last(选项)(参数)", "选项": "-a：把从何处登入系统的主机名称或ip地址，显示在最后一行； -d：将IP地址转换成主机名称； -f <记录文件>：指定记录文件。 -n <显示列数>或-<显示列数>：设置列出名单的显示列数； -R：不显示登入系统的主机名称或IP地址； -x：显示系统关机，重新开机，以及执行等级的改变等信息。", "参数": "用户名：显示用户登录列表；\n终端：显示从指定终端的登录列表。", "实例": "last命令用了显示用户登录情况，以下是直接显示固定行数的记录：", "class": "系统安全"}
{"title": "ipcrm命令", "语法": "ipcrm [ -m SharedMemoryID ] [ -M SharedMemoryKey ] [ -q MessageID ] [ -Q MessageKey ] [ -s SemaphoreID ] [ -S SemaphoreKey ]", "选项": "-m SharedMemory id 删除共享内存标识 SharedMemoryID。与 SharedMemoryID 有关联的共享内存段以及数据结构都会在最后一次拆离操作后删除。 -M SharedMemoryKey 删除用关键字 SharedMemoryKey 创建的共享内存标识。与其相关的共享内存段和数据结构段都将在最后一次拆离操作后删除。 -q MessageID 删除消息队列标识 MessageID 和与其相关的消息队列和数据结构。 -Q MessageKey 删除由关键字 MessageKey 创建的消息队列标识和与其相关的消息队列和数据结构。 -s SemaphoreID 删除信号量标识 SemaphoreID 和与其相关的信号量集及数据结构。 -S SemaphoreKey 删除由关键字 SemaphoreKey 创建的信号标识和与其相关的信号量集和数据结构。", "示例": "如果要删除和 SharedMemoryID 18602 相关的共享内存段，请输入：", "class": "进程和作业管理"}
{"title": "systemctl命令", "实例": "1.启动nfs服务", "class": "进程和作业管理"}
{"title": "w命令", "语法": "w(选项)(参数)", "选项": "-h：不打印头信息； -u：当显示当前进程和cpu时间时忽略用户名； -s：使用短输出格式； -f：显示用户从哪登录； -V：显示版本信息。", "参数": "用户：仅显示指定用户。", "实例": "w 20:39:37 up 136 days, 3:58, 1 user, load average: 0.00, 0.00, 0.00 USER TTY FROM login@ IDLE JCPU PCPU WHAT root pts/0 222.94.97.122 20:39 1.00s 0.00s 0.00s w", "class": "进程和作业管理"}
{"title": "watch命令", "语法": "watch(选项)(参数)", "选项": "-n：指定指令执行的间隔时间（秒）； -d：高亮显示指令输出信息不同之处； -t：不显示标题。", "参数": "指令：需要周期性执行的指令。", "实例": "#watch uptime #watch -t uptime #watch -d -n 1 netstat -ntlp #watch -d 'ls -l | fgrep goface' //监测goface的文件 #watch -t -differences=cumulative uptime #watch -n 60 from //监控mail #watch -n 1 \"df -i;df\" //监测磁盘inode和block数目变化情况", "class": "进程和作业管理"}
{"title": "pidof命令", "语法": "pidof(选项)(参数)", "选项": "-s：仅返回一个进程号； -c：仅显示具有相同“root”目录的进程； -x：显示由脚本开启的进程； -o：指定不显示的进程ID。", "参数": "进程名称：指定要查找的进程名称。", "实例": "pidof nginx 13312 5371 pidof crond 1509 pidof init 1", "class": "进程和作业管理"}
{"title": "skill命令", "语法": "skill(选项)", "选项": "-f：快速模式； -i：交互模式，每一步操作都需要确认； -v：冗余模式； -w：激活模式； -V：显示版本号； -t：指定开启进程的终端号； -u：指定开启进程的用户； -p：指定进程的id号； -c：指定开启进程的指令名称。", "实例": "如果您发现了一个占用大量CPU和内存的进程，但又不想停止它，该怎么办？考虑下面的top命令输出：", "class": "进程和作业管理"}
{"title": "pgrep命令", "语法": "pgrep(选项)(参数)", "选项": "-o：仅显示找到的最小（起始）进程号； -n：仅显示找到的最大（结束）进程号； -l：显示进程名称； -P：指定父进程号； -g：指定进程组； -t：指定开启进程的终端； -u：指定进程的有效用户ID。", "参数": "进程名称：指定要查找的进程名称，同时也支持类似grep指令中的匹配模式。", "实例": "pgrep -lo httpd 4557 httpd [root@localhost ~]# pgrep -ln httpd 4566 httpd [root@localhost ~]# pgrep -l httpd 4557 httpd 4560 httpd 4561 httpd 4562 httpd 4563 httpd 4564 httpd 4565 httpd 4566 httpd [root@localhost ~]# pgrep httpd 4557 4560 4561 4562 4563 4564 4565 4566", "class": "进程和作业管理"}
{"title": "renice命令", "语法": "renice(选项)(参数)", "选项": "-g：指定进程组id； -p<程序识别码>：改变该程序的优先权等级，此参数为预设值。 -u：指定开启进程的用户名。", "参数": "进程号：指定要修改优先级的进程。", "实例": "将行程id为987及32的行程与行程拥有者为daemon及root的优先序号码加1：", "class": "进程和作业管理"}
{"title": "nohup命令", "语法": "nohup(选项)(参数)", "选项": "--help：在线帮助； --version：显示版本信息。", "参数": "程序及选项：要运行的程序及选项。", "实例": "使用nohup命令提交作业，如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中，除非另外指定了输出文件：", "class": "进程和作业管理"}
{"title": "ipcs命令", "语法": "ipcs(选项)", "选项": "-a：显示全部可显示的信息； -q：显示活动的消息队列信息； -m：显示活动的共享内存信息； -s：显示活动的信号量信息。", "实例": "ipcs -a ------ Shared Memory Segments -------- key shmid owner perms bytes nattch status 0x7401833d 2654208 root 600 4 0 0x00000000 3145729 root 600 4194304 9 dest 0x7401833c 2621442 root 600 4 0 0xd201012b 3080195 root 600 1720 2", "class": "进程和作业管理"}
{"title": "pmap命令", "语法": "pmap(选项)(参数)", "选项": "-x：显示扩展格式； -d：显示设备格式； -q：不显示头尾行； -V：显示指定版本。", "参数": "进程号：指定需要显示内存映射关系的进程号，可以是多个进程号。", "实例": "pidof nginx 13312 5371 pmap -x 5371 5371: nginx: worker process Address Kbytes RSS Dirty Mode Mapping 0000000000400000 564 344 0 r-x-- nginx 000000000068c000 68 68 60 rw--- nginx 000000000069d000 56 12 12 rw--- [ anon ] 000000000a0c8000 1812 1684 1684 rw--- [ anon ] 0000003ac0a00000 112 40 0 r-x-- ld-2.5.so 0000003ac0c1c000 4 4 4 r---- ld-2.5.so 0000003ac0c1d000 4 4 4 rw--- ld-2.5.so 0000003ac0e00000 1340 284 0 r-x-- libc-2.5.so 0000003ac0f4f000 2044 0 0 ----- libc-2.5.so 0000003ac114e000 16 16 8 r---- libc-2.5.so 0000003ac1152000 4 4 4 rw--- libc-2.5.so 0000003ac1153000 20 20 20 rw--- [ anon ] 0000003ac1200000 8 4 0 r-x-- libdl-2.5.so 0000003ac1202000 2048 0 0 ----- libdl-2.5.so 0000003ac1402000 4 4 4 r---- libdl-2.5.so 0000003ac1403000 4 4 4 rw--- libdl-2.5.so 0000003ac1600000 84 0 0 r-x-- libselinux.so.1 0000003ac1615000 2048 0 0 ----- libselinux.so.1 0000003ac1815000 8 8 8 rw--- libselinux.so.1 0000003ac1817000 4 4 4 rw--- [ anon ] 0000003ac1a00000 236 0 0 r-x-- libsepol.so.1 0000003ac1a3b000 2048 0 0 ----- libsepol.so.1 0000003ac1c3b000 4 4 4 rw--- libsepol.so.1 0000003ac1c3c000 40 0 0 rw--- [ anon ] 0000003ac1e00000 88 44 0 r-x-- libpthread-2.5.so 0000003ac1e16000 2048 0 0 ----- libpthread-2.5.so 0000003ac2016000 4 4 4 r---- libpthread-2.5.so 0000003ac2017000 4 4 4 rw--- libpthread-2.5.so 0000003ac2018000 16 4 4 rw--- [ anon ] 0000003ac2600000 80 52 0 r-x-- libz.so.1.2.3 0000003ac2614000 2044 0 0 ----- libz.so.1.2.3 0000003ac2813000 4 4 4 rw--- libz.so.1.2.3 0000003ac2a00000 36 4 0 r-x-- libcrypt-2.5.so 0000003ac2a09000 2044 0 0 ----- libcrypt-2.5.so 0000003ac2c08000 4 4 4 r---- libcrypt-2.5.so 0000003ac2c09000 4 4 4 rw--- libcrypt-2.5.so 0000003ac2c0a000 184 0 0 rw--- [ anon ] 0000003ac3600000 8 0 0 r-x-- libkeyutils-1.2.so 0000003ac3602000 2044 0 0 ----- libkeyutils-1.2.so 0000003ac3801000 4 4 4 rw--- libkeyutils-1.2.so 0000003ac3a00000 68 0 0 r-x-- libresolv-2.5.so 0000003ac3a11000 2048 0 0 ----- libresolv-2.5.so 0000003ac3c11000 4 4 4 r---- libresolv-2.5.so 0000003ac3c12000 4 4 4 rw--- libresolv-2.5.so 0000003ac3c13000 8 0 0 rw--- [ anon ] 0000003ac3e00000 8 0 0 r-x-- libcom_err.so.2.1 0000003ac3e02000 2044 0 0 ----- libcom_err.so.2.1 0000003ac4001000 4 4 4 rw--- libcom_err.so.2.1 0000003ac4200000 1204 8 0 r-x-- libcrypto.so.0.9.8e 0000003ac432d000 2044 0 0 ----- libcrypto.so.0.9.8e 0000003ac452c000 132 88 12 rw--- libcrypto.so.0.9.8e 0000003ac454d000 16 12 12 rw--- [ anon ] 0000003ac4600000 176 0 0 r-x-- libgssapi_krb5.so.2.2 0000003ac462c000 2048 0 0 ----- libgssapi_krb5.so.2.2 0000003ac482c000 8 8 8 rw--- libgssapi_krb5.so.2.2 0000003ac4a00000 144 0 0 r-x-- libk5crypto.so.3.1 0000003ac4a24000 2044 0 0 ----- libk5crypto.so.3.1 0000003ac4c23000 8 8 8 rw--- libk5crypto.so.3.1 0000003ac4e00000 32 0 0 r-x-- libkrb5support.so.0.1 0000003ac4e08000 2044 0 0 ----- libkrb5support.so.0.1 0000003ac5007000 4 4 4 rw--- libkrb5support.so.0.1 0000003ac5200000 580 0 0 r-x-- libkrb5.so.3.3 0000003ac5291000 2048 0 0 ----- libkrb5.so.3.3 0000003ac5491000 16 16 12 rw--- libkrb5.so.3.3 0000003ac5a00000 288 4 0 r-x-- libssl.so.0.9.8e 0000003ac5a48000 2048 0 0 ----- libssl.so.0.9.8e 0000003ac5c48000 24 16 12 rw--- libssl.so.0.9.8e 00002b5751808000 8 8 8 rw--- [ anon ] 00002b5751810000 108 36 0 r-x-- libpcre.so.1.2.0 00002b575182b000 2044 0 0 ----- libpcre.so.1.2.0 00002b5751a2a000 4 4 4 rw--- libpcre.so.1.2.0 00002b5751a2b000 28 28 28 rw--- [ anon ] 00002b5751a32000 40 20 0 r-x-- libnss_files-2.5.so 00002b5751a3c000 2044 0 0 ----- libnss_files-2.5.so 00002b5751c3b000 4 4 4 r---- libnss_files-2.5.so 00002b5751c3c000 4 4 4 rw--- libnss_files-2.5.so 00002b5751c3d000 4 4 4 rw-s- zero (deleted) 00002b5751c3e000 20012 20000 20000 rw--- [ anon ] 00007fffbf2ce000 84 20 20 rw--- [ stack ] 00007fffbf35e000 12 0 0 r-x-- [ anon ] ffffffffff600000 8192 0 0 ----- [ anon ] ---------------- ------ ------ ------ total kB 72880 22940 22000", "class": "进程和作业管理"}
{"title": "nice命令", "语法": "nice(选项)(参数)", "选项": "-n：指定进程的优先级（整数）。", "参数": "指令及选项：需要运行的指令及其他选项。", "实例": "新建一个进程并设置优先级，将当前目录下的documents目录打包，但不希望tar占用太多CPU：", "class": "进程和作业管理"}
{"title": "service命令", "语法": "service(选项)(参数)", "选项": "-h：显示帮助信息； --status-all：显示所服务的状态。", "参数": "服务名：自动要控制的服务名，即/etc/init.d目录下的脚本文件名；\n控制命令：系统服务脚本支持的控制命令。", "实例": "当修改了主机名、ip地址等信息时，经常需要把网络重启使之生效。", "class": "进程和作业管理"}
{"title": "pstree命令", "语法": "pstree(选项)", "选项": "-a：显示每个程序的完整指令，包含路径，参数或是常驻服务的标示； -c：不使用精简标示法； -G：使用VT100终端机的列绘图字符； -h：列出树状图时，特别标明现在执行的程序； -H<程序识别码>：此参数的效果和指定\"-h\"参数类似，但特别标明指定的程序； -l：采用长列格式显示树状图； -n：用程序识别码排序。预设是以程序名称来排序； -p：显示程序识别码； -u：显示用户名称； -U：使用UTF-8列绘图字符； -V：显示版本信息。", "实例": "显示当前所有进程的进程号和进程id", "class": "进程和作业管理"}
{"title": "telint命令", "语法": "telint(选项)(参数)", "选项": "-t：指定等待的秒数。", "参数": "运行等级：指定要切换的运行等级。", "class": "进程和作业管理"}
{"title": "killall命令", "语法": "killall(选项)(参数)", "选项": "-e：对长名称进行精确匹配； -l：忽略大小写的不同； -p：杀死进程所属的进程组； -i：交互式杀死进程，杀死进程前需要进行确认； -l：打印所有已知信号列表； -q：如果没有进程被杀死。则不输出任何信息； -r：使用正规表达式匹配要杀死的进程名称； -s：用指定的进程号代替默认信号“SIGTERM”； -u：杀死指定用户的进程。", "参数": "进程名称：指定要杀死的进程名称。", "实例": "杀死所有同名进程", "class": "进程和作业管理"}
{"title": "runlevel命令", "语法": "runlevel", "知识扩展": "linux操作系统自从开始启动至启动完毕需要经历几个不同的阶段，这几个阶段就叫做runlevel，同样，当linux操作系统关闭时也要经历另外几个不同的runlevel，下面我们就准备详细介绍一下runlevel，并向您展示一些小技巧来让您的linux系统避免不必要的重启动。", "class": "进程和作业管理"}
{"title": "batch命令", "语法": "batch(选项)(参数)", "选项": "-f：指定包含具体指令的任务文件； -q：指定新任务的队列名称； -m：任务执行完后向用户发送E-mail。", "参数": "日期时间：指定任务执行的日期时间。", "实例": "batch at> echo 1234 at> <EOT> job 5 at Sun Apr 28 08:49:00 2013", "class": "进程和作业管理"}
{"title": "ps命令", "语法": "ps(选项)", "选项": "-a：显示所有终端机下执行的程序，除了阶段作业领导者之外。 a：显示现行终端机下的所有程序，包括其他用户的程序。 -A：显示所有程序。 -c：显示CLS和PRI栏位。 c：列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。 -C<指令名称>：指定执行指令的名称，并列出该指令的程序的状况。 -d：显示所有程序，但不包括阶段作业领导者的程序。 -e：此选项的效果和指定\"A\"选项相同。 e：列出程序时，显示每个程序所使用的环境变量。 -f：显示UID,PPIP,C与STIME栏位。 f：用ASCII字符显示树状结构，表达程序间的相互关系。 -g<群组名称>：此选项的效果和指定\"-G\"选项相同，当亦能使用阶段作业领导者的名称来指定。 g：显示现行终端机下的所有程序，包括群组领导者的程序。 -G<群组识别码>：列出属于该群组的程序的状况，也可使用群组名称来指定。 h：不显示标题列。 -H：显示树状结构，表示程序间的相互关系。 -j或j：采用工作控制的格式显示程序状况。 -l或l：采用详细的格式来显示程序状况。 L：列出栏位的相关信息。 -m或m：显示所有的执行绪。 n：以数字来表示USER和WCHAN栏位。 -N：显示所有的程序，除了执行ps指令终端机下的程序之外。 -p<程序识别码>：指定程序识别码，并列出该程序的状况。 p<程序识别码>：此选项的效果和指定\"-p\"选项相同，只在列表格式方面稍有差异。 r：只列出现行终端机正在执行中的程序。 -s<阶段作业>：指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。 s：采用程序信号的格式显示程序状况。 S：列出程序时，包括已中断的子程序资料。 -t<终端机编号>：指定终端机编号，并列出属于该终端机的程序的状况。 t<终端机编号>：此选项的效果和指定\"-t\"选项相同，只在列表格式方面稍有差异。 -T：显示现行终端机下的所有程序。 -u<用户识别码>：此选项的效果和指定\"-U\"选项相同。 u：以用户为主的格式来显示程序状况。 -U<用户识别码>：列出属于该用户的程序的状况，也可使用用户名称来指定。 U<用户名称>：列出属于该用户的程序的状况。 v：采用虚拟内存的格式显示程序状况。 -V或V：显示版本信息。 -w或w：采用宽阔的格式来显示程序状况。　 x：显示所有程序，不以终端机来区分。 X：采用旧式的Linux i386登陆格式显示程序状况。 -y：配合选项\"-l\"使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。 -<程序识别码>：此选项的效果和指定\"p\"选项相同。 --cols<每列字符数>：设置每列的最大字符数。 --columns<每列字符数>：此选项的效果和指定\"--cols\"选项相同。 --cumulative：此选项的效果和指定\"S\"选项相同。 --deselect：此选项的效果和指定\"-N\"选项相同。 --forest：此选项的效果和指定\"f\"选项相同。 --headers：重复显示标题列。 --help：在线帮助。 --info：显示排错信息。 --lines<显示列数>：设置显示画面的列数。 --no-headers：此选项的效果和指定\"h\"选项相同，只在列表格式方面稍有差异。 --group<群组名称>：此选项的效果和指定\"-G\"选项相同。 --Group<群组识别码>：此选项的效果和指定\"-G\"选项相同。 --pid<程序识别码>：此选项的效果和指定\"-p\"选项相同。 --rows<显示列数>：此选项的效果和指定\"--lines\"选项相同。 --sid<阶段作业>：此选项的效果和指定\"-s\"选项相同。 --tty<终端机编号>：此选项的效果和指定\"-t\"选项相同。 --user<用户名称>：此选项的效果和指定\"-U\"选项相同。 --User<用户识别码>：此选项的效果和指定\"-U\"选项相同。 --version：此选项的效果和指定\"-V\"选项相同。 --widty<每列字符数>：此选项的效果和指定\"-cols\"选项相同。", "class": "进程和作业管理"}
{"title": "init命令", "语法": "init(选项)(参数)", "选项": "-b：不执行相关脚本而直接进入单用户模式； -s：切换到单用户模式。", "参数": "运行等级：指定Linux系统要切换到的运行等级。", "实例": "几个常用的命令", "class": "进程和作业管理"}
{"title": "crontab命令", "语法": "crontab(选项)(参数)", "选项": "-e：编辑该用户的计时器设置； -l：列出该用户的计时器设置； -r：删除该用户的计时器设置； -u<用户名称>：指定要设定计时器的用户名称。", "参数": "crontab文件：指定包含待执行任务的crontab文件。", "知识扩展": "Linux下的任务调度分为两类：系统任务调度和用户任务调度。", "实例": "每1分钟执行一次command", "class": "进程和作业管理"}
{"title": "pkill命令", "语法": "pkill(选项)(参数)", "选项": "-o：仅向找到的最小（起始）进程号发送信号； -n：仅向找到的最大（结束）进程号发送信号； -P：指定父进程号发送信号； -g：指定进程组； -t：指定开启进程的终端。", "参数": "进程名称：指定要查找的进程名称，同时也支持类似grep指令中的匹配模式。", "实例": "pgrep -l gaim 2979 gaim pkill gaim", "class": "进程和作业管理"}
{"title": "atrm命令", "语法": "atrm(选项)(参数)", "选项": "-V：显示版本号。", "参数": "任务号：指定待执行队列中要删除的任务。", "实例": "删除已经排队的任务", "class": "进程和作业管理"}
{"title": "atq命令", "语法": "atq(选项)", "选项": "-V：显示版本号； -q：查询指定队列的任务。", "实例": "at now + 10 minutes at> echo 1111 at> <eot> job 3 at Fri Apr 26 12:56:00 2013 atq 3 Fri Apr 26 12:56:00 2013 a root", "class": "进程和作业管理"}
{"title": "at命令", "语法": "at(选项)(参数)", "选项": "-f：指定包含具体指令的任务文件； -q：指定新任务的队列名称； -l：显示待执行任务的列表； -d：删除指定的待执行任务； -m：任务执行完成后向用户发送E-mail。", "参数": "日期时间：指定任务执行的日期时间。", "实例": "三天后的下午 5 点锺执行/bin/ls：", "class": "进程和作业管理"}
{"title": "chage命令", "语法": "chage [选项] 用户名", "选项": "-m：密码可更改的最小天数。为零时代表任何时候都可以更改密码。 -M：密码保持有效的最大天数。 -w：用户密码到期前，提前收到警告信息的天数。 -E：帐号到期的日期。过了这天，此帐号将不可用。 -d：上一次更改的日期。 -i：停滞时期。如果一个密码已过期这些天，那么此帐号将不可用。 -l：例出当前的设置。由非特权用户来确定他们的密码或帐号何时过期。", "实例": "可以编辑/etc/login.defs来设定几个参数，以后设置口令默认就按照参数设定为准：", "class": "用户和工作组管理"}
{"title": "id命令", "语法": "id [-gGnru][--help][--version][用户名称]", "选项": "-g或--group 　 显示用户所属群组的ID。 -G或--groups 显示用户所属附加群组的ID。 -n或--name 　 显示用户，所属群组或附加群组的名称。 -r或--real 　 显示实际ID。 -u或--user 　 显示用户ID。 -help 　 显示帮助。 -version 　 显示版本信息。", "实例": "[root@localhost ~]# id uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)", "class": "用户和工作组管理"}
{"title": "grpconv命令", "语法": "grpconv", "实例": "设置cdy组密码", "class": "用户和工作组管理"}
{"title": "pwunconv命令", "语法": "pwunconv", "实例": "pwunconv //关闭影子密码 cat /etc/passwd | grep test //发现密码已经在passwd文件中了 test:$6$nYOEWamm$bz07nlv/.RgJufb3FAqJJeULfwybzgxmrWqbk7O4vI0KsT6N.ujrh6dDIUcAJdfjksyuyAFDPIngZeD3cgcf.0:3001:3001::/home/test:/bin/sh ls /etc/shadow //查看影子文件，提示没有这个文件或目录 ls: cannot access /etc/shadow: No such file or directory", "class": "用户和工作组管理"}
{"title": "pwconv命令", "语法": "pwconv", "实例": "cat /etc/passwd | grep test test:x:3001:3001::/home/test:/bin/sh", "class": "用户和工作组管理"}
{"title": "nologin命令", "语法": "nologin", "实例": "Linux禁止用户登录：", "class": "用户和工作组管理"}
{"title": "chpasswd命令", "语法": "chpasswd(选项)", "选项": "-e：输入的密码是加密后的密文； -h：显示帮助信息并退出； -m：当被支持的密码未被加密时，使用MD5加密代替DES加密。", "实例": "先创建用户密码对应文件，格式为username:password，如abc:abc123，必须以这种格式来书写，并且不能有空行，保存成文本文件user.txt，然后执行chpasswd命令：", "class": "用户和工作组管理"}
{"title": "grpunconv命令", "语法": "grpunconv", "实例": "未关闭的情况", "class": "用户和工作组管理"}
{"title": "grpck命令", "语法": "grpck(选项)", "选项": "-r：只读模式； -s：排序组id。", "实例": "对组账号和影子文件进行验证：", "class": "用户和工作组管理"}
{"title": "groupdel命令", "语法": "groupdel(参数)", "参数": "组：要删除的工作组名。", "实例": "groupadd damon //创建damon工作组 groupdel damon //删除这个工作组", "class": "用户和工作组管理"}
{"title": "chsh命令", "语法": "chsh(选项)(参数)", "选项": "-s<shell 名称>或--shell<shell 名称>：更改系统预设的shell环境。； -l或--list-shells：列出目前系统可用的shell清单； -u或--help：在线帮助； -v或-version：显示版本信息。", "参数": "用户名：要改变默认shell的用户。", "实例": "查看系统安装了哪些shell的两种方法：", "class": "用户和工作组管理"}
{"title": "gpasswd命令", "语法": "gpasswd(选项)(参数)", "选项": "-a：添加用户到组； -d：从组删除用户； -A：指定管理员； -M：指定组成员和-A的用途差不多； -r：删除密码； -R：限制用户登入组，只有组中的成员才可以用newgrp加入该组。", "参数": "组：指定要管理的工作组。", "实例": "如系统有个peter账户，该账户本身不是groupname群组的成员，使用newgrp需要输入密码即可。", "class": "用户和工作组管理"}
{"title": "pwck命令", "语法": "pwck(选项)(参数)", "选项": "-q：仅报告错误信息； -s：以用户id排序文件“/etc/passwd”和“/etc/shadow”; -r：只读方式运行指令。", "参数": "密码文件：指定密码文件的路径；\n影子文件：指定影子文件的路径。", "实例": "pwck /etc/passwd user 'lp': directory '/var/spool/lpd' does not exist user 'news': directory '/var/spool/news' does not exist user 'uucp': directory '/var/spool/uucp' does not exist user 'www-data': directory '/var/www' does not exist user 'list': directory '/var/list' does not exist user 'irc': directory '/var/run/ircd' does not exist user 'gnats': directory '/var/lib/gnats' does not exist user 'nobody': directory '/nonexistent' does not exist user 'syslog': directory '/home/syslog' does not exist user 'couchdb': directory '/var/lib/couchdb' does not exist user 'speech-dispatcher': directory '/var/run/speech-dispatcher' does not exist user 'usbmux': directory '/home/usbmux' does not exist user 'haldaemon': directory '/var/run/hald' does not exist user 'pulse': directory '/var/run/pulse' does not exist user 'saned': directory '/home/saned' does not exist user 'hplip': directory '/var/run/hplip' does not exist pwck：无改变", "class": "用户和工作组管理"}
{"title": "groupmod命令", "语法": "groupmod(选项)(参数)", "选项": "-g<群组识别码>：设置欲使用的群组识别码； -o：重复使用群组识别码； -n<新群组名称>：设置欲使用的群组名称。", "参数": "组名：指定要修改的工作的组名。", "class": "用户和工作组管理"}
{"title": "passwd命令", "语法": "passwd(选项)(参数)", "选项": "-d：删除密码，仅有系统管理者才能使用； -f：强制执行； -k：设置只有在密码过期失效后，方能更新； -l：锁住密码； -s：列出密码的相关信息，仅有系统管理者才能使用； -u：解开已上锁的帐号。", "参数": "用户名：需要设置密码的用户名。", "知识扩展": "与用户、组账户信息相关的文件", "实例": "如果是普通用户执行passwd只能修改自己的密码。如果新建用户后，要为新用户创建密码，则用passwd用户名，注意要以root用户的权限来创建。", "class": "用户和工作组管理"}
{"title": "chfn命令", "语法": "chfn(选项)(参数)", "选项": "-f<真实姓名>或--full-name<真实姓名>：设置真实姓名； -h<家中电话>或--home-phone<家中电话>：设置家中的电话号码； -o<办公地址>或--office<办公地址>：设置办公室的地址； -p<办公电话>或--office-phone<办公电话>：设置办公室的电话号码； -u或--help：在线帮助； -v或-version：显示版本信息。", "参数": "用户名：指定要改变finger信息的用户名。", "实例": "范例1，改变finger信息：", "class": "用户和工作组管理"}
{"title": "newusers命令", "语法": "newusers(参数)", "参数": "用户文件：指定包含用户信息的文本文件，文件的格式要与/etc/passwd相同。", "实例": "实用newusers命令批量添加用户：", "class": "用户和工作组管理"}
{"title": "logname命令", "语法": "logname(选项)", "选项": "--help：在线帮助； --vesion：显示版本信息。", "class": "用户和工作组管理"}
{"title": "groups命令", "语法": "groups(选项)(参数)", "选项": "-help：显示命令的帮助信息； --version：显示命令的版本信息。", "参数": "用户名：指定要打印所属工作组的用户名。", "实例": "显示linux用户所属的组", "class": "用户和工作组管理"}
{"title": "finger命令", "语法": "finger(选项)(参数)", "选项": "-l：列出该用户的帐号名称，真实姓名，用户专属目录，登入所用的Shell，登入时间，转信地址，电子邮件状态，还有计划文件和方案文件内容； -m：排除查找用户的真实姓名； -s：列出该用户的帐号名称，真实姓名，登入终端机，闲置时间，登入时间以及地址和电话； -p：列出该用户的帐号名称，真实姓名，用户专属目录，登入所用的Shell，登入时间，转信地址，电子邮件状态，但不显示该用户的计划文件和方案文件内容。", "参数": "用户名：指定要查询信息的用户。", "实例": "在计算机上使用finger：", "class": "用户和工作组管理"}
{"title": "su命令", "语法": "su(选项)(参数)", "选项": "-c<指令>或--command=<指令>：执行完指定的指令后，即恢复原来的身份； -f或——fast：适用于csh与tsch，使shell不用去读取启动文件； -l或——login：改变身份时，也同时变更工作目录，以及HOME,SHELL,USER,logname。此外，也会变更PATH变量； -m,-p或--preserve-environment：变更身份时，不要变更环境变量； -s<shell>或--shell=<shell>：指定要执行的shell； --help：显示帮助； --version；显示版本信息。", "参数": "用户：指定要切换身份的目标用户。", "实例": "变更帐号为root并在执行ls指令后退出变回原使用者：", "class": "用户和工作组管理"}
{"title": "usermod命令", "语法": "usermod(选项)(参数)", "选项": "-c<备注>：修改用户帐号的备注文字； -d<登入目录>：修改用户登入时的目录； -e<有效期限>：修改帐号的有效期限； -f<缓冲天数>：修改在密码过期后多少天即关闭该帐号； -g<群组>：修改用户所属的群组； -G<群组>；修改用户所属的附加群组； -l<帐号名称>：修改用户帐号名称； -L：锁定用户密码，使密码无效； -s<shell>：修改用户登入后所使用的shell； -u<uid>：修改用户ID； -U:解除密码锁定。", "参数": "登录名：指定要修改信息的用户登录名。", "实例": "将newuser2添加到组staff中：", "class": "用户和工作组管理"}
{"title": "groupadd命令", "语法": "groupadd(选项)(参数)", "选项": "-g：指定新建工作组的id； -r：创建系统工作组，系统工作组的组ID小于500； -K：覆盖配置文件“/ect/login.defs”； -o：允许添加组ID号不唯一的工作组。", "参数": "组名：指定新建工作组的组名。", "实例": "建立一个新组，并设置组ID加入系统：", "class": "用户和工作组管理"}
{"title": "userdel命令", "语法": "userdel(选项)(参数)", "选项": "-f：强制删除用户，即使用户当前已登录； -r：删除用户的同时，删除与用户相关的所有文件。", "参数": "用户名：要删除的用户名。", "实例": "userdel命令很简单，比如我们现在有个用户linuxde，其家目录位于/var目录中，现在我们来删除这个用户：", "class": "用户和工作组管理"}
{"title": "useradd命令", "语法": "useradd(选项)(参数)", "选项": "-c<备注>：加上备注文字。备注文字会保存在passwd的备注栏位中； -d<登入目录>：指定用户登入时的启始目录； -D：变更预设值； -e<有效期限>：指定帐号的有效期限； -f<缓冲天数>：指定在密码过期后多少天即关闭该帐号； -g<群组>：指定用户所属的群组； -G<群组>：指定用户所属的附加群组； -m：自动建立用户的登入目录； -M：不要自动建立用户的登入目录； -n：取消建立以用户名称为名的群组； -r：建立系统帐号； -s<shell>：指定用户登入后所使用的shell； -u<uid>：指定用户id。", "参数": "用户名：要创建的用户名。", "实例": "新建用户加入组：", "class": "用户和工作组管理"}
{"title": "xclip命令", "class": "X-Windows"}
{"title": "xset命令", "语法": "xset(选项)(参数)", "选项": "-b：蜂鸣器开关设置； -c：键盘按键声响设置。", "参数": "c：键盘按键声响设置；\ns：屏幕保护程序设置。", "class": "X-Windows"}
{"title": "xlsfonts命令", "语法": "xlsfonts(选项)", "选项": "-l：除字体名称外，同时列出字体的属性； -ll：此参数的效果和指定\"l\"参数类似，但显示更详细的信息； -lll：此参数的效果和指定\"ll\"参数类似，但显示更详细的信息； -m：配合参数\"-l\"使用时，一并列出字体大小的上下限； -n<显示栏位数>：设置每列显示的栏位数； -o：以OpenFont的形式列出字体清单； -u：列出字体清单时不依照其名称排序； -w<每列字符数>：设置每列的最大字符数。", "class": "X-Windows"}
{"title": "xhost命令", "语法": "xhost(参数)", "参数": "+：关闭访问控制，允许任何主机访问本地的X服务器；\n-：打开访问控制，仅允许授权清单中的主机访问本地的X服务器。", "class": "X-Windows"}
{"title": "xlsatoms命令", "语法": "xlsatoms(选项)", "选项": "-display<显示器编号>：指定X Server连接的显示器编号，该编号由\"0\"开始计算，依序递增；\n-format<输出格式>：设置成分清单的列表格式，您可使用控制字符改变显示样式；\n-name<成分名称>：列出指定的成分；\n-range<列表范围>：设置成分清单的列表范围。", "class": "X-Windows"}
{"title": "xauth命令", "语法": "xauth(选项)(参数)", "选项": "-f：不使用默认的认证文件，而使用指定的认证文件； -q：安静模式，不打印未请求的状态信息； -v：详细模式，打印指定的各种操作信息； -i：忽略认证文件锁定； -b：执行任何操作，终端认证文件锁定。", "参数": "add：添加认证条目到认证文件中；\nextract：将指定的设备内容加入到指定的密码文件中；\ninfo：显示授权文件相关信息；\nexit：退出交互模式；\nlist：列出给定的显示设备的内容；\nmerge：合并多个授权文件内容；\nextract：将指定设备内容写入指定的授权文件；\nnextrct：将指定设备内容写入指定的授权文件；\nnmerge：合并多个授权文件内容；\nremove：删除指定显示设备的授权条目；\nsource：从指定文件读取包含xauth的内容指令。", "class": "X-Windows"}
{"title": "xlsclients命令", "语法": "xlsclients(选项)", "选项": "-a：列出所有显示器的客户端应用程序信息； -display<显示器编号>：指定X Server连接的显示器编号，该编号由\"0\"开始计算，依序递增； -l：使用详细格式列表； -m<最大指令长度>：设置显示指令信息的最大长度，单位以字符计算。", "class": "X-Windows"}
{"title": "xinit命令", "语法": "xinit(参数)", "参数": "客户端选项：客户端指令及选项；\n--：用于区分客户端选项和服务器端选项；\n服务器端选项：服务器端选项指令及选项。", "class": "X-Windows"}
{"title": "startx命令", "语法": "startx(参数)", "参数": "客户端及选项：X客户端及选项；\n服务器及选项：X服务器及选项。", "实例": "要在工作站上或 X 终端上启动 X 会话，请输入：", "class": "X-Windows"}
{"title": "restorecon命令", "语法": "restorecon [-iFnrRv] [-e excludedir ] [-o filename ] [-f filename | pathname...]", "选项": "-i：忽略不存在的文件。 -f：infilename 文件 infilename 中记录要处理的文件。 -e：directory 排除目录。 -R/-r：递归处理目录。 -n：不改变文件标签。 -o/outfilename：保存文件列表到 outfilename，在文件不正确情况下。 -v：将过程显示到屏幕上。 -F：强制恢复文件安全语境。", "实例": "假设CentOS安装了apache，网页默认的主目录是/var/www/html，我们经常遇到这样的问题，在其他目录中创建了一个网页文件，然后用mv移动到网页默认目录/var/www/html中，但是在浏览器中却打不开这个文件，这很可能是因为这个文件的SELinux配置信息是继承原来那个目录的，与/var/www/html目录不同，使用mv移动的时候，这个SELinux配置信息也一起移动过来了，从而导致无法打开页面，具体请看下面的实例：", "class": "SELinux"}
{"title": "semanage命令", "语法": "semanage {login|user|port|interface|fcontext|translation} -l semanage fcontext -{a|d|m} [-frst] file_spec", "选项": "-l：查询。 fcontext：主要用在安全上下文方面。 -a：增加，你可以增加一些目录的默认安全上下文类型设置。 -m：修改。 -d：删除。", "实例": "查询一下/var/www/html的默认安全性本文的设置：", "class": "SELinux"}
{"title": "setsebool命令", "语法": "setsebool [-P] 布尔值=[0|1]", "选项": "-P:直接将设置值写入配置文件，该设置数据将来会生效的。", "实例": "允许vsvtp匿名用户写入权限：", "class": "SELinux"}
{"title": "getsebool命令", "语法": "getsebool [-a] [布尔值条款]", "选项": "-a：列出目前系统上面的所有布尔值条款设置为开启或关闭值。", "实例": "查询本系统内所有的布尔值设置状况：", "class": "SELinux"}
{"title": "sesearch命令", "语法": "sesearch [-a] [-s 主体类型] [-t 目标类型] [-b 布尔值]", "选项": "-a:列出该类型或布尔值的所有相关信息 -t:后面还要接类型，例如 -t httpd_t -b:后面还要接布尔值的规则，例如 -b httpd_enable_ftp_server", "实例": "找出目标文件资源类型为httpd_sys_content_t的有关信息：", "class": "SELinux"}
{"title": "seinfo命令", "语法": "seinfo（选项）", "选项": "-A：列出SELinux的状态、规则布尔值、身份识别、角色、类型等所有信息。 -t：列出SELinux所有类型(type)的种类。 -r：列出SELinux所有角色(role)的种类。 -u：列出SELinux所有身份识别(user)的种类。 -b：列出所有规则的种类（布尔值）。", "实例": "列出与httpd有关的规则：", "class": "SELinux"}
{"title": "chcon命令", "语法": "chcon [选项]... 环境 文件... chcon [选项]... [-u 用户] [-r 角色] [-l 范围] [-t 类型] 文件... chcon [选项]... --reference=参考文件 文件...", "选项": "-h, --no-dereference：影响符号连接而非引用的文件。 --reference=参考文件：使用指定参考文件的安全环境，而非指定值。 -R, --recursive：递归处理所有的文件及子目录。 -v, --verbose：为处理的所有文件显示诊断信息。 -u, --user=用户：设置指定用户的目标安全环境。 -r, --role=角色：设置指定角色的目标安全环境。 -t, --type=类型：设置指定类型的目标安全环境。 -l, --range=范围：设置指定范围的目标安全环境。", "实例": "如果你想把这个ftp共享给匿名用户的话，需要开启以下：", "class": "SELinux"}
{"title": "halt命令", "语法": "halt(选项)", "选项": "-d：不要在wtmp中记录； -f：不论目前的runlevel为何，不调用shutdown即强制关闭系统； -i：在halt之前，关闭全部的网络界面； -n：halt前，不用先执行sync； -p：halt之后，执行poweroff； -w：仅在wtmp中记录，而不实际结束系统。", "实例": "halt -p //关闭系统后关闭电源。 halt -d //关闭系统，但不留下纪录。", "class": "系统关机和重启"}
{"title": "ctrlaltdel命令", "语法": "ctrlaltdel(参数)", "参数": "Hard：当按下组合键“Ctrl+Alt+Del”时，立即执行重新启动操作系统，而不是先调用sync系统调用和其他的关机标准操作。\nSoft：当按下组合键“Ctrl+Alt+Del”时，首先向init进程发送SIGINT（interrupt）信号。由init进程处理关机操作。", "class": "系统关机和重启"}
{"title": "reboot命令", "语法": "reboot(选项)", "选项": "-d：重新开机时不把数据写入记录文件/var/tmp/wtmp。本参数具有“-n”参数效果； -f：强制重新开机，不调用shutdown指令的功能； -i：在重开机之前，先关闭所有网络界面； -n：重开机之前不检查是否有未结束的程序； -w：仅做测试，并不真正将系统重新开机，只会把重开机的数据写入/var/log目录下的wtmp记录文件。", "实例": "reboot //重开机。 reboot -w //做个重开机的模拟（只有纪录并不会真的重开机）。", "class": "系统关机和重启"}
{"title": "shutdown命令", "语法": "shutdown(选项)(参数)", "选项": "-c：当执行“shutdown -h 11:50”指令时，只要按+键就可以中断关机的指令； -f：重新启动时不执行fsck； -F：重新启动时执行fsck； -h：将系统关机； -k：只是送出信息给所有用户，但不会实际关机； -n：不调用init程序进行关机，而由shutdown自己进行； -r：shutdown之后重新启动； -t<秒数>：送出警告信息和删除信息之间要延迟多少秒。", "参数": "[时间]：设置多久时间后执行shutdown指令；\n[警告信息]：要传送给所有登入用户的信息。", "实例": "指定现在立即关机：", "class": "系统关机和重启"}
{"title": "poweroff命令", "语法": "poweroff(选项)", "选项": "-n：关闭操作系统时不执行sync操作； -w：不真正关闭操作系统，仅在日志文件“/var/log/wtmp”中； -d：关闭操作系统时，不将操作写入日志文件“/var/log/wtmp”中添加相应的记录； -f：强制关闭操作系统； -i：关闭操作系统之前关闭所有的网络接口； -h：关闭操作系统之前将系统中所有的硬件设置为备用模式。", "实例": "如果确认系统中已经没有用户存在且所有数据都已保存，需要立即关闭系统，可以使用poweroff命令。", "class": "系统关机和重启"}
{"title": "網絡管理經驗談：網絡管理五大發展方向命令", "class": "高级网络"}
{"title": "tcpreplay命令", "选项": "-A \"<args>\" 在使用 tcpdump 风格打印输出信息时，同时再调用tcpdump中的参数， 默认已经带有“-n,-l”，所以一般看到的都是ip地址，而没有主机名的打印，注意这个是在tcpreplay使用了-v参数时才能使用，不带-v不会报错，但是没有实际意义。格式：-vA “nnt”表示以tcpdump风格输出报文信息，并且不打印时间戳、主机名、端口服务名称。注意不要使用-c参数来指定打印的数据报文的个数，这样发送出去的报文也会变少。 -c <cachefile> 双网卡回放报文必选参数，后面紧跟cache文件名，该文件为tcpprep根据对应的pcap文件构造出来。 -D 把应用层的数据，使用dump mode写入到指定文件中去，和-w、-W 参数一起使用。 -e <ip1:ip2> 指定端点的ip，即把发送报文的和接收的报文的ip都修改称对应的参数值中指定的ip，但是这样发送的出的报文不会区分client和server。。 -f <configfile> 指定配置文件。 -F 在发送报文时，自动纠正错误的校验和。对测试DUT的校验和检验。 -h 显示帮助文件。 -i <nic> 双网卡回放报文必选参数，指定主接口。 -I <mac> 重写主网卡发送出报文的目的MAC地址。 -j <nic> 双网卡回放报文必选参数，指定从接口。 -J <mac> 重写从网卡发送出报文的目的MAC地址。 -k <mac> 重写主网卡发送报文的源MAC地址。 -K <mac> 重写从网卡发送报文的源MAC地址。 -l <loop> 指定循环的次数。 -L <limit> 指定最大的发包数量。可以在确认连接的调试时使用。 -m <multiple> 指定一个倍数值，就是必默认发送速率要快多少倍的速率发送报文。 加大发送的速率后，对于DUT可能意味着有更多的并发连接和连接数，特别是对于BT报文的重放， 因为连接的超时是固定的，如果速率增大的话， 留在session表中的连接数量增大，还可以通过修改连接的超时时间来达到该目的。 -M 表示不发送“火星”的ip报文，man文件中的定义是 0/8、172/8、 255/8。 -n 在使用-S参数，不对混杂模式进行侦听。 -N <CIDR1:CIDR2,...> 通过伪造的NAT，重写IP地址。这个参数应该有很重要的应用，目前没有测试使用。 -O 没有测试使用。 -p <packetrate> 指定每秒发送报文的个数，指定该参数，其它速率相关的参数被忽略，最后的打印信息不会有速率和每秒发送报文的统计。 -P 表示在输出信息中打印PID的信息，用于单用户或单帐户模式下暂停和重启程序。 -r <rate> 指定发送的速率。目前-m/-r/-p这3个参数的相互关系。 -R 让网卡极限速度发数据包。 -t <mtu> 指定MTU，标准的10/100M网卡的默认值是1500。 -T Truncate packets > 截去报文中MTU大于标准值的部分再发送出去，默认是不发送，skip掉。 -v 每发送一个报文都以 tcpdump 的风格打印出对应的信息。 -V 查看版本号。 -w <file> 将主网卡发送的报文写入一个文件中，参数后紧跟文件名。", "实例": "1、重放在客户端 ftp 连接的报文", "class": "高级网络"}
{"title": "pfctl命令", "激活": "要激活pf并且使它在启动时调用配置文件，编辑/etc/rc.conf文件，修改配置pf的一行：", "配置": "系统引导到在rc脚本文件运行PF时PF从/etc/pf.conf文件载入配置规则。注意当/etc/pf.conf文件是默认配置文件，在系统调用rc脚本文件时，它仅仅是作为文本文件由pfctl装入并解释和插入pf的。对于一些应用来说，其他的规则集可以在系统引导后由其他文件载入。对于一些设计的非常好的unix程序，PF提供了足够的灵活性。", "控制": "引导之后，PF可以通过pfctl程序进行操作，以下是一些例子：", "class": "高级网络"}
{"title": "iptraf命令", "语法": "iptraf(选项)", "选项": "-i网络接口：立即在指定网络接口上开启IP流量监视； -g：立即开始生成网络接口的概要状态信息； -d网络接口：在指定网络接口上立即开始监视明细的网络流量信息； -s网络接口：在指定网络接口上立即开始监视TCP和UDP网络流量信息； -z网络接口：在指定网络接口上显示包计数； -l网络接口：在指定网络接口上立即开始监视局域网工作站信息； -t时间：指定iptraf指令监视的时间； -B；将标注输出重新定向到“/dev/null”，关闭标注输入，将程序作为后台进程运行； -f：清空所有计数器； -h：显示帮助信息。", "class": "高级网络"}
{"title": "ss命令", "语法": "ss(选项)", "选项": "-h：显示帮助信息； -V：显示指令版本信息； -n：不解析服务名称，以数字方式显示； -a：显示所有的套接字； -l：显示处于监听状态的套接字； -o：显示计时器信息； -m：显示套接字的内存使用情况； -p：显示使用套接字的进程信息； -i：显示内部的TCP信息； -4：只显示ipv4的套接字； -6：只显示ipv6的套接字； -t：只显示tcp套接字； -u：只显示udp套接字； -d：只显示DCCP套接字； -w：仅显示RAW套接字； -x：仅显示UNIX域套接字。", "实例": "显示ICP连接", "class": "高级网络"}
{"title": "nstat/rtacct命令", "语法": "nstat/rtacct(选项)", "选项": "-h：显示帮助信息； -V：显示指令版本信息； -z：显示0计数器； -r：清零历史统计； -n：不显示任何内容，仅更新历史； -a：显示计数器的绝对值； -s：不更新历史； -d：以守护进程的方式运行本指令。", "class": "高级网络"}
{"title": "lnstat命令", "语法": "lnstat(选项)", "选项": "-h：显示帮助信息； -V：显示指令版本信息； -c：指定显示网络状态的次数，每隔一定时间显示一次网络状态； -d：显示可用的文件或关键字； -i：指定两次显示网络状的间隔秒数； -k：只显示给定的关键字； -s：是否显示标题头； -w：指定每个字段所占的宽度。", "class": "高级网络"}
{"title": "arptables命令", "语法": "arptables(选项)", "选项": "-A：向规则链中追加规则； -D：从指定的链中删除规则； -l：向规则链中插入一条新的规则； -R：替换指定规则； -P：设置规则链的默认策略； -F：刷新指定规则链，将其中的所有规则链删除，但是不改变规则链的默认策略； -Z：将规则链计数器清零； -L：显示规则链中的规则列表； -X：删除指定的空用户自定义规则链； -h：显示指令帮助信息； -j：指定满足规则的添加时的目标； -s：指定要匹配ARP包的源ip地址； -d：指定要匹配ARP包的目的IP地址。", "class": "高级网络"}
{"title": "arpd命令", "语法": "arpd(选项)(参数)", "选项": "-l：将arp数据库输出到标准输出设备显示并退出； -f：指定读取和加载arpd数据库的文本文件，文件的格式与“-l”输出信息类似； -b：指定arpd数据库文件，默认的位置为“/var/lib/arpd.db”； -a：指定目标被认为死掉前查询的次数； -k：禁止通过内核发送广播查询； -n：设定缓冲失效时间。", "参数": "网络接口：指定网络接口。", "实例": "启动arpd进程：", "class": "高级网络"}
{"title": "tcpdump命令", "语法": "tcpdump(选项)", "选项": "-a：尝试将网络和广播地址转换成名称； -c<数据包数目>：收到指定的数据包数目后，就停止进行倾倒操作； -d：把编译过的数据包编码转换成可阅读的格式，并倾倒到标准输出； -dd：把编译过的数据包编码转换成C语言的格式，并倾倒到标准输出； -ddd：把编译过的数据包编码转换成十进制数字的格式，并倾倒到标准输出； -e：在每列倾倒资料上显示连接层级的文件头； -f：用数字显示网际网络地址； -F<表达文件>：指定内含表达方式的文件； -i<网络界面>：使用指定的网络截面送出数据包； -l：使用标准输出列的缓冲区； -n：不把主机的网络地址转换成名字； -N：不列出域名； -O：不将数据包编码最佳化； -p：不让网络界面进入混杂模式； -q ：快速输出，仅列出少数的传输协议信息； -r<数据包文件>：从指定的文件读取数据包数据； -s<数据包大小>：设置每个数据包的大小； -S：用绝对而非相对数值列出TCP关联数； -t：在每列倾倒资料上不显示时间戳记； -tt： 在每列倾倒资料上显示未经格式化的时间戳记； -T<数据包类型>：强制将表达方式所指定的数据包转译成设置的数据包类型； -v：详细显示指令执行过程； -vv：更详细显示指令执行过程； -x：用十六进制字码列出数据包资料； -w<数据包文件>：把数据包数据写入指定的文件。", "实例": "直接启动tcpdump将监视第一个网络接口上所有流过的数据包", "class": "高级网络"}
{"title": "ip命令", "语法": "ip(选项)(参数)", "选项": "-V：显示指令版本信息； -s：输出更详细的信息； -f：强制使用指定的协议族； -4：指定使用的网络层协议是IPv4协议； -6：指定使用的网络层协议是IPv6协议； -0：输出信息每条记录输出一行，即使内容较多也不换行显示； -r：显示主机时，不使用IP地址，而使用主机的域名。", "参数": "网络对象：指定要管理的网络对象； 具体操作：对指定的网络对象完成具体操作； help：显示网络对象支持的操作命令的帮助信息。", "实例": "用ip命令显示网络设备的运行状态", "class": "高级网络"}
{"title": "ip6tables-restore命令", "语法": "ip6tables-restore(选项)", "选项": "-c：指定在还原iptables表时，还原当前的数据包计数器和字节计数器值； -t：指定要还原的表的名称。", "class": "高级网络"}
{"title": "ip6tables-save命令", "语法": "ip6tables-save(选项)", "选项": "-c：指定在保存iptables表时，保存当前的数据包计数器和字节计数器值； -t：指定要保存的表的名称。", "class": "高级网络"}
{"title": "ip6tables命令", "语法": "ip6tables(选项)", "选项": "-t<表>：指定要操纵的表； -A：向规则链中添加条目； -D：从规则链中删除条目； -i：向规则链中插入条目； -R：替换规则链中的条目； -L：显示规则链中已有的条目； -F：清楚规则链中已有的条目； -Z：清空规则链中的数据包计算器和字节计数器； -N：创建新的用户自定义规则链； -P：定义规则链中的默认目标； -h：显示帮助信息； -p：指定要匹配的数据包协议类型； -s：指定要匹配的数据包源ip地址； -j<目标>：指定要跳转的目标； -i<网络接口>：指定数据包进入本机的网络接口； -o<网络接口>：指定数据包要离开本机所使用的网络接口。 -c<计数器>：在执行插入操作（insert），追加操作（append），替换操作（replace）时初始化包计数器和字节计数器。", "实例": "在命令行窗口输入下面的指令就可以查看当前的 IPv6 防火墙配置：", "class": "高级网络"}
{"title": "iptables-restore命令", "语法": "iptables-restor(选项)", "选项": "-c：指定在还原iptables表时候，还原当前的数据包计数器和字节计数器的值； -t：指定要还原表的名称。", "实例": "iptables-restor < iptables.bak", "class": "高级网络"}
{"title": "iptables-save命令", "语法": "iptables-save(选项)", "选项": "-c：指定要保存的iptables表时，保存当权的数据包计算器和字节计数器的值； -t：指定要保存的表的名称。", "实例": "[root@localhost ~]# iptables-save -t filter > iptables.bak [root@localhost ~]# cat iptables.bak # Generated by iptables-save v1.3.5 on Thu Dec 26 21:25:15 2013 *filter :INPUT DROP [48113:2690676] :FORWARD accept [0:0] :OUTPUT ACCEPT [3381959:1818595115] -A INPUT -i lo -j ACCEPT -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A OUTPUT -o lo -j ACCEPT COMMIT", "class": "高级网络"}
{"title": "iptables命令", "语法": "iptables(选项)(参数)", "选项": "-t<表>：指定要操纵的表； -A：向规则链中添加条目； -D：从规则链中删除条目； -i：向规则链中插入条目； -R：替换规则链中的条目； -L：显示规则链中已有的条目； -F：清楚规则链中已有的条目； -Z：清空规则链中的数据包计算器和字节计数器； -N：创建新的用户自定义规则链； -P：定义规则链中的默认目标； -h：显示帮助信息； -p：指定要匹配的数据包协议类型； -s：指定要匹配的数据包源ip地址； -j<目标>：指定要跳转的目标； -i<网络接口>：指定数据包进入本机的网络接口； -o<网络接口>：指定数据包要离开本机所使用的网络接口。", "实例": "清除已有iptables规则", "class": "高级网络"}
{"title": "讓你提前認識軟件開發(2)：軟件開發工程師常用的工具軟件命令", "class": "常用工具命令"}
{"title": "磁盤與文件系統管理命令", "class": "常用工具命令"}
{"title": "技巧05監測樹莓派的硬件命令", "class": "常用工具命令"}
{"title": "linux文件和目錄管理的基本命令命令", "class": "常用工具命令"}
{"title": "Find命令", "class": "常用工具命令"}
{"title": "rm – Remove命令", "class": "常用工具命令"}
{"title": "cd – Change Directory命令", "對於當前在終端運行的會中中， cd <directory> 將給定的文件夾（或目錄）設置成當前工作目錄。": "", "class": "常用工具命令"}
{"title": "ls – List命令", "class": "常用工具命令"}
{"title": "Decompression Bomb命令", "class": "常用工具命令"}
{"title": "Malicious Source Code命令", "class": "常用工具命令"}
{"title": "Dd Command命令", "class": "常用工具命令"}
{"title": "Tar Bomb命令", "class": "常用工具命令"}
{"title": "Mkfs Command命令", "class": "常用工具命令"}
{"title": "Rm -Rf Command命令", "class": "常用工具命令"}
{"title": "Mv Folder/Dev/Null Command命令", "class": "常用工具命令"}
{"title": "蘋果與斯坦福攜手深入進行心臟項目研究命令", "class": "常用工具命令"}
{"title": "pssh命令", "安装pssh": "在CentOS系统环境下，介绍yum的安装和源码安装的方式：", "选项": "--version：查看版本 --help：查看帮助，即此信息 -h：主机文件列表，内容格式”[user@]host[:port]” -H：主机字符串，内容格式”[user@]host[:port]” -：登录使用的用户名 -p：并发的线程数【可选】 -o：输出的文件目录【可选】 -e：错误输入文件【可选】 -t：TIMEOUT 超时时间设置，0无限制【可选】 -O：SSH的选项 -v：详细模式 -A：手动输入密码模式 -x：额外的命令行参数使用空白符号，引号，反斜线处理 -X：额外的命令行参数，单个参数模式，同-x -i：每个服务器内部处理信息输出 -P：打印出服务器返回信息", "实例": "获取每台服务器的uptime：", "class": "常用工具命令"}
{"title": "screen命令", "语法": "# screen [-AmRvx -ls -wipe][-d ][-h ][-r ][-s ][-S ]", "选项": "-A 　将所有的视窗都调整为目前终端机的大小。 -d <作业名称> 　将指定的screen作业离线。 -h <行数> 　指定视窗的缓冲区行数。 -m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r <作业名称> 　恢复离线的screen作业。 -R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s 　指定建立新视窗时，所要执行的shell。 -S <作业名称> 　指定screen作业的名称。 -v 　显示版本信息。 -x 　恢复之前离线的screen作业。 -ls或--list 　显示目前所有的screen作业。 -wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。", "常用screen参数": "screen -S yourname -> 新建一个叫yourname的session screen -ls -> 列出当前所有的session screen -r yourname -> 回到yourname这个session screen -d yourname -> 远程detach某个session screen -d -r yourname -> 结束当前session并回到yourname这个session", "使用 screen": "安装screen", "screen 高级应用": "会话共享", "class": "常用工具命令"}
{"title": "speedtest-cli命令", "安装speedtest－cli": "speedtest-cli需要在python 2.4-3.4的环境下，安装方法都很简单，自己选择以下最适合你的一种。", "用法": "-h, --help show this help message and exit --share 分享你的网速，该命令会在speedtest网站上生成网速测试结果的图片。 --simple Suppress verbose output, only show basic information --list 根据距离显示speedtest.net的测试服务器列表。 --server=SERVER 指定列表中id的服务器来做测试。 --mini=MINI URL of the Speedtest Mini server --source=SOURCE Source ip address to bind to --version Show the version number and exit", "实例": "列出所有在中国的测试服务器：", "class": "常用工具命令"}
{"title": "clockdiff命令", "选项": "-o：使用IP时间戳选项来测量系统时间差。时间戳只用3个。 -o1：使用IP时间戳选项来测量系统时间差。用4个时间戳。如果-o和-o1都没有设置，那么就是用ICMP时间戳来测试系统时间差。", "实例": "lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1 PING www.ustc.edu.cn (202.38.64.9) 56(124) bytes of data. 64 bytes from 202.38.64.9: icmp_seq=1 ttl=62 time=0.823 ms TS: lixi-desktop.local (210.45.74.25) 12522473 absolute 210.45.74.1 -251 local-gw.ustc.edu.cn (202.38.64.126) 248 202.38.64.9 -857514 Unrecorded hops: 3 --- www.ustc.edu.cn ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.823/0.823/0.823/0.000 ms", "class": "常用工具命令"}
{"title": "ntpdate命令", "语法": "ntpdate [ -b] [ -d] [ -s] [ -u] [ -aKeyid] [ -eAuthenticationDelay] [ -kKeyFile] [ -oVersion] [ -pSamples] [ -tTimeOut] Server...", "选项": "-aKeyid\n使用 Keyid 来认证全部数据包。\n-b\n通过调用 settimeofday 子例程来增加时钟的时间。\n-d\n指定调试方式。判断 ntpdate 命令会产生什么结果（不产生实际的结果）。结果再现在屏幕上。这个标志使用无特权的端口。\n-eAuthenticationDelay\n指定延迟认证处理的时间秒数。\n-kKeyFile\n当不使用缺省值 /etc/ntp.keys 文件时，为包含密钥的文件指定一个不同的名称。 请参阅文件KeyFile的描述。\n-oVersion\n当轮询它的发出数据包时，指定使用的 NTP 版本实现。 Version 的值可以是 1，2，3。缺省值是 3。\n-pSamples\n指定从每个服务器获取的样本的数目。 Samples 的值在 1 和 8 之间，并包括 1 和 8。它的缺省值是 4。\n-s\n指定日志操作 syslog 设施的使用，而不是使用标准输出。 当运行 ntpdate 命令和 cron命令时，它是很有用的。\n-tTimeOut\n指定等待响应的时间。给定 TimeOut 的值四舍五入为 0.2 秒的倍数。缺省值是 1 秒。\n-u\n指定使用无特权的端口发送数据包。 当在一个对特权端口的输入流量进行阻拦的防火墙后是很有益的， 并希望在防火墙之外和主机同步。防火墙是一个系统或者计算机，它控制从外网对专用网的访问。", "class": "常用工具命令"}
{"title": "rsync命令", "语法": "rsync [OPTION]... SRC DEST rsync [OPTION]... SRC [USER@]host:DEST rsync [OPTION]... [USER@]HOST:SRC DEST rsync [OPTION]... [USER@]HOST::SRC DEST rsync [OPTION]... SRC [USER@]HOST::DEST rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]", "选项": "-v, --verbose 详细模式输出。 -q, --quiet 精简输出模式。 -c, --checksum 打开校验开关，强制对文件传输进行校验。 -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。 -r, --recursive 对子目录以递归模式处理。 -R, --relative 使用相对路径信息。 -b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。 --backup-dir 将备份文件(如~filename)存放在在目录下。 -suffix=SUFFIX 定义备份文件前缀。 -u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。 -l, --links 保留软链结。 -L, --copy-links 想对待常规文件一样处理软链结。 --copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。 --safe-links 忽略指向SRC路径目录树以外的链结。 -H, --hard-links 保留硬链结。 -p, --perms 保持文件权限。 -o, --owner 保持文件属主信息。 -g, --group 保持文件属组信息。 -D, --devices 保持设备文件信息。 -t, --times 保持文件时间信息。 -S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。 -n, --dry-run现实哪些文件将被传输。 -w, --whole-file 拷贝文件，不进行增量检测。 -x, --one-file-system 不要跨越文件系统边界。 -B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。 -e, --rsh=command 指定使用rsh、ssh方式进行数据同步。 --rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。 -C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。 --existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。 --delete 删除那些DST中SRC没有的文件。 --delete-excluded 同样删除接收端那些被该选项指定排除的文件。 --delete-after 传输结束以后再删除。 --ignore-errors 及时出现IO错误也进行删除。 --max-delete=NUM 最多删除NUM个文件。 --partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。 --force 强制删除目录，即使不为空。 --numeric-ids 不将数字的用户和组id匹配为用户名和组名。 --timeout=time ip超时时间，单位为秒。 -I, --ignore-times 不跳过那些有同样的时间和长度的文件。 --size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。 --modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。 -T --temp-dir=DIR 在DIR中创建临时文件。 --compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。 -P 等同于 --partial。 --progress 显示备份过程。 -z, --compress 对备份的文件在传输时进行压缩处理。 --exclude=PATTERN 指定排除不需要传输的文件模式。 --include=PATTERN 指定不排除而需要传输的文件模式。 --exclude-from=FILE 排除FILE中指定模式的文件。 --include-from=FILE 不排除FILE指定模式匹配的文件。 --version 打印版本信息。 --address 绑定到特定的地址。 --config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。 --port=PORT 指定其他的rsync服务端口。 --blocking-io 对远程shell使用阻塞IO。 -stats 给出某些文件的传输状态。 --progress 在传输时现实传输过程。 --log-format=formAT 指定日志文件格式。 --password-file=FILE 从FILE中得到密码。 --bwlimit=KBPS 限制I/O带宽，KBytes per second。 -h, --help 显示帮助信息。", "实例": "SSH方式", "class": "常用工具命令"}
{"title": "vdfuse命令", "什么是VirtualBox": "VirtualBox是一款功能强大的x86虚拟机软件，它不仅具有丰富的特色，而且性能也很优异。更可喜的是，VirtualBox于数日前走向开源，成为了一个发布在GPL许可之下的自由软件。VirtualBox可以在Linux和Windows主机中运行，并支持在其中安装Windows (NT 4.0、2000、XP、Server 2003、Vista)、DOS/Windows 3.x、Linux (2.4 和 2.6)、OpenBSD等系列的客户操作系统。", "语法": "vdfuse [options] -f image-file mountpoint", "选项": "-h 帮助 -r 只读 -t 类型 (VDI, VMDK, VHD, or raw; default: auto) -f 镜像文件 -a 允许所有用户读取 -w 允许所有用户都写 -g 前台运行 -v 输出反馈 -d debug模式", "实例": "使用如下如下语句挂载.vdi文件：", "class": "常用工具命令"}
{"title": "ngrep命令", "安装": "ngrep命令的下载地址：http://ngrep.sourceforge.net/，libpcap下载地址：http://www.tcpdump.org/。先用yum install libpcap完全安装libpcap，注意有时候用libpcap安装包安装的不完整会影响ngrep的使用。", "语法": "ngrep <-LhNXViwqpevxlDtTRM> <-IO pcap_dump> <-n num> <-d dev> <-A num> <-s snaplen> <-S limitlen> <-w normal|byline|single|none> <-c cols> <-P char> <-F file> <match expression> <bpf filter>", "选项": "-e ：显示空数据包 -i ：忽略大小写 -v ：反转匹配 -R ：don't do privilege revocation logic -x ：以16进制格式显示 -X ：以16进制格式匹配 -w ：整字匹配 -p ：不使用混杂模式 -l ：make stdout line buffered -D ：replay pcap_dumps with their recorded time intervals -t ：在每个匹配的包之前显示时间戳 -T ：显示上一个匹配的数据包之间的时间间隔 -M ：仅进行单行匹配 -I ：从文件中读取数据进行匹配 -O ：将匹配的数据保存到文件 -n ：仅捕获指定数目的数据包进行查看 -A ：匹配到数据包后dump随后的指定数目的数据包 -s ：set the bpf caplen -S ：set the limitlen on matched packets -W ：设置显示格式byline将解析包中的换行符 -c ：强制显示列的宽度 -P ：set the non-printable display char to what is specified -F ：使用文件中定义的bpf(Berkeley Packet Filter) -N ：显示由IANA定义的子协议号 -d ：使用哪个网卡，可以用-L选项查询 -L ：查询网卡接口", "实例": "捕捉cloudian：18080端口的request和response，-W byline用来解析包中的换行符，否则包里的所有数据都是连续的，可读性差。-d lo是监听本地网卡：", "class": "常用工具命令"}
{"title": "tempfile命令", "tempfile命令": "tempfile命令只有在基于Debian的发行版中才默认自带，比如Ubuntu，其他发行版没有这个命令。", "$$变量": "如果没有tempfile命令的Linux发行版，也可以使用自己的临时文件名：", "class": "常用工具命令"}
{"title": "xargs命令", "xargs命令用法": "xargs用作替换工具，读取输入数据重新格式化后输出。", "子Shell（Subshells）": "运行一个shell脚本时会启动另一个命令解释器.，就好像你的命令是在命令行提示下被解释的一样，类似于批处理文件里的一系列命令。每个shell脚本有效地运行在父shell(parent shell)的一个子进程里。这个父shell是指在一个控制终端或在一个xterm窗口中给你命令指示符的进程。", "class": "常用工具命令"}
{"title": "awk命令", "模式": "模式可以是以下任意一个：", "操作": "操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：", "awk的工作原理": "awk 'BEGIN{ commands } pattern{ commands } END{ commands }'", "算术运算符": "运算符\n描述\n+ -\n加，减\n* / &\n乘，除与求余\n+ - !\n一元加，减和逻辑非\n^ ***\n求幂\n++ --\n增加或减少，作为前缀或后缀", "赋值运算符": "运算符\n描述\n= += -= *= /= %= ^= **=\n赋值语句", "逻辑运算符": "运算符\n描述\n||\n逻辑或\n&&\n逻辑与", "正则运算符": "运算符\n描述\n~ ~!\n匹配正则表达式和不匹配正则表达式", "关系运算符": "运算符\n描述\n< <= > >= != ==\n关系运算符", "其它运算符": "运算符\n描述\n$\n字段引用\n空格\n字符串连接符\n?:\nC条件表达式\nin\n数组中是否存在某键值", "运算级优先级表": "级别越高越优先", "读取下一条记录": "awk中next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。net语句一般用于多行合并：", "简单地读取一条记录": "awk getline用法：输出重定向需用到getline函数。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。", "关闭文件": "awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。", "输出到一个文件": "awk中允许用如下方式将结果输出到一个文件：", "条件判断语句": "if(表达式) 语句1 else 语句2", "循环语句": "while语句", "其他语句": "break 当 break 语句用于 while 或 for 语句时，导致退出程序循环。\ncontinue 当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。\nnext 能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。\nexit 语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。", "数组的定义": "数字做数组索引（下标）：", "数组相关函数": "得到数组长度：", "二维、多维数组使用": "awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，array[2,4]=1这样的访问是允许的。awk使用一个特殊的字符串SUBSEP(�34)作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2�344。", "算术函数": "格式\n描述\natan2( y, x )\n返回 y/x 的反正切。\ncos( x )\n返回 x 的余弦；x 是弧度。\nsin( x )\n返回 x 的正弦；x 是弧度。\nexp( x )\n返回 x 幂函数。\nlog( x )\n返回 x 的自然对数。\nsqrt( x )\n返回 x 平方根。\nint( x )\n返回 x 的截断至整数的值。\nrand( )\n返回任意数字 n，其中 0 <= n < 1。\nsrand( [expr] )\n将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。", "字符串函数": "格式\n描述\ngsub( Ere, Repl, [ In ] )\n除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。\nsub( Ere, Repl, [ In ] )\n用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。\nindex( String1, String2 )\n在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。\nlength [(String)]\n返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nblength [(String)]\n返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nsubstr( String, M, [ N ] )\n返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。\nmatch( String, Ere )\n在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。\nsplit( String, A, [Ere] )\n将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。\ntolower( String )\n返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\ntoupper( String )\n返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\nsprintf(Format, Expr, Expr, . . . )\n根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。", "一般函数": "格式\n描述\nclose( Expression )\n用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。\nsystem(command )\n执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。\nExpression | getline [ Variable ]\n从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ] < Expression\n从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ]\n将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。", "时间函数": "格式\n描述\n函数名\n说明\nmktime( YYYY MM dd HH MM ss[ DST])\n生成时间格式\nstrftime([format [, timestamp]])\n格式化时间输出，将时间戳转为时间字符串\n具体格式，见下表.\nsystime()\n得到时间戳,返回从1970年1月1日开始到当前时间(不计闰年)的整秒数", "class": "常用工具命令"}
{"title": "yes命令", "语法": "yes(参数)", "参数": "字符串：指定要重复打印的字符串。", "实例": "[root@localhost ~]# yes testline testline testline testline testline testline testline testline testline ...一直重复打印 testline，按Ctrl+C结束。", "class": "常用工具命令"}
{"title": "date命令", "语法": "date(选项)(参数)", "选项": "-d<字符串>：显示字符串所指的日期与时间。字符串前后必须加上双引号； -s<字符串>：根据字符串来设置日期与时间。字符串前后必须加上双引号； -u：显示GMT； --help：在线帮助； --version：显示版本信息。", "参数": "<+时间日期格式>：指定显示时使用的日期时间格式。", "日期格式字符串列表": "%H 小时，24小时制（00~23） %I 小时，12小时制（01~12） %k 小时，24小时制（0~23） %l 小时，12小时制（1~12） %M 分钟（00~59） %p 显示出AM或PM %r 显示时间，12小时制（hh:mm:ss %p） %s 从1970年1月1日00:00:00到目前经历的秒数 %S 显示秒（00~59） %T 显示时间，24小时制（hh:mm:ss） %X 显示时间的格式（%H:%M:%S） %Z 显示时区，日期域（CST） %a 星期的简称（Sun~Sat） %A 星期的全称（Sunday~Saturday） %h,%b 月的简称（Jan~Dec） %B 月的全称（January~December） %c 日期和时间（Tue Nov 20 14:12:58 2012） %d 一个月的第几天（01~31） %x,%D 日期（mm/dd/yy） %j 一年的第几天（001~366） %m 月份（01~12） %w 一个星期的第几天（0代表星期天） %W 一年的第几个星期（00~53，星期一为第一天） %y 年的最后两个数字（1999则是99）", "实例": "格式化输出：", "class": "常用工具命令"}
{"title": "consoletype命令", "语法": "consoletype", "实例": "[root@localhost ~]# consoletype pty", "class": "常用工具命令"}
{"title": "info命令", "语法": "info(选项)(参数)", "选项": "-d：添加包含info格式帮助文档的目录； -f：指定要读取的info格式的帮助文档； -n：指定首先访问的info帮助文件的节点； -o：输出被选择的节点内容到指定文件。", "参数": "帮助主题：指定需要获得帮助的主题，可以是指令、函数以及配置文件。", "实例": "在info后面输入命令的名称就可以查看该命令的info帮助文档了：", "class": "常用工具命令"}
{"title": "hostid命令", "语法": "hostid", "选项": "--help：显示帮助信息； --version：显示版本信息。", "实例": "[root@localhost ~]# hostid 007f0100", "class": "常用工具命令"}
{"title": "clear命令", "语法": "clear", "实例": "直接输入clear命令当前终端上的任何信息就可被清除。", "class": "常用工具命令"}
{"title": "whoami命令", "语法": "whoami(选项)", "选项": "--help：在线帮助； --version：显示版本信息。", "实例": "[root@localhost ~]# whoami root [root@localhost ~]# id -un root", "class": "常用工具命令"}
{"title": "users命令", "语法": "users(选项)", "选项": "--help：显示命令的帮助信息； --version：显示命令的版本信息。", "实例": "[root@localhost ~]# users root root", "class": "常用工具命令"}
{"title": "sleep命令", "语法": "sleep(参数)", "参数": "时间：指定要暂停时间的长度。", "实例": "有时在写一些以循环方式运行的监控脚本，设置时间间隔是必不可少的，下面是一个Shell进度条的脚本演示在脚本中生成延时。", "class": "常用工具命令"}
{"title": "md5sum命令", "语法": "md5sum(选项)(参数)", "选项": "-b：二进制模式读取文件； -t或--text：把输入的文件作为文本文件看待； -c：从指定文件中读取MD5校验和，并进行校验； --status：验证成功时不输出任何信息； -w：当校验不正确时给出警告信息。", "参数": "文件：指定保存着文件名和校验和的文本文件。", "实例": "生成一个文件insert.sql的md5值：", "class": "常用工具命令"}
{"title": "mesg命令", "语法": "mesg(参数)", "参数": "y/n：y表示运行向当前终端写信息，n表示禁止向当前终端写信息。", "实例": "[root@localhost ~]# mesg y #允许系统用户将信息直接显示在你的屏幕上。 [root@localhost ~]# mesg n #不允许系统用户将信息直接显示在你的屏幕上。", "class": "常用工具命令"}
{"title": "mtools命令", "语法": "mtools(选项)", "选项": "-a：长文件名重复时自动更改目标文件的长文件名； -A：短文件名重复但长文件名不同时自动更改目标文件的短文件名； -o：长文件名重复时，将目标文件覆盖现有的文件； -O：短文件名重复但长文件名不同时，将目标文件覆盖现有的文件； -r：长文件名重复时，要求用户更改目标文件的长文件名； -R：短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名； -s：长文件名重复时，则不处理该目标文件； -S：短文件名重复但长文件名不同时，则不处理该目标文件； -v：执行时显示详细的说明； -V：显示版本信息。", "实例": "使用mtools命令显示其支持的所有的指令，输入如下命令：", "class": "常用工具命令"}
{"title": "login命令", "语法": "login(选项)(参数)", "选项": "-p：告诉login指令不销毁环境变量； -h：指定远程服务器的主机名。", "参数": "用户名：指定登录使用的用户名。", "class": "常用工具命令"}
{"title": "RHCSA 系列（二）: 如何進行文件和目錄管理命令", "创建、删除、复制和移动文件及目录": "文件和目錄管理是每一個系統管理員都應該掌握的必備技能。它包括了從頭開始的創建、刪除文本文件（每個程序的核心配置）以及目錄（你用來組織文件和其它目錄），以及識別已有文件的類型。", "输入输出重定向以及管道": "命令行環境提供了兩個非常有用的功能：允許重定向命令的輸入和輸出為另一個文件，以及發送命令的輸出到另一個命令，這分別稱為重定向和管道。", "归档，压缩，解包，解压文件": "如果你需要傳輸、備份、或者通過郵件發送一組文件，你可以使用一個存檔（或打包）工具，如 tar，通常與gzip，bzip2，或 xz 等壓縮工具配合使用。", "创建软连接和硬链接": "在Linux中，有2種類型的鏈接文件：硬鏈接和軟（也稱為符號）鏈接。因為硬鏈接文件只是現存文件的另一個名字，使用相同的 inode 號，它指向實際的數據；而符號鏈接只是指向的文件名。", "class": "Shell内建命令"}
{"title": "Pstree命令", "class": "Shell内建命令"}
{"title": "Vmstat命令", "class": "Shell内建命令"}
{"title": "xeyes命令", "class": "Shell内建命令"}
{"title": "fg , bg命令", "class": "Shell内建命令"}
{"title": "w命令", "class": "Shell内建命令"}
{"title": "sh命令", "语法": "bash [options] [file]", "选项": "-c string：命令从-c后的字符串读取。 -i：实现脚本交互。 -n：进行shell脚本的语法检查。 -x：实现shell脚本逐条语句的跟踪。", "实例": "使用-x选项跟踪脚本调试shell脚本，能打印出所执行的每一行命令以及当前状态：", "class": "Shell内建命令"}
{"title": "trap命令", "语法": "trap [-lp] [[arg] sigspec ...]", "选项参数说明": "如果arg参数缺省或者为“-”，每个接收到的sigspec信号都将会被重置为它们进入shell时的值；", "信号": "信号是一种进程间通信机制，它给应用程序提供一种异步的软件中断，使应用程序有机会接受其他程序活终端发送的命令(即信号)。应用程序收到信号后，有三种处理方式：忽略，默认，或捕捉。进程收到一个信号后，会检查对该信号的处理机制。如果是SIG_IGN，就忽略该信号；如果是SIG_DFT，则会采用系统默认的处理动作，通常是终止进程或忽略该信号；如果给该信号指定了一个处理函数(捕捉)，则会中断当前进程正在执行的任务，转而去执行该信号的处理函数，返回后再继续执行被中断的任务。", "捕获信号": "当你按下 Ctrl + C 键或 Break 键在终端一个shell程序的执行过程中，正常程序将立即终止，并返回命令提示符。这可能并不总是可取的。例如，你可能最终留下了一堆临时文件，将不会清理。", "class": "Shell内建命令"}
{"title": "let命令", "语法": "let arg [arg ...] #arg代表运算式", "用法": "自加操作let no++\n自减操作let no--\n简写形式let no+=10，let no-=20，分别等同于let no=no+10，let no=no-20", "实例": "#!/bin/bash let a=5+4 b=9-3 echo $a $b", "class": "Shell内建命令"}
{"title": "seq命令", "语法": "seq [选项]... 尾数 seq [选项]... 首数 尾数 seq [选项]... 首数 增量 尾数", "选项": "-f, --format=格式 使用printf 样式的浮点格式 -s, --separator=字符串 使用指定字符串分隔数字（默认使用：\\n） -w, --equal-width 在列前添加0 使得宽度相同", "实例": "-f选项：指定格式", "class": "Shell内建命令"}
{"title": "tput命令", "什么是 terminfo 数据库？": "UNIX 系统上的 terminfo 数据库用于定义终端和打印机的属性及功能，包括各设备（例如，终端和打印机）的行数和列数以及要发送至该设备的文本的属性。UNIX 中的几个常用程序都依赖 terminfo 数据库提供这些属性以及许多其他内容，其中包括 vi 和 emacs 编辑器以及 curses 和 man 程序。", "实例": "使输出的字符串有颜色，底色，加粗：", "class": "Shell内建命令"}
{"title": "apropos命令", "语法": "apropos [-dalhvV] [-e|-w|-r] [-s section] [-m system[,...]] [-M path] [-L locale] [-C file] keyword ...", "选项": "-d, --debug：输出调试信息。 -v, --verbose：输出详细的警告信息。 -r, -- regex：将每个keyword作为正则表达式解释。这是默认行为。每个keyword将匹配手册页和描述。 -w, --wildcard：将每个keyword作为shell样式的通配符解释。 -e, --exact：每个keyword将精确匹配手册页名字和描述。 -a, --and：只显示匹配所有keyword的手册页和描述。默认显示匹配任何keyword的项。 -l, --long：不根据终端宽度缩减输出。 -s section, --section section：只查找指定的手册section。 -m system[,...], --systems=system[,...]：用于查找其它操作系统的手册页。 -M path, --manpath=path：指定从其它以冒号分隔的手册页层次查找。默认使用$MANPATH环境变量。这个选项覆盖$MANPATH的内容。 -L locale, --locale=locale：apropos调用C函数setlocale来得到当前本地化信息，包括$LC_MESSAGE和$LANG。使用该选项提供一个locale字符串来临时更改本地化信息。 -C file, --config-file=file：使用这个用户配置文件而不是默认的~/.manpath。 -h, --help：打印帮助信息并退出。 -V, --version：打印版本信息并退出。", "返回值": "返回0表示成功，1表示用法、语法或配置文件错误，2表示操作错误，16表示没有找到匹配的内容。", "实例": "[root@localhost ~]# man -k who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::whoami (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid [root@localhost ~]# apropos who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::WhoAmI (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid", "class": "Shell内建命令"}
{"title": "set命令", "语法": "set(选项)(参数)", "选项": "-a：标示已修改的变量，以供输出至环境变量。 -b：使被中止的后台程序立刻回报执行状态。 -C：转向所产生的文件无法覆盖已存在的文件。 -d：Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 -e：若指令传回值不等于0，则立即退出shell。 -f：取消使用通配符。 -h：自动记录函数的所在位置。 -H Shell：可利用\"!\"加<指令编号>的方式来执行history中记录的指令。 -k：指令所给的参数都会被视为此指令的环境变量。 -l：记录for循环的变量名称。 -m：使用监视模式。 -n：只读取指令，而不实际执行。 -p：启动优先顺序模式。 -P：启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 -t：执行完随后的指令，即退出shell。 -u：当执行时使用到未定义过的变量，则显示错误信息。 -v：显示shell所读取的输入值。 -x：执行指令后，会先显示该指令及所下的参数。", "参数": "取消某个set曾启动的参数。", "实例": "使用declare命令定义一个新的环境变量\"mylove\"，并且将其值设置为\"Visual C++\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "command命令", "语法": "command(参数)", "参数": "指令：需要调用的指令及参数。", "实例": "使用command命令调用执行echo Linux，输入如下命令：", "class": "Shell内建命令"}
{"title": "dris命令", "语法": "dris(选项)", "选项": "+n：显示从左边算起第n笔的目录； -n：显示从右边算起第n笔的目录； -l：显示目录完整的记录。", "class": "Shell内建命令"}
{"title": "fc命令", "语法": "fc(选项)(参数)", "选项": "-l：显示历史命令； -n：显示历史命令时，不显示编号； -r：反序显示历史命令。", "参数": "起始指令编号：指定要编辑的起始指令编号；\n结尾指令编号：指定要编辑的结尾指令编号。", "实例": "使用该指令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "bind命令", "语法": "bind(选项)", "选项": "-d：显示按键配置的内容； -f<按键配置文件>：载入指定的按键配置文件； -l：列出所有的功能； -m<按键配置>：指定按键配置； -q<功能>：显示指定功能的按键； -v：列出目前的按键配置与其功能。", "实例": "bind -x '\"\\C-l\":ls -l' #直接按 CTRL+L 就列出目录", "class": "Shell内建命令"}
{"title": "readonly命令", "语法": "readonly(选项)(参数)", "选项": "-f：定义只读函数； -a：定义只读数组变量； -p：显示系统中全部只读变量列表。", "参数": "变量定义：定义变量，格式为“变量名=‘变量值’”。", "实例": "使用readonly命令显示系统中所有的已经定义的只读变量，输入如下命令：", "class": "Shell内建命令"}
{"title": "read命令", "语法": "read(选项)(参数)", "选项": "-p：指定读取值时的提示符； -t：指定读取值时等待的时间（秒）。", "参数": "变量：指定读取值的变量名。", "实例": "下面的列表给出了read命令的常用方式：", "class": "Shell内建命令"}
{"title": "bg命令", "语法": "bg(参数)", "参数": "作业标识：指定需要放到后台的作业标识号。", "实例": "使用bg命令将任务号为1的任务放到后台继续执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "ulimit命令", "语法": "ulimit(选项)", "选项": "-a：显示目前资源限制的设定； -c <core文件上限>：设定core文件的最大值，单位为区块； -d <数据节区大小>：程序数据节区的最大值，单位为KB； -f <文件大小>：shell所能建立的最大文件，单位为区块； -H：设定资源的硬性限制，也就是管理员所设下的限制； -m <内存大小>：指定可使用内存的上限，单位为KB； -n <文件数目>：指定同一时间最多可开启的文件数； -p <缓冲区大小>：指定管道缓冲区的大小，单位512字节； -s <堆叠大小>：指定堆叠的上限，单位为KB； -S：设定资源的弹性限制； -t <CPU时间>：指定CPU使用时间的上限，单位为秒； -u <程序数目>：用户最多可开启的程序数目； -v <虚拟内存大小>：指定可使用的虚拟内存上限，单位为KB。", "实例": "[root@localhost ~]# ulimit -a core file size (blocks, -c) 0 #core文件的最大值为100 blocks。 data seg size (kbytes, -d) unlimited #进程的数据段可以任意大。 scheduling priority (-e) 0 file size (blocks, -f) unlimited #文件可以任意大。 pending signals (-i) 98304 #最多有98304个待处理的信号。 max locked memory (kbytes, -l) 32 #一个任务锁住的物理内存的最大值为32KB。 max memory size (kbytes, -m) unlimited #一个任务的常驻物理内存的最大值。 open files (-n) 1024 #一个任务最多可以同时打开1024的文件。 pipe size (512 bytes, -p) 8 #管道的最大空间为4096字节。 POSIX message queues (bytes, -q) 819200 #POSIX的消息队列的最大值为819200字节。 real-time priority (-r) 0 stack size (kbytes, -s) 10240 #进程的栈的最大值为10240字节。 cpu time (seconds, -t) unlimited #进程使用的CPU时间。 max user processes (-u) 98304 #当前用户同时打开的进程（包括线程）的最大个数为98304。 virtual memory (kbytes, -v) unlimited #没有限制进程的最大地址空间。 file locks (-x) unlimited #所能锁住的文件的最大个数没有限制。", "class": "Shell内建命令"}
{"title": "enable命令", "语法": "enable(选项)(参数)", "选项": "-n：关闭指定的内部命令； -a：显示所有激活的内部命令； -f：从指定文件中读取内部命令。", "参数": "内部命令：指定要关闭或激活的内部命令。", "实例": "使用enable命令显示所有激活的内部命令：", "class": "Shell内建命令"}
{"title": "declare命令", "语法": "declare(选项)(参数)", "选项": "+/-：\"-\"可用来指定变量的属性，\"+\"则是取消变量所设的属性； -f：仅显示函数； r：将变量设置为只读； x：指定的变量会成为环境变量，可供shell以外的程序来使用； i：[设置值]可以是数值，字符串或运算式。", "参数": "shell变量：声明shell变量，格式为“变量名=值”。", "实例": "首先使用declare命令定义shell变量\"test\"，并且将其值设置为\"man.linuxde.net\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "wait命令", "语法": "wait(参数)", "参数": "进程或作业标示：指定进程号或者作业号。", "实例": "使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：", "class": "Shell内建命令"}
{"title": "builtin命令", "语法": "builtin(参数)", "参数": "shell内部命令：指定需要执行的shell内部命令。", "实例": "使用builtin命令执行shell内部命alias显示命令别名，输入如下命令：", "class": "Shell内建命令"}
{"title": "shopt命令", "语法": "shopt(选项)(参数)", "选项": "-s：激活指定的shell行为选项； -u：关闭指定的shell行为选项。", "参数": "shell选项：指定要操作的shell选项。", "实例": "使用shopt命令显示当前所有可以设置的shell操作选项，输入如下命令：", "class": "Shell内建命令"}
{"title": "exit命令", "语法": "exit(参数)", "参数": "返回值：指定shell返回值。", "实例": "退出当前shell：", "class": "Shell内建命令"}
{"title": "jobs命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "Shell内建命令"}
{"title": "help命令", "语法": "help(选项)(参数)", "选项": "-s：输出短格式的帮助信息。仅包括命令格式。", "参数": "内部命令：指定需要显示帮助信息的shell内部命令。", "实例": "使用help命令显示shell内部shopt命令的帮助信息，输入如下命令：", "class": "Shell内建命令"}
{"title": "history命令", "语法": "history(选项)(参数)", "选项": "-c：清空当前历史命令； -a：将历史命令缓冲区中命令写入历史命令文件中； -r：将历史命令文件中的命令读入当前历史命令缓冲区； -w：将当前历史命令缓冲区命令写入历史命令文件中。", "参数": "n：打印最近的n条历史命令。", "实例": "使用history命令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "logout命令", "语法": "logout", "class": "Shell内建命令"}
{"title": "export命令", "语法": "export(选项)(参数)", "选项": "-f：代表[变量名称]中为函数名称； -n：删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中； -p：列出所有的shell赋予程序的环境变量。", "参数": "变量：指定要输出或者删除的环境变量。", "实例": "一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。查看已经存在的环境变量：", "class": "Shell内建命令"}
{"title": "exec命令", "语法": "exec(选项)(参数)", "选项": "-c：在空环境中执行指定的命令。", "参数": "指令：要执行的指令和相应的参数。", "实例": "首先使用echo命令将文本“Linux C++”进行输出，输入如下命令：", "class": "Shell内建命令"}
{"title": "env命令", "语法": "env(选项)(参数)", "选项": "-i：开始一个新的空的环境； -u<变量名>：从当前环境中删除指定的变量。", "参数": "变量定义：定义在新的环境中变量，定义多个变量定义用空格隔开。格式为“变量名=值”；\n指定：指定要执行的指令和参数。", "实例": "[root@localhost ~]# env hostname=LinServ-1 TERM=linux SHELL=/bin/bash HISTSIZE=1000 SSH_CLIENT=192.168.2.111 2705 22 SSH_TTY=/dev/pts/0 USER=root LS_COLORS=no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35: mail=/var/spool/mail/root PATH=/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin INPUTRC=/etc/inputrc pwd=/root LANG=zh_CN.UTF-8 SHLVL=1 HOME=/root logname=root SSH_CONNECTION=192.168.2.111 2705 192.168.2.2 22 LESSOPEN=|/usr/bin/lesspipe.sh %s G_BROKEN_FILENAMES=1 _=/bin/env", "class": "Shell内建命令"}
{"title": "unset命令", "语法": "unset(选项)(参数)", "选项": "-f：仅删除函数； -v：仅删除变量。", "参数": "shell变量或函数：指定要删除的shell变量或shell函数。", "实例": "使用unset命令将前面所创建的环境变量mylove及其对应的值进行删除，输入如下命令：", "class": "Shell内建命令"}
{"title": "kill命令", "语法": "kill(选项)(参数)", "选项": "-a：当处理当前进程时，不限制命令名和进程号的对应关系； -l <信息编号>：若不加<信息编号>选项，则-l参数会列出全部的信息名称； -p：指定kill 命令只打印相关进程的进程号，而不发送任何信号； -s <信息名称或编号>：指定要送出的信息； -u：指定用户。", "参数": "进程或作业识别号：指定要删除的进程或作业。", "实例": "列出所有信号名称：", "class": "Shell内建命令"}
{"title": "unalias命令", "语法": "unalias(选项)(参数)", "选项": "-a：取消所有命令别名。", "参数": "命令别名：指定要取消的命令别名。", "实例": "使用unalias命令将已经设置的命令别名\"cc\"取消，输入如下命令：", "class": "Shell内建命令"}
{"title": "type命令", "语法": "type(选项)(参数)", "选项": "-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”； -p：如果给出的指令为外部指令，则显示其绝对路径； -a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。", "参数": "指令：要显示类型的指令。", "实例": "[root@localhost ~]# type ls ls is aliased to `ls --color=tty' [root@localhost ~]# type cd cd is a shell builtin [root@localhost ~]# type date date is /bin/date [root@localhost ~]# type mysql mysql is /usr/bin/mysql [root@localhost ~]# type nginx -bash: type: nginx: not found [root@localhost ~]# type if if is a shell keyword [root@localhost ~]# type which which is aliased to `alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde' [root@localhost ~]# type -a cd cd is a shell builtin [root@localhost ~]# type -a grep grep is /bin/grep", "class": "Shell内建命令"}
{"title": "fg命令", "语法": "fg(参数)", "参数": "作业标识：指定要放到前台的作业标识号。", "实例": "使用fg命令将任务号为1的任务从后台执行转换到前台执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "alias命令", "语法": "alias(选项)(参数)", "选项": "-p：打印已经设置的命令别名。", "参数": "命令别名设置：定义命令别名，格式为“命令别名=‘实际命令’”。", "实例": "alias 的基本使用方法为：", "class": "Shell内建命令"}
{"title": "集成的網絡服務器和網絡管理的系統，Zentyal Server 4.0 發布命令", "class": "网络服务器"}
{"title": "Docker網絡管理的未來命令", "class": "网络服务器"}
{"title": "Docker网络管理的未来命令", "class": "网络服务器"}
{"title": "mysqlimport命令", "语法": "mysqlimport(选项)(参数)", "选项": "-D：导入数据前清空表； -f：出现错误时继续处理剩余的操作； -h：MySQL服务器的ip地址或主机名； -u：连接MySQL服务器的用户名； -p：连接MySQL服务器的密码。", "参数": "数据库名：指定要导入的数据库名称；\n文本文件：包含特定格式文本文件。", "class": "网络服务器"}
{"title": "ftpshut命令", "class": "网络服务器"}
{"title": "ftpcount命令", "class": "网络服务器"}
{"title": "exportfs命令", "class": "网络服务器"}
{"title": "apachectl命令", "语法": "apachectl(参数)", "参数": "configtest：检查设置文件中的语法是否正确；\nfullstatus：显示服务器完整的状态信息；\ngraceful：重新启动Apache服务器，但不会中断原有的连接；\nhelp：显示帮助信息；\nrestart：重新启动Apache服务器；\nstart：启动Apache服务器；\nstatus：显示服务器摘要的状态信息；\nstop：停止Apache服务器。", "class": "网络服务器"}
{"title": "ab命令", "语法": "ab(选项)(参数)", "选项": "-A：指定连接服务器的基本的认证凭据； -c：指定一次向服务器发出请求数； -C：添加cookie； -g：将测试结果输出为“gnuolot”文件； -h：显示帮助信息； -H：为请求追加一个额外的头； -i：使用“head”请求方式； -k：激活HTTP中的“keepAlive”特性； -n：指定测试会话使用的请求数； -p：指定包含数据的文件； -q：不显示进度百分比； -T：使用POST数据时，设置内容类型头； -v：设置详细模式等级； -w：以HTML表格方式打印结果； -x：以表格方式输出时，设置表格的属性； -X：使用指定的代理服务器发送请求； -y：以表格方式输出时，设置表格属性。", "参数": "主机：被测试主机。", "class": "网络服务器"}
{"title": "squid命令", "语法": "squid(选项)", "选项": "-d：将指定调试等级的信息发送到标准错误设备； -f：使用指定的配置文件。而不使用默认配置文件； -k：向squid服务器发送指令； -s：启用syslog日志； -z：创建缓存目录； -C：不捕获致命信号； -D：不进行DNS参数测试； -N：以非守护进程模式运行； -X：强制进入完全调试模式。", "class": "网络服务器"}
{"title": "mysql命令", "语法": "mysql(选项)(参数)", "选项": "-h：MySQL服务器的ip地址或主机名； -u：连接MySQL服务器的用户名； -e：执行mysql内部命令； -p：连接MySQL服务器的密码。", "参数": "数据库：指定连接服务器后自动打开的数据库。", "class": "网络服务器"}
{"title": "sendmail命令", "语法": "sendmail(选项)", "选项": "-bd：以守护进程方式运行指令； -bD：以前台运行方式运行； -bi：初始化别名数据库； -bm：以常规发送电子邮件； -bp：显示邮件的发送队列； -C：指定配置文件； -D：将调试的输出信息保存到日志文件，而不显示在标准输出设备上； -F：指定邮件发送者全名； -n：禁止使用邮件别名功能； -f：指定发件人的名字； -q：设置处理邮件队列中邮件的时间间隔。", "class": "网络服务器"}
{"title": "mysqlshow命令", "语法": "mysqlshow(选项)(参数)", "选项": "-h：MySQL服务器的ip地址或主机名； -u：连接MySQL服务器的用户名； -p：连接MySQL服务器的密码； --count：显示每个数据表中数据的行数； -k：显示数据表的索引； -t：显示数据表的类型； -i：显示数据表的额外信息。", "参数": "数据库信息：指定要显示的数据库信息，可以是一个数据库名，或者是数据库名和表名，或者是数据库名、表名和列名。", "class": "网络服务器"}
{"title": "smbpasswd命令", "语法": "smbpasswd(选项)(参数)", "选项": "-a：向smbpasswd文件中添加用户； -c：指定samba的配置文件； -x：从smbpasswd文件中删除用户； -d：在smbpasswd文件中禁用指定的用户； -e：在smbpasswd文件中激活指定的用户； -n：将指定的用户的密码置空。", "参数": "用户名：指定要修改SMB密码的用户。", "class": "网络服务器"}
{"title": "squidclient命令", "语法": "squidclient(选项)(参数)", "选项": "-a：不包含“accept:header”； -r：强制缓存重新加载URL； -s：安静模式，不输出信息到标准输出设备； -h：从指定主机获取url -l：指定一个本地ip地址进行绑定； -p：端口号，默认为3128； -m：指定发送请求的方法； -u：代理认证用户名。", "参数": "URL：指定操作缓存中的URL。", "class": "网络服务器"}
{"title": "smbclient命令", "语法": "smbclient(选项)(参数)", "选项": "-B<ip地址>：传送广播数据包时所用的IP地址； -d<排错层级>：指定记录文件所记载事件的详细程度； -E：将信息送到标准错误输出设备； -h：显示帮助； -i<范围>：设置NetBIOS名称范围； -I<IP地址>：指定服务器的IP地址； -l<记录文件>：指定记录文件的名称； -L：显示服务器端所分享出来的所有资源； -M<NetBIOS名称>：可利用WinPopup协议，将信息送给选项中所指定的主机； -n<NetBIOS名称>：指定用户端所要使用的NetBIOS名称； -N：不用询问密码； -O<连接槽选项>：设置用户端TCP连接槽的选项； -p<TCP连接端口>：指定服务器端TCP连接端口编号； -R<名称解析顺序>：设置NetBIOS名称解析的顺序； -s<目录>：指定smb.conf所在的目录； -t<服务器字码>：设置用何种字符码来解析服务器端的文件名称； -T<tar选项>：备份服务器端分享的全部文件，并打包成tar格式的文件； -U<用户名称>：指定用户名称； -w<工作群组>：指定工作群组名称。", "参数": "smb服务器：指定要连接的smb服务器。", "实例": "列出某个IP地址所提供的共享文件夹", "class": "网络服务器"}
{"title": "showmount命令", "语法": "showmount(选项)(参数)", "选项": "-d：仅显示已被NFS客户端加载的目录； -e：显示NFS服务器上所有的共享目录。", "参数": "NFS服务器：指定NFS服务器的ip地址或者主机名。", "class": "网络服务器"}
{"title": "nfsstat命令", "语法": "nfsstat(选项)", "选项": "-s：仅列出NFS服务器端状态； -c：仅列出NFS客户端状态； -n：仅列出NFS状态，默认显示nfs客户端和服务器的状态； -2：仅列出NFS版本2的状态； -3：仅列出NFS版本3的状态； -4：仅列出NFS版本4的状态； -m：打印以加载的nfs文件系统状态； -r：仅打印rpc状态。", "实例": "要显示关于客户机发送和拒绝的RPC和NFS调用数目的信息，输入：", "class": "网络服务器"}
{"title": "mysqladmin命令", "语法": "mysqladmin(选项)(参数)", "选项": "-h：MySQL服务器主机名或ip地址； -u：连接MySQL服务器的用户名； -p：连接MySQL服务器的密码； --help：显示帮助信息。", "参数": "管理命令：需要在MySQL服务器上执行的管理命令。", "class": "网络服务器"}
{"title": "ftpwho命令", "语法": "ftpwho(选项)", "选项": "-h：显示帮助信息； -v：详细模式，输出更多信息。", "class": "网络服务器"}
{"title": "mysqldump命令", "语法": "mysqldump(选项)", "选项": "--add-drop-table：在每个创建数据库表语句前添加删除数据库表的语句； --add-locks：备份数据库表时锁定数据库表； --all-databases：备份MySQL服务器上的所有数据库； --comments：添加注释信息； --compact：压缩模式，产生更少的输出； --complete-insert：输出完成的插入语句； --databases：指定要备份的数据库； --default-character-set：指定默认字符集； --force：当出现错误时仍然继续备份操作； --host：指定要备份数据库的服务器； --lock-tables：备份前，锁定所有数据库表； --no-create-db：禁止生成创建数据库语句； --no-create-info：禁止生成创建数据库库表语句； --password：连接MySQL服务器的密码； --port：MySQL服务器的端口号； --user：连接MySQL服务器的用户名。", "实例": "导出整个数据库", "class": "网络服务器"}
{"title": "htdigest命令", "语法": "htdigest(选项)(参数)", "选项": "-c：创建密码文件。", "参数": "密码文件：指定要创建或更新的密码文件；\n域：指定用户名所属的域；\n用户名：要创建或者更新的用户名。", "class": "网络服务器"}
{"title": "htpasswd命令", "语法": "htpasswd(选项)(参数)", "htpasswd(选项)(参数)": "选项", "选项": "-c：创建一个加密文件； -n：不更新加密文件，只将加密后的用户名密码显示在屏幕上； -m：默认采用MD5算法对密码进行加密； -d：采用CRYPT算法对密码进行加密； -p：不对密码进行进行加密，即明文密码； -s：采用SHA算法对密码进行加密； -b：在命令行中一并输入用户名和密码而不是根据提示输入密码； -D：删除指定的用户。", "参数": "用户：要创建或者更新密码的用户名；\n密码：用户的新密码。", "实例": "利用htpasswd命令添加用户", "class": "网络服务器"}
{"title": "ftptop命令", "语法": "ftptop(选项)", "选项": "-D：过滤正在下载的会话； -S：仅显示指定虚拟主机的连接状态； -d：指定屏幕刷新时间，默认", "class": "网络服务器"}
{"title": "axel命令", "安装": "CentOS安装Axel：", "语法": "axel [options] url1 [url2] [url...]", "选项": "--max-speed=x , -s x 最高速度x --num-connections=x , -n x 连接数x --output=f , -o f 下载为本地文件f --search[=x] , -S [x] 搜索镜像 --header=x , -H x 添加头文件字符串x（指定 HTTP header） --user-agent=x , -U x 设置用户代理（指定 HTTP user agent） --no-proxy ， -N 不使用代理服务器 --quiet ， -q 静默模式 --verbose ，-v 更多状态信息 --alternate ， -a Alternate progress indicator --help ，-h 帮助 --version ，-V 版本信息", "实例": "如下载lnmp安装包指定10个线程，存到/tmp/：", "class": "网络应用"}
{"title": "jwhois命令", "语法": "jwhois [选项]", "选项": "--version display version number and patch level --help display this help -v, --verbose verbose debug output -c FILE, --config=FILE use FILE as configuration file -h HOST, --host=HOST explicitly query HOST -n, --no-redirect disable content redirection -s, --no-whoisservers disable whois-servers.net service support -a, --raw disable reformatting of the query -i, --display-redirections display all redirects instead of hiding them -p PORT, --port=PORT use port number PORT (in conjunction with HOST) -r, --rwhois force an rwhois query to be made --rwhois-display=DISPLAY sets the display option in rwhois queries --rwhois-limit=LIMIT sets the maximum number of matches to return", "实例": "显示指定用户信息：", "class": "网络应用"}
{"title": "curl命令", "语法": "curl(选项)(参数)", "选项": "-a/--append\n上传文件时，附加到目标文件\n-A/--user-agent <string>\n设置用户代理发送给服务器\n-anyauth\n可以使用“任何”身份验证方法\n-b/--cookie <name=string/file>\ncookie字符串或文件读取位置\n--basic\n使用HTTP基本验证\n-B/--use-ascii\n使用ASCII /文本传输\n-c/--cookie-jar <file>\n操作结束后把cookie写入到这个文件中\n-C/--continue-at <offset>\n断点续转\n-d/--data <data>\nHTTP POST方式传送数据\n--data-ascii <data>\n以ascii的方式post数据\n--data-binary <data>\n以二进制的方式post数据\n--negotiate\n使用HTTP身份验证\n--digest\n使用数字身份验证\n--disable-eprt\n禁止使用EPRT或LPRT\n--disable-epsv\n禁止使用EPSV\n-D/--dump-header <file>\n把header信息写入到该文件中\n--egd-file <file>\n为随机数据(SSL)设置EGD socket路径\n--tcp-nodelay\n使用TCP_NODELAY选项\n-e/--referer\n来源网址\n-E/--cert <cert[:passwd]>\n客户端证书文件和密码 (SSL)\n--cert-type <type>\n证书文件类型 (DER/PEM/ENG) (SSL)\n--key <key>\n私钥文件名 (SSL)\n--key-type <type>\n私钥文件类型 (DER/PEM/ENG) (SSL)\n--pass <pass>\n私钥密码 (SSL)\n--engine <eng>\n加密引擎使用 (SSL). \"--engine list\" for list\n--cacert <file>\nCA证书 (SSL)\n--capath <directory>\nCA目录 (made using c_rehash) to verify peer against (SSL)\n--ciphers <list>\nSSL密码\n--compressed\n要求返回是压缩的形势 (using deflate or gzip)\n--connect-timeout <seconds>\n设置最大请求时间\n--create-dirs\n建立本地目录的目录层次结构\n--crlf\n上传是把LF转变成CRLF\n-f/--fail\n连接失败时不显示http错误\n--ftp-create-dirs\n如果远程目录不存在，创建远程目录\n--ftp-method [multicwd/nocwd/singlecwd]\n控制CWD的使用\n--ftp-pasv\n使用 PASV/EPSV 代替端口\n--ftp-skip-pasv-ip\n使用PASV的时候,忽略该IP地址\n--ftp-ssl\n尝试用 SSL/TLS 来进行ftp数据传输\n--ftp-ssl-reqd\n要求用 SSL/TLS 来进行ftp数据传输\n-F/--form <name=content>\n模拟http表单提交数据\n--form-string <name=string>\n模拟http表单提交数据\n-g/--globoff\n禁用网址序列和范围使用{}和[]\n-G/--get\n以get的方式来发送数据\n-H/--header <line>\n自定义头信息传递给服务器\n--ignore-content-length\n忽略的HTTP头信息的长度\n-i/--include\n输出时包括protocol头信息\n-I/--head\n只显示请求头信息\n-j/--junk-session-cookies\n读取文件进忽略session cookie\n--interface <interface>\n使用指定网络接口/地址\n--krb4 <level>\n使用指定安全级别的krb4\n-k/--insecure\n允许不使用证书到SSL站点\n-K/--config\n指定的配置文件读取\n-l/--list-only\n列出ftp目录下的文件名称\n--limit-rate <rate>\n设置传输速度\n--local-port<NUM>\n强制使用本地端口号\n-m/--max-time <seconds>\n设置最大传输时间\n--max-redirs <num>\n设置最大读取的目录数\n--max-filesize <bytes>\n设置最大下载的文件总量\n-M/--manual\n显示全手动\n-n/--netrc\n从netrc文件中读取用户名和密码\n--netrc-optional\n使用 .netrc 或者 URL来覆盖-n\n--ntlm\n使用 HTTP NTLM 身份验证\n-N/--no-buffer\n禁用缓冲输出\n-o/--output\n把输出写到该文件中\n-O/--remote-name\n把输出写到该文件中，保留远程文件的文件名\n-p/--proxytunnel\n使用HTTP代理\n--proxy-anyauth\n选择任一代理身份验证方法\n--proxy-basic\n在代理上使用基本身份验证\n--proxy-digest\n在代理上使用数字身份验证\n--proxy-ntlm\n在代理上使用ntlm身份验证\n-P/--ftp-port <address>\n使用端口地址，而不是使用PASV\n-q\n作为第一个参数，关闭 .curlrc\n-Q/--quote <cmd>\n文件传输前，发送命令到服务器\n-r/--range <range>\n检索来自HTTP/1.1或FTP服务器字节范围\n--range-file\n读取（SSL）的随机文件\n-R/--remote-time\n在本地生成文件时，保留远程文件时间\n--retry <num>\n传输出现问题时，重试的次数\n--retry-delay <seconds>\n传输出现问题时，设置重试间隔时间\n--retry-max-time <seconds>\n传输出现问题时，设置最大重试时间\n-s/--silent\n静默模式。不输出任何东西\n-S/--show-error\n显示错误\n--socks4 <host[:port]>\n用socks4代理给定主机和端口\n--socks5 <host[:port]>\n用socks5代理给定主机和端口\n--stderr <file>\n-t/--telnet-option <OPT=val>\nTelnet选项设置\n--trace <file>\n对指定文件进行debug\n--trace-ascii <file>\nLike --跟踪但没有hex输出\n--trace-time\n跟踪/详细输出时，添加时间戳\n-T/--upload-file <file>\n上传文件\n--url <URL>\nSpet URL to work with\n-u/--user <user[:password]>\n设置服务器的用户和密码\n-U/--proxy-user <user[:password]>\n设置代理用户名和密码\n-w/--write-out [format]\n什么输出完成后\n-x/--proxy <host[:port]>\n在给定的端口上使用HTTP代理\n-X/--request <command>\n指定什么命令\n-y/--speed-time\n放弃限速所要的时间，默认为30\n-Y/--speed-limit\n停止传输速度的限制，速度时间", "实例": "文件下载", "class": "网络应用"}
{"title": "wget命令", "语法": "wget(选项)(参数)", "选项": "-a<日志文件>：在指定的日志文件中记录资料的执行过程； -A<后缀名>：指定要下载文件的后缀名，多个后缀名之间使用逗号进行分隔； -b：进行后台的方式运行wget； -B<连接地址>：设置参考的连接地址的基地地址； -c：继续执行上次终端的任务； -C<标志>：设置服务器数据块功能标志on为激活，off为关闭，默认值为on； -d：调试模式运行指令； -D<域名列表>：设置顺着的域名列表，域名之间用“，”分隔； -e<指令>：作为文件“.wgetrc”中的一部分执行指定的指令； -h：显示指令帮助信息； -i<文件>：从指定文件获取要下载的URL地址； -l<目录列表>：设置顺着的目录列表，多个目录用“，”分隔； -L：仅顺着关联的连接； -r：递归下载方式； -nc：文件存在时，下载文件不覆盖原有文件； -nv：下载时只显示更新和出错信息，不显示指令的详细执行过程； -q：不显示指令执行过程； -nh：不查询主机名称； -v：显示详细执行过程； -V：显示版本信息； --passive-ftp：使用被动模式PASV连接FTP服务器； --follow-ftp：从HTML文件中下载FTP连接文件。", "参数": "URL：下载指定的URL地址。", "实例": "使用wget下载单个文件", "class": "网络应用"}
{"title": "telnet命令", "语法": "telnet(选项)(参数)", "选项": "-8：允许使用8位字符资料，包括输入与输出； -a：尝试自动登入远端系统； -b<主机别名>：使用别名指定远端主机名称； -c：不读取用户专属目录里的.telnetrc文件； -d：启动排错模式； -e<脱离字符>：设置脱离字符； -E：滤除脱离字符； -f：此参数的效果和指定\"-F\"参数相同； -F：使用Kerberos V5认证时，加上此参数可把本地主机的认证数据上传到远端主机； -k<域名>：使用Kerberos认证时，加上此参数让远端主机采用指定的领域名，而非该主机的域名； -K：不自动登入远端主机； -l<用户名称>：指定要登入远端主机的用户名称； -L：允许输出8位字符资料； -n<记录文件>：指定文件记录相关信息； -r：使用类似rlogin指令的用户界面； -S<服务类型>：设置telnet连线所需的ip TOS信息； -x：假设主机有支持数据加密的功能，就使用它； -X<认证形态>：关闭指定的认证形态。", "参数": "远程主机：指定要登录进行管理的远程主机；\n端口：指定TELNET协议使用的端口号。", "实例": "telnet 192.168.2.10 Trying 192.168.2.10... Connected to 192.168.2.10 (192.168.2.10). Escape character is '^]'. localhost (Linux release 2.6.18-274.18.1.el5 #1 SMP Thu Feb 9 12:45:44 EST 2012) (1) login: root Password: Login incorrect", "class": "网络应用"}
{"title": "rexec命令", "语法": "rexec(选项)(参数)", "选项": "-a：表示远程命令的标准错误与标准输出相同，不支持发送任意信号到远程进程； -l<用户名>：指定连接远程rexec服务器的用户名； -p<密码>：指定连接远程rexec服务器的密码； -n：明确地提示输入用户名和密码。", "参数": "远程主机：指定远程主机（ip地址或主机名）；\n命令：指定需要在远程主机上执行的命令。", "实例": "要在一个远程主机上执行date命令，输入：", "class": "网络应用"}
{"title": "rsh命令", "语法": "rsh(选项)(参数)", "选项": "-d：使用Socket层级的排错功能； -l<用户名称>：指定要登入远端主机的用户名称； -n：把输入的指令号向代号为/dev/null的特殊外围设备。", "参数": "远程主机：指定要连接的远程主机；\n指令：指定要在远程主机上执行的命令。", "class": "网络应用"}
{"title": "rlogin命令", "语法": "rlogin(选项)(参数)", "选项": "-8：允许输入8位字符数据； -e脱离字符>：设置脱离字符； -E：滤除脱离字符； -l用户名称>：指定要登入远端主机的用户名称； -L：使用litout模式进行远端登入阶段操作。", "参数": "远程主机：指定要登录的远程主机（ip地址或者域名）。", "class": "网络应用"}
{"title": "mail命令", "语法": "mail(选项)(参数)", "选项": "-b<地址>：指定密件副本的收信人地址； -c<地址>：指定副本的收信人地址； -f<邮件文件>：读取指定邮件文件中的邮件； -i：不显示终端发出的信息； -I：使用互动模式； -n：程序使用时，不使用mail.rc文件中的设置； -N：阅读邮件时，不显示邮件的标题； -s<邮件主题>：指定邮件的主题； -u<用户帐号>：读取指定用户的邮件； -v：执行时，显示详细的信息。", "参数": "邮件地址：收信人的电子邮箱地址。", "实例": "直接使用shell当编辑器", "class": "网络应用"}
{"title": "mailstat命令", "语法": "mailstat(选项)(参数)", "选项": "-k：保持邮件日志文件的完整性，不清空日志文件； -l：使用长格式显示邮件状态； -m：合并任何错误信息到一行中显示； -o：使用老的邮件日志邮件； -t：使用简洁的格式显示邮件状态； -s：如果没有邮件则不输出任何信息。", "参数": "邮件日志文件：指定要读取邮件日志文件。", "class": "网络应用"}
{"title": "lynx命令", "语法": "lynx(选项)(参数)", "选项": "-case：在搜索字符串时，区分大小写； -ftp：关闭ftp功能； -nobrowse：关闭目录浏览功能； -noclor：关闭色彩显示模式； -reload：更新代理服务器的缓存，只对首页有效； --color：如果系统支持彩色模式，则激活彩色模式； --help：显示指令的帮助信息； --versiom：显示指令的版本信息。", "参数": "URL：指定要访问的网站的URL地址。", "class": "网络应用"}
{"title": "elm命令", "语法": "elm(选项)", "选项": "-s<邮件主题>：指定新邮件的邮件主题； -f<目录>：开启程序时，读取指定的目录； -h：显示帮助； -i<文件名>：将文件内容插入送出的邮件中； -m：进入elm后，不显示指令说明； -v：显示elm的版本信息； -z：若收件信箱没有邮件，则不启动elm程序。", "class": "网络应用"}
{"title": "mailq命令", "语法": "mailq(选项)", "选项": "-v：显示详细的信息。", "实例": "[root@localhost ~]# mailq -v /var/spool/mqueue is empty Total requests: 0", "class": "网络应用"}
{"title": "lftpget命令", "语法": "lftpget(选项)(参数)", "选项": "-c：继续先前的下载； -d：输出调试信息； -v：输出详细信息。", "参数": "文件：指定要下载的文件，文件必须是合法的URL路径。", "class": "网络应用"}
{"title": "elinks命令", "语法": "elinks(选项)(参数)", "选项": "-anonymous：是否使用匿名帐号方式； -auto-submit：对于偶然遇到的第一个表单是否自动提交； -config-dir：指定elinks指令运行时读取和写入自身的配置和运行状态的存放目录； -dump：将HTML文档以纯文本的方式打印到标准输出设备； -version：显示指令的版本信息； -h：显示帮助信息。", "参数": "URL：指定要访问的URL地址。", "class": "网络应用"}
{"title": "ipcalc命令", "语法": "ipcalc(选项)", "选项": "-b：由给定的IP地址和网络掩码计算出广播地址； -h：显示给定UP地址所对应的主机名； -m：由给定的IP地址计算器网络掩码； -p：显示给定的掩码或IP地址的前缀； -n：由给定的IP地址和网络掩码计算网络地址； -s：安静模式； --help：显示帮助信息。", "实例": "[root@localhost ~]# ipcalc -p 192.168.2.1 255.255.255.0 PREFIX=24 [root@localhost ~]# ipcalc -n 192.168.2.1 255.255.255.0 NETWORK=192.168.2.0 [root@localhost ~]# ipcalc -h 127.0.0.1 hostname=localhost.localdomain [root@localhost ~]# ipcalc -m 192.168.2.1 NETMASK=255.255.255.0 [root@localhost ~]# ipcalc -pnbm 192.168.2.1 255.255.255.0 NETMASK=255.255.255.0 PREFIX=24 BROADCAST=192.168.2.255 NETWORK=192.168.2.0", "class": "网络应用"}
{"title": "lftp命令", "语法": "lftp(选项)(参数)", "选项": "-f：指定lftp指令要执行的脚本文件； -c：执行指定的命令后退出； --help：显示帮助信息； --version：显示指令的版本号。", "参数": "站点：要访问的站点的ip地址或者域名。", "实例": "登录ftp", "class": "网络应用"}
{"title": "hping3命令", "安装": "yum install libpcap-devel tc-devel ln -s /usr/include/pcap-bpf.h /usr/include/net/bpf.h wget http://www.hping.org/hping3-20051105.tar.gz tar zxvf hping3-20051105.tar.gz cd hping3-20051105 ./configure make make install", "选项": "-H --help 显示帮助。 -v -VERSION 版本信息。 -c --count count 发送数据包的次数 关于countreached_timeout 可以在hping2.h里编辑。 -i --interval 包发送间隔时间（单位是毫秒）缺省时间是1秒,此功能在增加传输率上很重要,在idle/spoofing扫描时此功能也会被用到,你可以参考hping-howto获得更多信息-fast 每秒发10个数据包。 -n -nmeric 数字输出，象征性输出主机地址。 -q -quiet 退出。 -I --interface interface name 无非就是eth0之类的参数。 -v --verbose 显示很多信息，TCP回应一般如：len=46 ip=192.168.1.1 flags=RADF seq=0 ttl=255 id=0 win=0 rtt=0.4ms tos=0 iplen=40 seq=0 ack=1380893504 sum=2010 urp=0 -D --debug 进入debug模式当你遇到麻烦时，比如用HPING遇到一些不合你习惯的时候，你可以用此模式修改HPING，（INTERFACE DETECTION,DATA LINK LAYER ACCESS,INTERFACE SETTINGS,.......） -z --bind 快捷键的使用。 -Z --unbind 消除快捷键。 -O --rawip RAWIP模式，在此模式下HPING会发送带数据的IP头。 -1 --icmp ICMP模式，此模式下HPING会发送IGMP应答报，你可以用--ICMPTYPE --ICMPCODE选项发送其他类型/模式的ICMP报文。 -2 --udp UDP 模式，缺省下，HPING会发送UDP报文到主机的0端口，你可以用--baseport --destport --keep选项指定其模式。 -9 --listen signatuer hping的listen模式，用此模式，HPING会接收指定的数据。 -a --spoof hostname 伪造IP攻击，防火墙就不会记录你的真实IP了，当然回应的包你也接收不到了。 -t --ttl time to live 可以指定发出包的TTL值。 -H --ipproto 在RAW IP模式里选择IP协议。 -w --WINID UNIX ,WINDIWS的id回应不同的，这选项可以让你的ID回应和WINDOWS一样。 -r --rel 更改ID的，可以让ID曾递减输出，详见HPING-HOWTO。 -F --FRAG 更改包的FRAG，这可以测试对方对于包碎片的处理能力，缺省的“virtual mtu”是16字节。 -x --morefrag 此功能可以发送碎片使主机忙于恢复碎片而造成主机的拒绝服务。 -y -dontfrag 发送不可恢复的IP碎片，这可以让你了解更多的MTU PATH DISCOVERY。 -G --fragoff fragment offset value set the fragment offset -m --mtu mtu value 用此项后ID数值变得很大，50000没指定此项时3000-20000左右。 -G --rroute 记录路由，可以看到详悉的数据等等，最多可以经过9个路由，即使主机屏蔽了ICMP报文。 -C --ICMPTYPE type 指定ICMP类型，缺省是ICMP echo REQUEST。 -K --ICMPCODE CODE 指定ICMP代号，缺省0。 --icmp-ipver 把IP版本也插入IP头。 --icmp-iphlen 设置IP头的长度，缺省为5（32字节）。 --icmp-iplen 设置IP包长度。 --icmp-ipid 设置ICMP报文IP头的ID，缺省是RANDOM。 --icmp-ipproto 设置协议的，缺省是TCP。 -icmp-cksum 设置校验和。 -icmp-ts alias for --icmptype 13 (to send ICMP timestamp requests) --icmp-addr Alias for --icmptype 17 (to send ICMP address mask requests) -s --baseport source port hping 用源端口猜测回应的包，它从一个基本端口计数，每收一个包，端口也加1，这规则你可以自己定义。 -p --deskport [+][+]desk port 设置目标端口，缺省为0，一个加号设置为:每发送一个请求包到达后，端口加1，两个加号为：每发一个包，端口数加1。 --keep 上面说过了。 -w --win 发的大小和windows一样大，64BYTE。 -O --tcpoff Set fake tcp data offset. Normal data offset is tcphdrlen / 4. -m --tcpseq 设置TCP序列数。 -l --tcpck 设置TCP ack。 -Q --seqnum 搜集序列号的，这对于你分析TCP序列号有很大作用。", "Hping3功能": "Hping3主要有以下典型功能应用：", "class": "网络测试"}
{"title": "iperf命令", "安装iperf": "对于windows版的iperf，直接将解压出来的iperf.exe和cygwin1.dll复制到%systemroot%目录即可，对于linux版的iperf，请使用如下命令安装：", "选项": "命令行选项\n描述\n客户端与服务器共用选项\n-f, --format [bkmaBKMA]\n格式化带宽数输出。支持的格式有：\n'b' = bits/sec 'B' = Bytes/sec\n'k' = Kbits/sec 'K' = KBytes/sec\n'm' = Mbits/sec 'M' = MBytes/sec\n'g' = Gbits/sec 'G' = GBytes/sec\n'a' = adaptive bits/sec 'A' = adaptive Bytes/sec\n自适应格式是kilo-和mega-二者之一。除了带宽之外的字段都输出为字节，除非指定输出的格式，默认的参数是a。\n注意：在计算字节byte时，Kilo = 1024， Mega = 1024^2，Giga = 1024^3。通常，在网络中，Kilo = 1000， Mega = 1000^2， and Giga = 1000^3，所以，Iperf也按此来计算比特（位）。如果这些困扰了你，那么请使用-f b参数，然后亲自计算一下。\n-i, --interval #\n设置每次报告之间的时间间隔，单位为秒。如果设置为非零值，就会按照此时间间隔输出测试报告。默认值为零。\n-l, --len #[KM]\n设置读写缓冲区的长度。TCP方式默认为8KB，UDP方式默认为1470字节。\n-m, --print_mss\n输出TCP MSS值（通过TCP_MAXSEG支持）。MSS值一般比MTU值小40字节。通常情况\n-p, --port #\n设置端口，与服务器端的监听端口一致。默认是5001端口，与ttcp的一样。\n-u, --udp\n使用UDP方式而不是TCP方式。参看-b选项。\n-w, --window #[KM]\n设置套接字缓冲区为指定大小。对于TCP方式，此设置为TCP窗口大小。对于UDP方式，此设置为接受UDP数据包的缓冲区大小，限制可以接受数据包的最大值。\n-B, --bind host\n绑定到主机的多个地址中的一个。对于客户端来说，这个参数设置了出栈接口。对于服务器端来说，这个参数设置入栈接口。这个参数只用于具有多网络接口的主机。在Iperf的UDP模式下，此参数用于绑定和加入一个多播组。使用范围在224.0.0.0至239.255.255.255的多播地址。参考-T参数。\n-C, --compatibility\n与低版本的Iperf使用时，可以使用兼容模式。不需要两端同时使用兼容模式，但是强烈推荐两端同时使用兼容模式。某些情况下，使用某些数据流可以引起1.7版本的服务器端崩溃或引起非预期的连接尝试。\n-M, --mss #[KM}\n通过TCP_MAXSEG选项尝试设置TCP最大信息段的值。MSS值的大小通常是TCP/ip头减去40字节。在以太网中，MSS值 为1460字节（MTU1500字节）。许多操作系统不支持此选项。\n-N, --nodelay\n设置TCP无延迟选项，禁用Nagle's运算法则。通常情况此选项对于交互程序，例如telnet，是禁用的。\n-V (from v1.6 or higher)\n绑定一个IPv6地址。\n服务端：$ iperf -s –V\n客户端：$ iperf -c <Server IPv6 Address> -V\n注意：在1.6.3或更高版本中，指定IPv6地址不需要使用-B参数绑定，在1.6之前的版本则需要。在大多数操作系统中，将响应IPv4客户端映射的IPv4地址。\n服务器端专用选项\n-s, --server\nIperf服务器模式\n-D (v1.2或更高版本)\nUnix平台下Iperf作为后台守护进程运行。在Win32平台下，Iperf将作为服务运行。\n-R(v1.2或更高版本，仅用于Windows)\n卸载Iperf服务（如果它在运行）。\n-o(v1.2或更高版本，仅用于Windows)\n重定向输出到指定文件\n-c, --client host\n如果Iperf运行在服务器模式，并且用-c参数指定一个主机，那么Iperf将只接受指定主机的连接。此参数不能工作于UDP模式。\n-P, --parallel #\n服务器关闭之前保持的连接数。默认是0，这意味着永远接受连接。\n客户端专用选项\n-b, --bandwidth #[KM]\nUDP模式使用的带宽，单位bits/sec。此选项与-u选项相关。默认值是1 Mbit/sec。\n-c, --client host\n运行Iperf的客户端模式，连接到指定的Iperf服务器端。\n-d, --dualtest\n运行双测试模式。这将使服务器端反向连接到客户端，使用-L 参数中指定的端口（或默认使用客户端连接到服务器端的端口）。这些在操作的同时就立即完成了。如果你想要一个交互的测试，请尝试-r参数。\n-n, --num #[KM]\n传送的缓冲器数量。通常情况，Iperf按照10秒钟发送数据。-n参数跨越此限制，按照指定次数发送指定长度的数据，而不论该操作耗费多少时间。参考-l与-t选项。\n-r, --tradeoff\n往复测试模式。当客户端到服务器端的测试结束时，服务器端通过-l选项指定的端口（或默认为客户端连接到服务器端的端口），反向连接至客户端。当客户端连接终止时，反向连接随即开始。如果需要同时进行双向测试，请尝试-d参数。\n-t, --time #\n设置传输的总时间。Iperf在指定的时间内，重复的发送指定长度的数据包。默认是10秒钟。参考-l与-n选项。\n-L, --listenport #\n指定服务端反向连接到客户端时使用的端口。默认使用客户端连接至服务端的端口。\n-P, --parallel #\n线程数。指定客户端与服务端之间使用的线程数。默认是1线程。需要客户端与服务器端同时使用此参数。\n-S, --tos #\n出栈数据包的服务类型。许多路由器忽略TOS字段。你可以指定这个值，使用以\"0x\"开始的16进制数，或以\"0\"开始的8进制数或10进制数。\n例如，16进制'0x10' = 8进制'020' = 十进制'16'。TOS值1349就是：\nIPTOS_LOWDELAY minimize delay 0x10\nIPTOS_THROUGHPUT maximize throughput 0x08\nIPTOS_RELIABILITY maximize reliability 0x04\nIPTOS_LOWCOST minimize cost 0x02\n-T, --ttl #\n出栈多播数据包的TTL值。这本质上就是数据通过路由器的跳数。默认是1，链接本地。\n-F (from v1.2 or higher)\n使用特定的数据流测量带宽，例如指定的文件。\n$ iperf -c <server address> -F <file-name>\n-I (from v1.2 or higher)\n与-F一样，由标准输入输出文件输入数据。\n杂项\n-h, --help\n显示命令行参考并退出 。\n-v, --version\n显示版本信息和编译信息并退出。", "实例": "带宽测试通常采用UDP模式，因为能测出极限带宽、时延抖动、丢包率。在进行测试时，首先以链路理论带宽作为数据发送速率进行测试，例如，从客户端到服务器之间的链路的理论带宽为100Mbps，先用-b 100M进行测试，然后根据测试结果（包括实际带宽，时延抖动和丢包率），再以实际带宽作为数据发送速率进行测试，会发现时延抖动和丢包率比第一次好很多，重复测试几次，就能得出稳定的实际带宽。", "class": "网络测试"}
{"title": "host命令", "语法": "host(选项)(参数)", "选项": "-a：显示详细的DNS信息； -c<类型>：指定查询类型，默认值为“IN“； -C：查询指定主机的完整的SOA记录； -r：在查询域名时，不使用递归的查询方式； -t<类型>：指定查询的域名信息类型； -v：显示指令执行的详细信息； -w：如果域名服务器没有给出应答信息，则总是等待，直到域名服务器给出应答； -W<时间>：指定域名查询的最长时间，如果在指定时间内域名服务器没有给出应答信息，则退出指令； -4：使用IPv4； -6：使用IPv6.", "参数": "主机：指定要查询信息的主机信息。", "实例": "[root@localhost ~]# host www.linuxde.net www.linuxde.net is an alias for host.1.linuxde.net. host.1.linuxde.net has address 100.42.212.8 [root@localhost ~]# host -a www.linuxde.net Trying \"www.linuxde.net\" ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 34671 ;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0 ;; QUESTION SECTION: ;www.linuxde.net. IN ANY ;; ANSWER SECTION: www.linuxde.net. 463 IN CNAME host.1.linuxde.net. Received 54 bytes from 202.96.104.15#53 in 0 ms", "class": "网络测试"}
{"title": "tracepath命令", "语法": "tracepath(参数)", "参数": "目的主机：指定追踪路由信息的目的主机；\n端口：指定使用的UDP端口号。", "实例": "tracepath www.58.com 1: 192.168.2.10 (192.168.2.10) 20.150ms pmtu 1500 1: unknown (192.168.2.1) 9.343ms 2: 221.6.45.33 (221.6.45.33) 34.430ms 3: 221.6.9.81 (221.6.9.81) 19.263ms 4: 122.96.66.37 (122.96.66.37) 54.372ms 5: 219.158.96.149 (219.158.96.149) asymm 6 128.526ms 6: 123.126.0.66 (123.126.0.66) 138.281ms 7: 124.65.57.26 (124.65.57.26) 166.244ms 8: 61.148.154.98 (61.148.154.98) 103.723ms 9: 202.106.42.102 (202.106.42.102) asymm 10 78.099ms 10: 210.77.139.150 (210.77.139.150) asymm 9 199.930ms 11: 211.151.104.6 (211.151.104.6) asymm 10 121.965ms 12: no reply 13: 211.151.111.30 (211.151.111.30) asymm 12 118.989ms reached Resume: pmtu 1500 hops 13 back 12", "class": "网络测试"}
{"title": "arpwatch命令", "语法": "arpwatch(选项)", "选项": "-d：启动排错模式； -f<记录文件>：设置存储ARP记录的文件，预设为/var/arpwatch/arp.dat； -i<接口>：指定监听ARP的接口，预设的接口为eth0； -r<记录文件>：从指定的文件中读取ARP记录，而不是从网络上监听。", "class": "网络测试"}
{"title": "nslookup命令", "语法": "nslookup(选项)(参数)", "选项": "-sil：不显示任何警告信息。", "参数": "域名：指定要查询域名。", "实例": "[root@localhost ~]# nslookup www.linuxde.net Server: 202.96.104.15 Address: 202.96.104.15#53 Non-authoritative answer: www.linuxde.net canonical name = host.1.linuxde.net. Name: host.1.linuxde.net Address: 100.42.212.8", "class": "网络测试"}
{"title": "arping命令", "语法": "arping(选项)(参数)", "选项": "-b：用于发送以太网广播帧（FFFFFFFFFFFF）。arping一开始使用广播地址，在收到响应后就使用unicast地址。 -q：quiet output不显示任何信息； -f：表示在收到第一个响应报文后就退出； -w timeout：设定一个超时时间，单位是秒。如果到了指定时间，arping还没到完全收到响应则退出； -c count：表示发送指定数量的ARP请求数据包后就停止。如果指定了deadline选项，则arping会等待相同数量的arp响应包，直到超时为止； -s source：设定arping发送的arp数据包中的SPA字段的值。如果为空，则按下面处理，如果是DAD模式（冲突地址探测），则设置为0.0.0.0，如果是Unsolicited ARP模式（Gratutious ARP）则设置为目标地址，否则从路由表得出； -I interface：设置ping使用的网络接口。", "参数": "目的主机：指定发送ARP报文的目的主机。", "实例": "[root@localhost ~]# arping www.baidu.com ARPING 220.181.111.147 from 173.231.43.132 eth0 Unicast reply from 220.181.111.147 [00:D0:03:bc:48:00] 1.666ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 1.677ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 1.691ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 1.728ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 1.626ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 1.292ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 1.429ms Unicast reply from 220.181.111.147 [00:D0:03:BC:48:00] 2.042ms Sent 8 probes (1 broadcast(s)) Received 8 response(s)", "class": "网络测试"}
{"title": "nc/netcat命令", "语法": "nc/netcat(选项)(参数)", "选项": "-g<网关>：设置路由器跃程通信网关，最多设置8个； -G<指向器数目>：设置来源路由指向器，其数值为4的倍数； -h：在线帮助； -i<延迟秒数>：设置时间间隔，以便传送信息及扫描通信端口； -l：使用监听模式，监控传入的资料； -n：直接使用ip地址，而不通过域名服务器； -o<输出文件>：指定文件名称，把往来传输的数据以16进制字码倾倒成该文件保存； -p<通信端口>：设置本地主机使用的通信端口； -r：指定源端口和目的端口都进行随机的选择； -s<来源位址>：设置本地主机送出数据包的IP地址； -u：使用UDP传输协议； -v：显示指令执行过程； -w<超时秒数>：设置等待连线的时间； -z：使用0输入/输出模式，只在扫描通信端口时使用。", "参数": "主机：指定主机的IP地址或主机名称；\n端口号：可以是单个整数或者是一个范围。", "实例": "远程拷贝文件", "class": "网络测试"}
{"title": "dig命令", "语法": "dig(选项)(参数)", "选项": "@<服务器地址>：指定进行域名解析的域名服务器； -b<ip地址>：当主机具有多个IP地址，指定使用本机的哪个IP地址向域名服务器发送域名查询请求； -f<文件名称>：指定dig以批处理的方式运行，指定的文件中保存着需要批处理查询的DNS任务信息； -P：指定域名服务器所使用端口号； -t<类型>：指定要查询的DNS数据类型； -x<IP地址>：执行逆向域名查询； -4：使用IPv4； -6：使用IPv6； -h：显示指令帮助信息。", "参数": "主机：指定要查询域名主机；\n查询类型：指定DNS查询的类型；\n查询类：指定查询DNS的class；\n查询选项：指定查询选项。", "实例": "[root@localhost ~]# dig www.linuxde.net ; <<>> DiG 9.3.6-P1-RedHat-9.3.6-20.P1.el5_8.1 <<>> www.linuxde.net ;; global options: printcmd ;; Got answer: ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 2115 ;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 2, ADDITIONAL: 0 ;; QUESTION SECTION: ;www.linuxde.net. IN A ;; ANSWER SECTION: www.linuxde.net. 0 IN CNAME host.1.linuxde.net. host.1.linuxde.net. 0 IN A 100.42.212.8 ;; AUTHORITY SECTION: linuxde.net. 8 IN NS f1g1ns2.dnspod.net. linuxde.net. 8 IN NS f1g1ns1.dnspod.net. ;; Query time: 0 msec ;; SERVER: 202.96.104.15#53(202.96.104.15) ;; WHEN: Thu Dec 26 11:14:37 2013 ;; MSG SIZE rcvd: 121", "class": "网络测试"}
{"title": "arp命令", "语法": "arp(选项)(参数)", "选项": "-a<主机>：显示arp缓冲区的所有条目； -H<地址类型>：指定arp指令使用的地址类型； -d<主机>：从arp缓冲区中删除指定主机的arp条目； -D：使用指定接口的硬件地址； -e：以Linux的显示风格显示arp缓冲区中的条目； -i<接口>：指定要操作arp缓冲区的网络接口； -s<主机><MAC地址>：设置指定的主机的IP地址与MAC地址的静态映射； -n：以数字方式显示arp缓冲区中的条目； -v：显示详细的arp缓冲区条目，包括缓冲区条目的统计信息； -f<文件>：设置主机的IP地址与MAC地址的静态映射。", "参数": "主机：查询arp缓冲区中指定主机的arp条目。", "实例": "[root@localhost ~]# arp -v Address HWtype HWaddress Flags Mask Iface 192.168.0.134 ether 00:21:5E:C7:4D:88 C eth1 115.238.144.129 ether 38:22:D6:2F:B2:F1 C eth0 Entries: 2 Skipped: 0 Found: 2", "class": "网络测试"}
{"title": "ping命令", "语法": "ping(选项)(参数)", "选项": "-d：使用Socket的SO_DEBUG功能； -c<完成次数>：设置完成要求回应的次数； -f：极限检测； -i<间隔秒数>：指定收发信息的间隔时间； -I<网络界面>：使用指定的网络界面送出数据包； -l<前置载入>：设置在送出要求信息之前，先行发出的数据包； -n：只输出数值； -p<范本样式>：设置填满数据包的范本样式； -q：不显示指令执行过程，开头和结尾的相关信息除外； -r：忽略普通的Routing Table，直接将数据包送到远端主机上； -R：记录路由过程； -s<数据包大小>：设置数据包的大小； -t<存活数值>：设置存活数值TTL的大小； -v：详细显示指令的执行过程。", "参数": "目的主机：指定发送ICMP报文的目的主机。", "实例": "[root@AY1307311912260196fcZ ~]# ping www.linuxde.net PING host.1.linuxde.net (100.42.212.8) 56(84) bytes of data. 64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=1 ttl=50 time=177 ms 64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=2 ttl=50 time=178 ms 64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=3 ttl=50 time=174 ms 64 bytes from 100-42-212-8.static.webnx.com (100.42.212.8): icmp_seq=4 ttl=50 time=177 ms ...按Ctrl+C结束 --- host.1.linuxde.net ping statistics --- 4 packets transmitted, 4 received, 0% packet loss, time 2998ms rtt min/avg/max/mdev = 174.068/176.916/178.182/1.683 ms", "class": "网络测试"}
{"title": "traceroute命令", "语法": "traceroute(选项)(参数)", "选项": "-d：使用Socket层级的排错功能； -f<存活数值>：设置第一个检测数据包的存活数值TTL的大小； -F：设置勿离断位； -g<网关>：设置来源路由网关，最多可设置8个； -i<网络界面>：使用指定的网络界面送出数据包； -I：使用ICMP回应取代UDP资料信息； -m<存活数值>：设置检测数据包的最大存活数值TTL的大小； -n：直接使用IP地址而非主机名称； -p<通信端口>：设置UDP传输协议的通信端口； -r：忽略普通的Routing Table，直接将数据包送到远端主机上。 -s<来源地址>：设置本地主机送出数据包的IP地址； -t<服务类型>：设置检测数据包的TOS数值； -v：详细显示指令的执行过程； -w<超时秒数>：设置等待远端主机回报的时间； -x：开启或关闭数据包的正确性检验。", "参数": "主机：指定目的主机IP地址或主机名。", "实例": "traceroute www.58.com traceroute to www.58.com (211.151.111.30), 30 hops max, 40 byte packets 1 unknown (192.168.2.1) 3.453 ms 3.801 ms 3.937 ms 2 221.6.45.33 (221.6.45.33) 7.768 ms 7.816 ms 7.840 ms 3 221.6.0.233 (221.6.0.233) 13.784 ms 13.827 ms 221.6.9.81 (221.6.9.81) 9.758 ms 4 221.6.2.169 (221.6.2.169) 11.777 ms 122.96.66.13 (122.96.66.13) 34.952 ms 221.6.2.53 (221.6.2.53) 41.372 ms 5 219.158.96.149 (219.158.96.149) 39.167 ms 39.210 ms 39.238 ms 6 123.126.0.194 (123.126.0.194) 37.270 ms 123.126.0.66 (123.126.0.66) 37.163 ms 37.441 ms 7 124.65.57.26 (124.65.57.26) 42.787 ms 42.799 ms 42.809 ms 8 61.148.146.210 (61.148.146.210) 30.176 ms 61.148.154.98 (61.148.154.98) 32.613 ms 32.675 ms 9 202.106.42.102 (202.106.42.102) 44.563 ms 44.600 ms 44.627 ms 10 210.77.139.150 (210.77.139.150) 53.302 ms 53.233 ms 53.032 ms 11 211.151.104.6 (211.151.104.6) 39.585 ms 39.502 ms 39.598 ms 12 211.151.111.30 (211.151.111.30) 35.161 ms 35.938 ms 36.005 ms", "class": "网络测试"}
{"title": "netstat命令", "语法": "netstat(选项)", "选项": "-a或--all：显示所有连线中的Socket； -A<网络类型>或--<网络类型>：列出该网络类型连线中的相关地址； -c或--continuous：持续列出网络状态； -C或--cache：显示路由器配置的快取信息； -e或--extend：显示网络其他相关信息； -F或--fib：显示FIB； -g或--groups：显示多重广播功能群组组员名单； -h或--help：在线帮助； -i或--interfaces：显示网络界面信息表单； -l或--listening：显示监控中的服务器的Socket； -M或--masquerade：显示伪装的网络连线； -n或--numeric：直接使用ip地址，而不通过域名服务器； -N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称； -o或--timers：显示计时器； -p或--programs：显示正在使用Socket的程序识别码和程序名称； -r或--route：显示Routing Table； -s或--statistice：显示网络工作信息统计表； -t或--tcp：显示TCP传输协议的连线状况； -u或--udp：显示UDP传输协议的连线状况； -v或--verbose：显示指令执行过程； -V或--version：显示版本信息； -w或--raw：显示RAW传输协议的连线状况； -x或--unix：此参数的效果和指定\"-A unix\"参数相同； --ip或--inet：此参数的效果和指定\"-A inet\"参数相同。", "实例": "列出所有端口 (包括监听和未监听的)", "class": "网络测试"}
{"title": "ssh-copy-id命令", "语法": "ssh-copy-id [-i [identity_file]] [user@]machine", "选项": "-i：指定公钥文件", "实例": "1、把本地的ssh公钥文件安装到远程主机对应的账户下：", "class": "网络安全"}
{"title": "ssh-agent命令", "语法": "ssh-agent [-c | -s] [-d] [-a bind_address] [-t life] [command [arg ...]] ssh-agent [-c | -s] -k", "选项": "-a bind_address：bind the agent to the UNIX-domain socket bind_address. -c：生成C-shell风格的命令输出。 -d：调试模式。 -k：把ssh-agent进程杀掉。 -s：生成Bourne shell 风格的命令输出。 -t life：设置默认值添加到代理人的身份最大寿命。", "实例": "运行ssh-agent：", "class": "网络安全"}
{"title": "ssh-add命令", "语法": "ssh-add [-cDdLlXx] [-t life] [file ...] ssh-add -s pkcs11 ssh-add -e pkcs11", "选项": "-D：删除ssh-agent中的所有密钥. -d：从ssh-agent中的删除密钥 -e pkcs11：删除PKCS#11共享库pkcs1提供的钥匙。 -s pkcs11：添加PKCS#11共享库pkcs1提供的钥匙。 -L：显示ssh-agent中的公钥 -l：显示ssh-agent中的密钥 -t life：对加载的密钥设置超时时间，超时ssh-agent将自动卸载密钥 -X：对ssh-agent进行解锁 -x：对ssh-agent进行加锁", "实例": "1、把专用密钥添加到 ssh-agent 的高速缓存中：", "class": "网络安全"}
{"title": "nmap命令", "语法": "nmap(选项)(参数)", "选项": "-O：激活操作探测； -P0：值进行扫描，不ping主机； -PT：是同TCP的ping； -sV：探测服务版本信息； -sP：ping扫描，仅发现目标主机是否存活； -ps：发送同步（SYN）报文； -PU：发送udp ping； -PE：强制执行直接的ICMPping； -PB：默认模式，可以使用ICMPping和TCPping； -6：使用IPv6地址； -v：得到更多选项信息； -d：增加调试信息地输出； -oN：以人们可阅读的格式输出； -oX：以xml格式向指定文件输出信息； -oM：以机器可阅读的格式输出； -A：使用所有高级扫描选项； --resume：继续上次执行完的扫描； -P：指定要扫描的端口，可以是一个单独的端口，用逗号隔开多个端口，使用“-”表示端口范围； -e：在多网络接口Linux系统中，指定扫描使用的网络接口； -g：将指定的端口作为源端口进行扫描； --ttl：指定发送的扫描报文的生存期； --packet-trace：显示扫描过程中收发报文统计； --scanflags：设置在扫描报文中的TCP标志。", "参数": "ip地址：指定待扫描报文中的TCP地址。", "实例": "安装nmap", "class": "网络安全"}
{"title": "iptstate命令", "语法": "iptstate(选项)", "选项": "-b：指定输出信息的排序规则； -d：不动态地改变窗口大小； -f：过滤本地回送信息； -l：将ip地址解析为域名； -L：隐藏于DNS查询相关状态； -r：指定刷新屏幕的频率； -R：反序排列； -s：单次运行模式； -t：显示汇总信息。", "class": "网络安全"}
{"title": "ssh-keygen命令", "语法": "ssh-keygen(选项)", "选项": "-b：指定密钥长度； -e：读取openssh的私钥或者公钥文件； -C：添加注释； -f：指定用来保存密钥的文件名； -i：读取未加密的ssh-v2兼容的私钥/公钥文件，然后在标准输出设备上显示openssh兼容的私钥/公钥； -l：显示公钥文件的指纹数据； -N：提供一个新密语； -P：提供（旧）密语； -q：静默模式； -t：指定要创建的密钥类型。", "class": "网络安全"}
{"title": "sftp-server命令", "语法": "sftp-server", "class": "网络安全"}
{"title": "sshd命令", "语法": "sshd(选项)", "选项": "-4：强制使用IPv4地址； -6：强制使用IPv6地址； -D：以后台守护进程方式运行服务器； -d：调试模式； -e：将错误发送到标准错误设备，而不是将其发送到系统日志； -f：指定服务器的配置文件； -g：指定客户端登录时的过期时间，如果在此期限内，用户没有正确认证，则服务器断开次客户端的连接； -h：指定读取主机key文件； -i：ssh以inetd方式运行； -o：指定ssh的配置选项； -p：静默模式，没有任何信息写入日志； -t：测试模式。", "class": "网络安全"}
{"title": "ssh-keyscan命令", "语法": "ssh-keyscan(选项)(参数)", "选项": "-4：强制使用IPv4地址； -6：强制使用IPv6地址； -f：从指定文件中读取“地址列表/名字列表”； -p：指定连接远程主机的端口； -T：指定连接尝试的超时时间； -t：指定要创建的密钥类型； -v：信息模式，打印调试信息。", "参数": "主机列表：指定要收集公钥的主机列表。", "class": "网络安全"}
{"title": "sftp命令", "语法": "sftp(选项)(参数)", "选项": "-B：指定传输文件时缓冲区的大小； -l：使用ssh协议版本1； -b：指定批处理文件； -C：使用压缩； -o：指定ssh选项； -F：指定ssh配置文件； -R：指定一次可以容忍多少请求数； -v：升高日志等级。", "参数": "目标主机：指定sftp服务器ip地址或者主机名。", "class": "网络安全"}
{"title": "ssh命令", "语法": "ssh(选项)(参数)", "选项": "-1：强制使用ssh协议版本1； -2：强制使用ssh协议版本2； -4：强制使用IPv4地址； -6：强制使用IPv6地址； -A：开启认证代理连接转发功能； -a：关闭认证代理连接转发功能； -b：使用本机指定地址作为对应连接的源ip地址； -C：请求压缩所有数据； -F：指定ssh指令的配置文件； -f：后台执行ssh指令； -g：允许远程主机连接主机的转发端口； -i：指定身份文件； -l：指定连接远程服务器登录用户名； -N：不执行远程指令； -o：指定配置选项； -p：指定远程服务器上的端口； -q：静默模式； -X：开启X11转发功能； -x：关闭X11转发功能； -y：开启信任X11转发功能。", "参数": "远程主机：指定要连接的远程ssh服务器；\n指令：要在远程ssh服务器上执行的指令。", "class": "网络安全"}
{"title": "mii-tool命令", "语法": "usage: mii-tool [-VvRrwl] [-A media,... | -F media] [interface ...]", "选项": "-V 显示版本信息； -v 显示网络接口的信息； -R 重设MII到开启状态； -r 重启自动协商模式； -w 查看网络接口连接的状态变化； -l 写入事件到系统日志； -A 指令特定的网络接口； -F 更改网络接口协商方式； media: 100baseT4, 100baseTx-FD, 100baseTx-HD, 10baseT-FD, 10baseT-HD,         (to advertise both HD and FD) 100baseTx, 10baseT", "实例": "查看网络接口的协商状态：", "class": "网络配置"}
{"title": "ethtool命令", "语法": "ethtool [ -a | -c | -g | -i | -d | -k | -r | -S |] ethX ethtool [-A] ethX [autoneg on|off] [rx on|off] [tx on|off] ethtool [-C] ethX [adaptive-rx on|off] [adaptive-tx on|off] [rx-usecs N] [rx-frames N] [rx-usecs-irq N] [rx-frames-irq N] [tx-usecs N] [tx-frames N] [tx-usecs-irq N] [tx-frames-irq N] [stats-block-usecs N][pkt-rate-low N][rx-usecs-low N] [rx-frames-low N] [tx-usecs-low N] [tx-frames-lowN] [pkt-rate-high N] [rx-usecs-high N] [rx-frames-high N] [tx-usecs-high N] [tx-frames-high N] [sample-interval N] ethtool [-G] ethX [rx N] [rx-mini N] [rx-jumbo N] [tx N] ethtool [-e] ethX [raw on|off] [offset N] [length N] ethtool [-E] ethX [magic N] [offset N] [value N] ethtool [-K] ethX [rx on|off] [tx on|off] [sg on|off] [tso on|off] ethtool [-p] ethX [N] ethtool [-t] ethX [offline|online] ethtool [-s] ethX [speed 10|100|1000] [duplex half|full] [autoneg on|off] [port tp|aui|bnc|mii] [phyad N] [xcvr internal|external] [wol p|u|m|b|a|g|s|d...] [sopass xx:yy:zz:aa:bb:cc] [msglvl N]", "选项": "-a 查看网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。 -A 修改网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。 -c display the Coalesce information of the specified ethernet card。 -C Change the Coalesce setting of the specified ethernet card。 -g Display the rx/tx ring parameter information of the specified ethernet card。 -G change the rx/tx ring setting of the specified ethernet card。 -i 显示网卡驱动的信息，如驱动的名称、版本等。 -d 显示register dump信息, 部分网卡驱动不支持该选项。 -e 显示EEPROM dump信息，部分网卡驱动不支持该选项。 -E 修改网卡EEPROM byte。 -k 显示网卡Offload参数的状态：on 或 off，包括rx-checksumming、tx-checksumming等。 -K 修改网卡Offload参数的状态。 -p 用于区别不同ethX对应网卡的物理位置，常用的方法是使网卡port上的led不断的闪；N指示了网卡闪的持续时间，以秒为单位。 -r 如果auto-negotiation模块的状态为on，则restarts auto-negotiation。 -S 显示NIC- and driver-specific 的统计参数，如网卡接收/发送的字节数、接收/发送的广播包个数等。 -t 让网卡执行自我检测，有两种模式：offline or online。 -s 修改网卡的部分配置，包括网卡速度、单工/全双工模式、mac地址等。", "数据来源": "Ethtool命令显示的信息来源于网卡驱动层，即TCP/ip协议的链路层。该命令在Linux内核中实现的逻辑层次为：", "实例": "查看机器上网卡的速度：百兆还是千兆，请输入：", "class": "网络配置"}
{"title": "nisdomainname命令", "语法": "nisdomainname(选项)", "选项": "-v：详细信息模式。", "class": "网络配置"}
{"title": "dhclient命令", "语法": "dhclient(选项)(参数)", "选项": "0：指定dhcp客户端监听的端口号； -d：总是以前台方式运行程序； -q：安静模式，不打印任何错误的提示信息； -r：释放ip地址。", "参数": "网络接口：操作的网络接口。", "实例": "dhclient -r #释放IP dhclient #获取IP", "class": "网络配置"}
{"title": "domainname命令", "语法": "domainname(选项)(参数)", "选项": "-v：详细信息模式； -F：指定读取域名信息的文件。", "参数": "NIS域名：指定要设置的NIS域名。", "实例": "[root@AY1307311912260196fcZ ~]# domainname -v getdomainname()=`(none)' (none) [root@AY1307311912260196fcZ ~]# domainname www.linuxde.net [root@AY1307311912260196fcZ ~]# domainname -v getdomainname()=`www.linuxde.net' www.linuxde.net", "class": "网络配置"}
{"title": "ypdomainname命令", "语法": "ypdomainname(选项)", "选项": "-v：详细信息模式。", "class": "网络配置"}
{"title": "usernetctl命令", "语法": "usernetctl(参数)", "参数": "网络接口：被操纵的网络接口；\nup：激活网络接口；\ndown：禁用网络接口；\nreport：报告网络接口状态。", "class": "网络配置"}
{"title": "dnsdomainname命令", "语法": "dnsdomainname(选项)", "选项": "-v：详细信息模式，输出指令执行的详细信息。", "实例": "[root@AY1307311912260196fcZ ~]# dnsdomainname -v gethostname()=`AY1307311912260196fcZ' Resolving `AY1307311912260196fcZ' ... Result: h_name=`AY1307311912260196fcZ' Result: h_addr_list=`10.160.7.81'", "class": "网络配置"}
{"title": "hostname命令", "语法": "hostname(选项)(参数)", "选项": "-v：详细信息模式； -a：显示主机别名； -d：显示DNS域名； -f：显示FQDN名称； -i：显示主机的ip地址； -s：显示短主机名称，在第一个点处截断； -y：显示NIS域名。", "参数": "主机名：指定要设置的主机名。", "实例": "[root@AY1307311912260196fcZ ~]# hostname AY1307311912260196fcZ", "class": "网络配置"}
{"title": "ifup命令", "语法": "ifup(参数)", "参数": "网络接口：要激活的网络接口。", "实例": "ifup eth0 #激活eth0", "class": "网络配置"}
{"title": "ifcfg命令", "语法": "ifcfg(参数)", "参数": "网络接口：指定要操作的网络接口； add/del：添加或删除网络接口上的地址； ip地址：指定IP地址和子网掩码； Stop：停用指定的网络接口的IP地址。", "class": "网络配置"}
{"title": "ifconfig命令", "语法": "ifconfig(参数)", "参数": "add<地址>：设置网络设备IPv6的ip地址； del<地址>：删除网络设备IPv6的IP地址； down：关闭指定的网络设备； <hw<网络设备类型><硬件地址>：设置网络设备的类型与硬件地址； io_addr<I/O地址>：设置网络设备的I/O地址； irq<IRQ地址>：设置网络设备的IRQ； media<网络媒介类型>：设置网络设备的媒介类型； mem_start<内存地址>：设置网络设备在主内存所占用的起始地址； metric<数目>：指定在计算数据包的转送次数时，所要加上的数目； mtu<字节>：设置网络设备的MTU； netmask<子网掩码>：设置网络设备的子网掩码； tunnel<地址>：建立IPv4与IPv6之间的隧道通信地址； up：启动指定的网络设备； -broadcast<地址>：将要送往指定地址的数据包当成广播数据包来处理； -pointopoint<地址>：与指定地址的网络设备建立直接连线，此模式具有保密功能； -promisc：关闭或启动指定网络设备的promiscuous模式； IP地址：指定网络设备的IP地址； 网络设备：指定网络设备的名称。", "实例": "显示网络设备信息（激活状态的）：", "class": "网络配置"}
{"title": "ifdown命令", "语法": "ifdown(参数)", "参数": "网络接口：要禁用的网络接口。", "实例": "ifdown eth0 #禁用eth0", "class": "网络配置"}
{"title": "route命令", "语法": "route(选项)(参数)", "选项": "-A：设置地址类型； -C：打印将Linux核心的路由缓存； -v：详细信息模式； -n：不执行DNS反向查找，直接显示数字形式的IP地址； -e：netstat格式显示路由表； -net：到一个网络的路由表； -host：到一个主机的路由表。", "参数": "Add：增加指定的路由记录； Del：删除指定的路由记录； Target：目的网络或目的主机； gw：设置默认网关； mss：设置TCP的最大区块长度（MSS），单位MB； window：指定通过路由表的TCP连接的TCP窗口大小； dev：路由记录所表示的网络接口。", "实例": "显示当前路由：", "class": "网络配置"}
{"title": "讓你提前認識軟件開發(2)：軟件開發工程師常用的工具軟件命令", "class": "常用工具命令"}
{"title": "磁盤與文件系統管理命令", "class": "常用工具命令"}
{"title": "技巧05監測樹莓派的硬件命令", "class": "常用工具命令"}
{"title": "linux文件和目錄管理的基本命令命令", "class": "常用工具命令"}
{"title": "Find命令", "class": "常用工具命令"}
{"title": "rm – Remove命令", "class": "常用工具命令"}
{"title": "cd – Change Directory命令", "對於當前在終端運行的會中中， cd <directory> 將給定的文件夾（或目錄）設置成當前工作目錄。": "", "class": "常用工具命令"}
{"title": "ls – List命令", "class": "常用工具命令"}
{"title": "Decompression Bomb命令", "class": "常用工具命令"}
{"title": "Malicious Source Code命令", "class": "常用工具命令"}
{"title": "Dd Command命令", "class": "常用工具命令"}
{"title": "Tar Bomb命令", "class": "常用工具命令"}
{"title": "Mkfs Command命令", "class": "常用工具命令"}
{"title": "Rm -Rf Command命令", "class": "常用工具命令"}
{"title": "Mv Folder/Dev/Null Command命令", "class": "常用工具命令"}
{"title": "蘋果與斯坦福攜手深入進行心臟項目研究命令", "class": "常用工具命令"}
{"title": "pssh命令", "安装pssh": "在CentOS系统环境下，介绍yum的安装和源码安装的方式：", "选项": "--version：查看版本 --help：查看帮助，即此信息 -h：主机文件列表，内容格式”[user@]host[:port]” -H：主机字符串，内容格式”[user@]host[:port]” -：登录使用的用户名 -p：并发的线程数【可选】 -o：输出的文件目录【可选】 -e：错误输入文件【可选】 -t：TIMEOUT 超时时间设置，0无限制【可选】 -O：SSH的选项 -v：详细模式 -A：手动输入密码模式 -x：额外的命令行参数使用空白符号，引号，反斜线处理 -X：额外的命令行参数，单个参数模式，同-x -i：每个服务器内部处理信息输出 -P：打印出服务器返回信息", "实例": "获取每台服务器的uptime：", "class": "常用工具命令"}
{"title": "screen命令", "语法": "# screen [-AmRvx -ls -wipe][-d ][-h ][-r ][-s ][-S ]", "选项": "-A 　将所有的视窗都调整为目前终端机的大小。 -d <作业名称> 　将指定的screen作业离线。 -h <行数> 　指定视窗的缓冲区行数。 -m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r <作业名称> 　恢复离线的screen作业。 -R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s 　指定建立新视窗时，所要执行的shell。 -S <作业名称> 　指定screen作业的名称。 -v 　显示版本信息。 -x 　恢复之前离线的screen作业。 -ls或--list 　显示目前所有的screen作业。 -wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。", "常用screen参数": "screen -S yourname -> 新建一个叫yourname的session screen -ls -> 列出当前所有的session screen -r yourname -> 回到yourname这个session screen -d yourname -> 远程detach某个session screen -d -r yourname -> 结束当前session并回到yourname这个session", "使用 screen": "安装screen", "screen 高级应用": "会话共享", "class": "常用工具命令"}
{"title": "speedtest-cli命令", "安装speedtest－cli": "speedtest-cli需要在python 2.4-3.4的环境下，安装方法都很简单，自己选择以下最适合你的一种。", "用法": "-h, --help show this help message and exit --share 分享你的网速，该命令会在speedtest网站上生成网速测试结果的图片。 --simple Suppress verbose output, only show basic information --list 根据距离显示speedtest.net的测试服务器列表。 --server=SERVER 指定列表中id的服务器来做测试。 --mini=MINI URL of the Speedtest Mini server --source=SOURCE Source ip address to bind to --version Show the version number and exit", "实例": "列出所有在中国的测试服务器：", "class": "常用工具命令"}
{"title": "clockdiff命令", "选项": "-o：使用IP时间戳选项来测量系统时间差。时间戳只用3个。 -o1：使用IP时间戳选项来测量系统时间差。用4个时间戳。如果-o和-o1都没有设置，那么就是用ICMP时间戳来测试系统时间差。", "实例": "lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1 PING www.ustc.edu.cn (202.38.64.9) 56(124) bytes of data. 64 bytes from 202.38.64.9: icmp_seq=1 ttl=62 time=0.823 ms TS: lixi-desktop.local (210.45.74.25) 12522473 absolute 210.45.74.1 -251 local-gw.ustc.edu.cn (202.38.64.126) 248 202.38.64.9 -857514 Unrecorded hops: 3 --- www.ustc.edu.cn ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.823/0.823/0.823/0.000 ms", "class": "常用工具命令"}
{"title": "ntpdate命令", "语法": "ntpdate [ -b] [ -d] [ -s] [ -u] [ -aKeyid] [ -eAuthenticationDelay] [ -kKeyFile] [ -oVersion] [ -pSamples] [ -tTimeOut] Server...", "选项": "-aKeyid\n使用 Keyid 来认证全部数据包。\n-b\n通过调用 settimeofday 子例程来增加时钟的时间。\n-d\n指定调试方式。判断 ntpdate 命令会产生什么结果（不产生实际的结果）。结果再现在屏幕上。这个标志使用无特权的端口。\n-eAuthenticationDelay\n指定延迟认证处理的时间秒数。\n-kKeyFile\n当不使用缺省值 /etc/ntp.keys 文件时，为包含密钥的文件指定一个不同的名称。 请参阅文件KeyFile的描述。\n-oVersion\n当轮询它的发出数据包时，指定使用的 NTP 版本实现。 Version 的值可以是 1，2，3。缺省值是 3。\n-pSamples\n指定从每个服务器获取的样本的数目。 Samples 的值在 1 和 8 之间，并包括 1 和 8。它的缺省值是 4。\n-s\n指定日志操作 syslog 设施的使用，而不是使用标准输出。 当运行 ntpdate 命令和 cron命令时，它是很有用的。\n-tTimeOut\n指定等待响应的时间。给定 TimeOut 的值四舍五入为 0.2 秒的倍数。缺省值是 1 秒。\n-u\n指定使用无特权的端口发送数据包。 当在一个对特权端口的输入流量进行阻拦的防火墙后是很有益的， 并希望在防火墙之外和主机同步。防火墙是一个系统或者计算机，它控制从外网对专用网的访问。", "class": "常用工具命令"}
{"title": "rsync命令", "语法": "rsync [OPTION]... SRC DEST rsync [OPTION]... SRC [USER@]host:DEST rsync [OPTION]... [USER@]HOST:SRC DEST rsync [OPTION]... [USER@]HOST::SRC DEST rsync [OPTION]... SRC [USER@]HOST::DEST rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]", "选项": "-v, --verbose 详细模式输出。 -q, --quiet 精简输出模式。 -c, --checksum 打开校验开关，强制对文件传输进行校验。 -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。 -r, --recursive 对子目录以递归模式处理。 -R, --relative 使用相对路径信息。 -b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。 --backup-dir 将备份文件(如~filename)存放在在目录下。 -suffix=SUFFIX 定义备份文件前缀。 -u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。 -l, --links 保留软链结。 -L, --copy-links 想对待常规文件一样处理软链结。 --copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。 --safe-links 忽略指向SRC路径目录树以外的链结。 -H, --hard-links 保留硬链结。 -p, --perms 保持文件权限。 -o, --owner 保持文件属主信息。 -g, --group 保持文件属组信息。 -D, --devices 保持设备文件信息。 -t, --times 保持文件时间信息。 -S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。 -n, --dry-run现实哪些文件将被传输。 -w, --whole-file 拷贝文件，不进行增量检测。 -x, --one-file-system 不要跨越文件系统边界。 -B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。 -e, --rsh=command 指定使用rsh、ssh方式进行数据同步。 --rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。 -C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。 --existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。 --delete 删除那些DST中SRC没有的文件。 --delete-excluded 同样删除接收端那些被该选项指定排除的文件。 --delete-after 传输结束以后再删除。 --ignore-errors 及时出现IO错误也进行删除。 --max-delete=NUM 最多删除NUM个文件。 --partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。 --force 强制删除目录，即使不为空。 --numeric-ids 不将数字的用户和组id匹配为用户名和组名。 --timeout=time ip超时时间，单位为秒。 -I, --ignore-times 不跳过那些有同样的时间和长度的文件。 --size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。 --modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。 -T --temp-dir=DIR 在DIR中创建临时文件。 --compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。 -P 等同于 --partial。 --progress 显示备份过程。 -z, --compress 对备份的文件在传输时进行压缩处理。 --exclude=PATTERN 指定排除不需要传输的文件模式。 --include=PATTERN 指定不排除而需要传输的文件模式。 --exclude-from=FILE 排除FILE中指定模式的文件。 --include-from=FILE 不排除FILE指定模式匹配的文件。 --version 打印版本信息。 --address 绑定到特定的地址。 --config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。 --port=PORT 指定其他的rsync服务端口。 --blocking-io 对远程shell使用阻塞IO。 -stats 给出某些文件的传输状态。 --progress 在传输时现实传输过程。 --log-format=formAT 指定日志文件格式。 --password-file=FILE 从FILE中得到密码。 --bwlimit=KBPS 限制I/O带宽，KBytes per second。 -h, --help 显示帮助信息。", "实例": "SSH方式", "class": "常用工具命令"}
{"title": "vdfuse命令", "什么是VirtualBox": "VirtualBox是一款功能强大的x86虚拟机软件，它不仅具有丰富的特色，而且性能也很优异。更可喜的是，VirtualBox于数日前走向开源，成为了一个发布在GPL许可之下的自由软件。VirtualBox可以在Linux和Windows主机中运行，并支持在其中安装Windows (NT 4.0、2000、XP、Server 2003、Vista)、DOS/Windows 3.x、Linux (2.4 和 2.6)、OpenBSD等系列的客户操作系统。", "语法": "vdfuse [options] -f image-file mountpoint", "选项": "-h 帮助 -r 只读 -t 类型 (VDI, VMDK, VHD, or raw; default: auto) -f 镜像文件 -a 允许所有用户读取 -w 允许所有用户都写 -g 前台运行 -v 输出反馈 -d debug模式", "实例": "使用如下如下语句挂载.vdi文件：", "class": "常用工具命令"}
{"title": "ngrep命令", "安装": "ngrep命令的下载地址：http://ngrep.sourceforge.net/，libpcap下载地址：http://www.tcpdump.org/。先用yum install libpcap完全安装libpcap，注意有时候用libpcap安装包安装的不完整会影响ngrep的使用。", "语法": "ngrep <-LhNXViwqpevxlDtTRM> <-IO pcap_dump> <-n num> <-d dev> <-A num> <-s snaplen> <-S limitlen> <-w normal|byline|single|none> <-c cols> <-P char> <-F file> <match expression> <bpf filter>", "选项": "-e ：显示空数据包 -i ：忽略大小写 -v ：反转匹配 -R ：don't do privilege revocation logic -x ：以16进制格式显示 -X ：以16进制格式匹配 -w ：整字匹配 -p ：不使用混杂模式 -l ：make stdout line buffered -D ：replay pcap_dumps with their recorded time intervals -t ：在每个匹配的包之前显示时间戳 -T ：显示上一个匹配的数据包之间的时间间隔 -M ：仅进行单行匹配 -I ：从文件中读取数据进行匹配 -O ：将匹配的数据保存到文件 -n ：仅捕获指定数目的数据包进行查看 -A ：匹配到数据包后dump随后的指定数目的数据包 -s ：set the bpf caplen -S ：set the limitlen on matched packets -W ：设置显示格式byline将解析包中的换行符 -c ：强制显示列的宽度 -P ：set the non-printable display char to what is specified -F ：使用文件中定义的bpf(Berkeley Packet Filter) -N ：显示由IANA定义的子协议号 -d ：使用哪个网卡，可以用-L选项查询 -L ：查询网卡接口", "实例": "捕捉cloudian：18080端口的request和response，-W byline用来解析包中的换行符，否则包里的所有数据都是连续的，可读性差。-d lo是监听本地网卡：", "class": "常用工具命令"}
{"title": "tempfile命令", "tempfile命令": "tempfile命令只有在基于Debian的发行版中才默认自带，比如Ubuntu，其他发行版没有这个命令。", "$$变量": "如果没有tempfile命令的Linux发行版，也可以使用自己的临时文件名：", "class": "常用工具命令"}
{"title": "xargs命令", "xargs命令用法": "xargs用作替换工具，读取输入数据重新格式化后输出。", "子Shell（Subshells）": "运行一个shell脚本时会启动另一个命令解释器.，就好像你的命令是在命令行提示下被解释的一样，类似于批处理文件里的一系列命令。每个shell脚本有效地运行在父shell(parent shell)的一个子进程里。这个父shell是指在一个控制终端或在一个xterm窗口中给你命令指示符的进程。", "class": "常用工具命令"}
{"title": "awk命令", "模式": "模式可以是以下任意一个：", "操作": "操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：", "awk的工作原理": "awk 'BEGIN{ commands } pattern{ commands } END{ commands }'", "算术运算符": "运算符\n描述\n+ -\n加，减\n* / &\n乘，除与求余\n+ - !\n一元加，减和逻辑非\n^ ***\n求幂\n++ --\n增加或减少，作为前缀或后缀", "赋值运算符": "运算符\n描述\n= += -= *= /= %= ^= **=\n赋值语句", "逻辑运算符": "运算符\n描述\n||\n逻辑或\n&&\n逻辑与", "正则运算符": "运算符\n描述\n~ ~!\n匹配正则表达式和不匹配正则表达式", "关系运算符": "运算符\n描述\n< <= > >= != ==\n关系运算符", "其它运算符": "运算符\n描述\n$\n字段引用\n空格\n字符串连接符\n?:\nC条件表达式\nin\n数组中是否存在某键值", "运算级优先级表": "级别越高越优先", "读取下一条记录": "awk中next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。net语句一般用于多行合并：", "简单地读取一条记录": "awk getline用法：输出重定向需用到getline函数。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。", "关闭文件": "awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。", "输出到一个文件": "awk中允许用如下方式将结果输出到一个文件：", "条件判断语句": "if(表达式) 语句1 else 语句2", "循环语句": "while语句", "其他语句": "break 当 break 语句用于 while 或 for 语句时，导致退出程序循环。\ncontinue 当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。\nnext 能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。\nexit 语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。", "数组的定义": "数字做数组索引（下标）：", "数组相关函数": "得到数组长度：", "二维、多维数组使用": "awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，array[2,4]=1这样的访问是允许的。awk使用一个特殊的字符串SUBSEP(�34)作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2�344。", "算术函数": "格式\n描述\natan2( y, x )\n返回 y/x 的反正切。\ncos( x )\n返回 x 的余弦；x 是弧度。\nsin( x )\n返回 x 的正弦；x 是弧度。\nexp( x )\n返回 x 幂函数。\nlog( x )\n返回 x 的自然对数。\nsqrt( x )\n返回 x 平方根。\nint( x )\n返回 x 的截断至整数的值。\nrand( )\n返回任意数字 n，其中 0 <= n < 1。\nsrand( [expr] )\n将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。", "字符串函数": "格式\n描述\ngsub( Ere, Repl, [ In ] )\n除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。\nsub( Ere, Repl, [ In ] )\n用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。\nindex( String1, String2 )\n在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。\nlength [(String)]\n返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nblength [(String)]\n返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nsubstr( String, M, [ N ] )\n返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。\nmatch( String, Ere )\n在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。\nsplit( String, A, [Ere] )\n将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。\ntolower( String )\n返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\ntoupper( String )\n返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\nsprintf(Format, Expr, Expr, . . . )\n根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。", "一般函数": "格式\n描述\nclose( Expression )\n用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。\nsystem(command )\n执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。\nExpression | getline [ Variable ]\n从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ] < Expression\n从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ]\n将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。", "时间函数": "格式\n描述\n函数名\n说明\nmktime( YYYY MM dd HH MM ss[ DST])\n生成时间格式\nstrftime([format [, timestamp]])\n格式化时间输出，将时间戳转为时间字符串\n具体格式，见下表.\nsystime()\n得到时间戳,返回从1970年1月1日开始到当前时间(不计闰年)的整秒数", "class": "常用工具命令"}
{"title": "yes命令", "语法": "yes(参数)", "参数": "字符串：指定要重复打印的字符串。", "实例": "[root@localhost ~]# yes testline testline testline testline testline testline testline testline testline ...一直重复打印 testline，按Ctrl+C结束。", "class": "常用工具命令"}
{"title": "date命令", "语法": "date(选项)(参数)", "选项": "-d<字符串>：显示字符串所指的日期与时间。字符串前后必须加上双引号； -s<字符串>：根据字符串来设置日期与时间。字符串前后必须加上双引号； -u：显示GMT； --help：在线帮助； --version：显示版本信息。", "参数": "<+时间日期格式>：指定显示时使用的日期时间格式。", "日期格式字符串列表": "%H 小时，24小时制（00~23） %I 小时，12小时制（01~12） %k 小时，24小时制（0~23） %l 小时，12小时制（1~12） %M 分钟（00~59） %p 显示出AM或PM %r 显示时间，12小时制（hh:mm:ss %p） %s 从1970年1月1日00:00:00到目前经历的秒数 %S 显示秒（00~59） %T 显示时间，24小时制（hh:mm:ss） %X 显示时间的格式（%H:%M:%S） %Z 显示时区，日期域（CST） %a 星期的简称（Sun~Sat） %A 星期的全称（Sunday~Saturday） %h,%b 月的简称（Jan~Dec） %B 月的全称（January~December） %c 日期和时间（Tue Nov 20 14:12:58 2012） %d 一个月的第几天（01~31） %x,%D 日期（mm/dd/yy） %j 一年的第几天（001~366） %m 月份（01~12） %w 一个星期的第几天（0代表星期天） %W 一年的第几个星期（00~53，星期一为第一天） %y 年的最后两个数字（1999则是99）", "实例": "格式化输出：", "class": "常用工具命令"}
{"title": "consoletype命令", "语法": "consoletype", "实例": "[root@localhost ~]# consoletype pty", "class": "常用工具命令"}
{"title": "info命令", "语法": "info(选项)(参数)", "选项": "-d：添加包含info格式帮助文档的目录； -f：指定要读取的info格式的帮助文档； -n：指定首先访问的info帮助文件的节点； -o：输出被选择的节点内容到指定文件。", "参数": "帮助主题：指定需要获得帮助的主题，可以是指令、函数以及配置文件。", "实例": "在info后面输入命令的名称就可以查看该命令的info帮助文档了：", "class": "常用工具命令"}
{"title": "hostid命令", "语法": "hostid", "选项": "--help：显示帮助信息； --version：显示版本信息。", "实例": "[root@localhost ~]# hostid 007f0100", "class": "常用工具命令"}
{"title": "clear命令", "语法": "clear", "实例": "直接输入clear命令当前终端上的任何信息就可被清除。", "class": "常用工具命令"}
{"title": "whoami命令", "语法": "whoami(选项)", "选项": "--help：在线帮助； --version：显示版本信息。", "实例": "[root@localhost ~]# whoami root [root@localhost ~]# id -un root", "class": "常用工具命令"}
{"title": "users命令", "语法": "users(选项)", "选项": "--help：显示命令的帮助信息； --version：显示命令的版本信息。", "实例": "[root@localhost ~]# users root root", "class": "常用工具命令"}
{"title": "sleep命令", "语法": "sleep(参数)", "参数": "时间：指定要暂停时间的长度。", "实例": "有时在写一些以循环方式运行的监控脚本，设置时间间隔是必不可少的，下面是一个Shell进度条的脚本演示在脚本中生成延时。", "class": "常用工具命令"}
{"title": "md5sum命令", "语法": "md5sum(选项)(参数)", "选项": "-b：二进制模式读取文件； -t或--text：把输入的文件作为文本文件看待； -c：从指定文件中读取MD5校验和，并进行校验； --status：验证成功时不输出任何信息； -w：当校验不正确时给出警告信息。", "参数": "文件：指定保存着文件名和校验和的文本文件。", "实例": "生成一个文件insert.sql的md5值：", "class": "常用工具命令"}
{"title": "mesg命令", "语法": "mesg(参数)", "参数": "y/n：y表示运行向当前终端写信息，n表示禁止向当前终端写信息。", "实例": "[root@localhost ~]# mesg y #允许系统用户将信息直接显示在你的屏幕上。 [root@localhost ~]# mesg n #不允许系统用户将信息直接显示在你的屏幕上。", "class": "常用工具命令"}
{"title": "mtools命令", "语法": "mtools(选项)", "选项": "-a：长文件名重复时自动更改目标文件的长文件名； -A：短文件名重复但长文件名不同时自动更改目标文件的短文件名； -o：长文件名重复时，将目标文件覆盖现有的文件； -O：短文件名重复但长文件名不同时，将目标文件覆盖现有的文件； -r：长文件名重复时，要求用户更改目标文件的长文件名； -R：短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名； -s：长文件名重复时，则不处理该目标文件； -S：短文件名重复但长文件名不同时，则不处理该目标文件； -v：执行时显示详细的说明； -V：显示版本信息。", "实例": "使用mtools命令显示其支持的所有的指令，输入如下命令：", "class": "常用工具命令"}
{"title": "login命令", "语法": "login(选项)(参数)", "选项": "-p：告诉login指令不销毁环境变量； -h：指定远程服务器的主机名。", "参数": "用户名：指定登录使用的用户名。", "class": "常用工具命令"}
{"title": "RHCSA 系列（二）: 如何進行文件和目錄管理命令", "创建、删除、复制和移动文件及目录": "文件和目錄管理是每一個系統管理員都應該掌握的必備技能。它包括了從頭開始的創建、刪除文本文件（每個程序的核心配置）以及目錄（你用來組織文件和其它目錄），以及識別已有文件的類型。", "输入输出重定向以及管道": "命令行環境提供了兩個非常有用的功能：允許重定向命令的輸入和輸出為另一個文件，以及發送命令的輸出到另一個命令，這分別稱為重定向和管道。", "归档，压缩，解包，解压文件": "如果你需要傳輸、備份、或者通過郵件發送一組文件，你可以使用一個存檔（或打包）工具，如 tar，通常與gzip，bzip2，或 xz 等壓縮工具配合使用。", "创建软连接和硬链接": "在Linux中，有2種類型的鏈接文件：硬鏈接和軟（也稱為符號）鏈接。因為硬鏈接文件只是現存文件的另一個名字，使用相同的 inode 號，它指向實際的數據；而符號鏈接只是指向的文件名。", "class": "Shell内建命令"}
{"title": "Pstree命令", "class": "Shell内建命令"}
{"title": "Vmstat命令", "class": "Shell内建命令"}
{"title": "xeyes命令", "class": "Shell内建命令"}
{"title": "fg , bg命令", "class": "Shell内建命令"}
{"title": "w命令", "class": "Shell内建命令"}
{"title": "sh命令", "语法": "bash [options] [file]", "选项": "-c string：命令从-c后的字符串读取。 -i：实现脚本交互。 -n：进行shell脚本的语法检查。 -x：实现shell脚本逐条语句的跟踪。", "实例": "使用-x选项跟踪脚本调试shell脚本，能打印出所执行的每一行命令以及当前状态：", "class": "Shell内建命令"}
{"title": "trap命令", "语法": "trap [-lp] [[arg] sigspec ...]", "选项参数说明": "如果arg参数缺省或者为“-”，每个接收到的sigspec信号都将会被重置为它们进入shell时的值；", "信号": "信号是一种进程间通信机制，它给应用程序提供一种异步的软件中断，使应用程序有机会接受其他程序活终端发送的命令(即信号)。应用程序收到信号后，有三种处理方式：忽略，默认，或捕捉。进程收到一个信号后，会检查对该信号的处理机制。如果是SIG_IGN，就忽略该信号；如果是SIG_DFT，则会采用系统默认的处理动作，通常是终止进程或忽略该信号；如果给该信号指定了一个处理函数(捕捉)，则会中断当前进程正在执行的任务，转而去执行该信号的处理函数，返回后再继续执行被中断的任务。", "捕获信号": "当你按下 Ctrl + C 键或 Break 键在终端一个shell程序的执行过程中，正常程序将立即终止，并返回命令提示符。这可能并不总是可取的。例如，你可能最终留下了一堆临时文件，将不会清理。", "class": "Shell内建命令"}
{"title": "let命令", "语法": "let arg [arg ...] #arg代表运算式", "用法": "自加操作let no++\n自减操作let no--\n简写形式let no+=10，let no-=20，分别等同于let no=no+10，let no=no-20", "实例": "#!/bin/bash let a=5+4 b=9-3 echo $a $b", "class": "Shell内建命令"}
{"title": "seq命令", "语法": "seq [选项]... 尾数 seq [选项]... 首数 尾数 seq [选项]... 首数 增量 尾数", "选项": "-f, --format=格式 使用printf 样式的浮点格式 -s, --separator=字符串 使用指定字符串分隔数字（默认使用：\\n） -w, --equal-width 在列前添加0 使得宽度相同", "实例": "-f选项：指定格式", "class": "Shell内建命令"}
{"title": "tput命令", "什么是 terminfo 数据库？": "UNIX 系统上的 terminfo 数据库用于定义终端和打印机的属性及功能，包括各设备（例如，终端和打印机）的行数和列数以及要发送至该设备的文本的属性。UNIX 中的几个常用程序都依赖 terminfo 数据库提供这些属性以及许多其他内容，其中包括 vi 和 emacs 编辑器以及 curses 和 man 程序。", "实例": "使输出的字符串有颜色，底色，加粗：", "class": "Shell内建命令"}
{"title": "apropos命令", "语法": "apropos [-dalhvV] [-e|-w|-r] [-s section] [-m system[,...]] [-M path] [-L locale] [-C file] keyword ...", "选项": "-d, --debug：输出调试信息。 -v, --verbose：输出详细的警告信息。 -r, -- regex：将每个keyword作为正则表达式解释。这是默认行为。每个keyword将匹配手册页和描述。 -w, --wildcard：将每个keyword作为shell样式的通配符解释。 -e, --exact：每个keyword将精确匹配手册页名字和描述。 -a, --and：只显示匹配所有keyword的手册页和描述。默认显示匹配任何keyword的项。 -l, --long：不根据终端宽度缩减输出。 -s section, --section section：只查找指定的手册section。 -m system[,...], --systems=system[,...]：用于查找其它操作系统的手册页。 -M path, --manpath=path：指定从其它以冒号分隔的手册页层次查找。默认使用$MANPATH环境变量。这个选项覆盖$MANPATH的内容。 -L locale, --locale=locale：apropos调用C函数setlocale来得到当前本地化信息，包括$LC_MESSAGE和$LANG。使用该选项提供一个locale字符串来临时更改本地化信息。 -C file, --config-file=file：使用这个用户配置文件而不是默认的~/.manpath。 -h, --help：打印帮助信息并退出。 -V, --version：打印版本信息并退出。", "返回值": "返回0表示成功，1表示用法、语法或配置文件错误，2表示操作错误，16表示没有找到匹配的内容。", "实例": "[root@localhost ~]# man -k who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::whoami (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid [root@localhost ~]# apropos who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::WhoAmI (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid", "class": "Shell内建命令"}
{"title": "set命令", "语法": "set(选项)(参数)", "选项": "-a：标示已修改的变量，以供输出至环境变量。 -b：使被中止的后台程序立刻回报执行状态。 -C：转向所产生的文件无法覆盖已存在的文件。 -d：Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 -e：若指令传回值不等于0，则立即退出shell。 -f：取消使用通配符。 -h：自动记录函数的所在位置。 -H Shell：可利用\"!\"加<指令编号>的方式来执行history中记录的指令。 -k：指令所给的参数都会被视为此指令的环境变量。 -l：记录for循环的变量名称。 -m：使用监视模式。 -n：只读取指令，而不实际执行。 -p：启动优先顺序模式。 -P：启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 -t：执行完随后的指令，即退出shell。 -u：当执行时使用到未定义过的变量，则显示错误信息。 -v：显示shell所读取的输入值。 -x：执行指令后，会先显示该指令及所下的参数。", "参数": "取消某个set曾启动的参数。", "实例": "使用declare命令定义一个新的环境变量\"mylove\"，并且将其值设置为\"Visual C++\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "command命令", "语法": "command(参数)", "参数": "指令：需要调用的指令及参数。", "实例": "使用command命令调用执行echo Linux，输入如下命令：", "class": "Shell内建命令"}
{"title": "dris命令", "语法": "dris(选项)", "选项": "+n：显示从左边算起第n笔的目录； -n：显示从右边算起第n笔的目录； -l：显示目录完整的记录。", "class": "Shell内建命令"}
{"title": "fc命令", "语法": "fc(选项)(参数)", "选项": "-l：显示历史命令； -n：显示历史命令时，不显示编号； -r：反序显示历史命令。", "参数": "起始指令编号：指定要编辑的起始指令编号；\n结尾指令编号：指定要编辑的结尾指令编号。", "实例": "使用该指令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "bind命令", "语法": "bind(选项)", "选项": "-d：显示按键配置的内容； -f<按键配置文件>：载入指定的按键配置文件； -l：列出所有的功能； -m<按键配置>：指定按键配置； -q<功能>：显示指定功能的按键； -v：列出目前的按键配置与其功能。", "实例": "bind -x '\"\\C-l\":ls -l' #直接按 CTRL+L 就列出目录", "class": "Shell内建命令"}
{"title": "readonly命令", "语法": "readonly(选项)(参数)", "选项": "-f：定义只读函数； -a：定义只读数组变量； -p：显示系统中全部只读变量列表。", "参数": "变量定义：定义变量，格式为“变量名=‘变量值’”。", "实例": "使用readonly命令显示系统中所有的已经定义的只读变量，输入如下命令：", "class": "Shell内建命令"}
{"title": "read命令", "语法": "read(选项)(参数)", "选项": "-p：指定读取值时的提示符； -t：指定读取值时等待的时间（秒）。", "参数": "变量：指定读取值的变量名。", "实例": "下面的列表给出了read命令的常用方式：", "class": "Shell内建命令"}
{"title": "bg命令", "语法": "bg(参数)", "参数": "作业标识：指定需要放到后台的作业标识号。", "实例": "使用bg命令将任务号为1的任务放到后台继续执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "ulimit命令", "语法": "ulimit(选项)", "选项": "-a：显示目前资源限制的设定； -c <core文件上限>：设定core文件的最大值，单位为区块； -d <数据节区大小>：程序数据节区的最大值，单位为KB； -f <文件大小>：shell所能建立的最大文件，单位为区块； -H：设定资源的硬性限制，也就是管理员所设下的限制； -m <内存大小>：指定可使用内存的上限，单位为KB； -n <文件数目>：指定同一时间最多可开启的文件数； -p <缓冲区大小>：指定管道缓冲区的大小，单位512字节； -s <堆叠大小>：指定堆叠的上限，单位为KB； -S：设定资源的弹性限制； -t <CPU时间>：指定CPU使用时间的上限，单位为秒； -u <程序数目>：用户最多可开启的程序数目； -v <虚拟内存大小>：指定可使用的虚拟内存上限，单位为KB。", "实例": "[root@localhost ~]# ulimit -a core file size (blocks, -c) 0 #core文件的最大值为100 blocks。 data seg size (kbytes, -d) unlimited #进程的数据段可以任意大。 scheduling priority (-e) 0 file size (blocks, -f) unlimited #文件可以任意大。 pending signals (-i) 98304 #最多有98304个待处理的信号。 max locked memory (kbytes, -l) 32 #一个任务锁住的物理内存的最大值为32KB。 max memory size (kbytes, -m) unlimited #一个任务的常驻物理内存的最大值。 open files (-n) 1024 #一个任务最多可以同时打开1024的文件。 pipe size (512 bytes, -p) 8 #管道的最大空间为4096字节。 POSIX message queues (bytes, -q) 819200 #POSIX的消息队列的最大值为819200字节。 real-time priority (-r) 0 stack size (kbytes, -s) 10240 #进程的栈的最大值为10240字节。 cpu time (seconds, -t) unlimited #进程使用的CPU时间。 max user processes (-u) 98304 #当前用户同时打开的进程（包括线程）的最大个数为98304。 virtual memory (kbytes, -v) unlimited #没有限制进程的最大地址空间。 file locks (-x) unlimited #所能锁住的文件的最大个数没有限制。", "class": "Shell内建命令"}
{"title": "enable命令", "语法": "enable(选项)(参数)", "选项": "-n：关闭指定的内部命令； -a：显示所有激活的内部命令； -f：从指定文件中读取内部命令。", "参数": "内部命令：指定要关闭或激活的内部命令。", "实例": "使用enable命令显示所有激活的内部命令：", "class": "Shell内建命令"}
{"title": "declare命令", "语法": "declare(选项)(参数)", "选项": "+/-：\"-\"可用来指定变量的属性，\"+\"则是取消变量所设的属性； -f：仅显示函数； r：将变量设置为只读； x：指定的变量会成为环境变量，可供shell以外的程序来使用； i：[设置值]可以是数值，字符串或运算式。", "参数": "shell变量：声明shell变量，格式为“变量名=值”。", "实例": "首先使用declare命令定义shell变量\"test\"，并且将其值设置为\"man.linuxde.net\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "wait命令", "语法": "wait(参数)", "参数": "进程或作业标示：指定进程号或者作业号。", "实例": "使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：", "class": "Shell内建命令"}
{"title": "builtin命令", "语法": "builtin(参数)", "参数": "shell内部命令：指定需要执行的shell内部命令。", "实例": "使用builtin命令执行shell内部命alias显示命令别名，输入如下命令：", "class": "Shell内建命令"}
{"title": "shopt命令", "语法": "shopt(选项)(参数)", "选项": "-s：激活指定的shell行为选项； -u：关闭指定的shell行为选项。", "参数": "shell选项：指定要操作的shell选项。", "实例": "使用shopt命令显示当前所有可以设置的shell操作选项，输入如下命令：", "class": "Shell内建命令"}
{"title": "exit命令", "语法": "exit(参数)", "参数": "返回值：指定shell返回值。", "实例": "退出当前shell：", "class": "Shell内建命令"}
{"title": "jobs命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "Shell内建命令"}
{"title": "help命令", "语法": "help(选项)(参数)", "选项": "-s：输出短格式的帮助信息。仅包括命令格式。", "参数": "内部命令：指定需要显示帮助信息的shell内部命令。", "实例": "使用help命令显示shell内部shopt命令的帮助信息，输入如下命令：", "class": "Shell内建命令"}
{"title": "history命令", "语法": "history(选项)(参数)", "选项": "-c：清空当前历史命令； -a：将历史命令缓冲区中命令写入历史命令文件中； -r：将历史命令文件中的命令读入当前历史命令缓冲区； -w：将当前历史命令缓冲区命令写入历史命令文件中。", "参数": "n：打印最近的n条历史命令。", "实例": "使用history命令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "logout命令", "语法": "logout", "class": "Shell内建命令"}
{"title": "export命令", "语法": "export(选项)(参数)", "选项": "-f：代表[变量名称]中为函数名称； -n：删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中； -p：列出所有的shell赋予程序的环境变量。", "参数": "变量：指定要输出或者删除的环境变量。", "实例": "一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。查看已经存在的环境变量：", "class": "Shell内建命令"}
{"title": "exec命令", "语法": "exec(选项)(参数)", "选项": "-c：在空环境中执行指定的命令。", "参数": "指令：要执行的指令和相应的参数。", "实例": "首先使用echo命令将文本“Linux C++”进行输出，输入如下命令：", "class": "Shell内建命令"}
{"title": "env命令", "语法": "env(选项)(参数)", "选项": "-i：开始一个新的空的环境； -u<变量名>：从当前环境中删除指定的变量。", "参数": "变量定义：定义在新的环境中变量，定义多个变量定义用空格隔开。格式为“变量名=值”；\n指定：指定要执行的指令和参数。", "实例": "[root@localhost ~]# env hostname=LinServ-1 TERM=linux SHELL=/bin/bash HISTSIZE=1000 SSH_CLIENT=192.168.2.111 2705 22 SSH_TTY=/dev/pts/0 USER=root LS_COLORS=no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35: mail=/var/spool/mail/root PATH=/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin INPUTRC=/etc/inputrc pwd=/root LANG=zh_CN.UTF-8 SHLVL=1 HOME=/root logname=root SSH_CONNECTION=192.168.2.111 2705 192.168.2.2 22 LESSOPEN=|/usr/bin/lesspipe.sh %s G_BROKEN_FILENAMES=1 _=/bin/env", "class": "Shell内建命令"}
{"title": "unset命令", "语法": "unset(选项)(参数)", "选项": "-f：仅删除函数； -v：仅删除变量。", "参数": "shell变量或函数：指定要删除的shell变量或shell函数。", "实例": "使用unset命令将前面所创建的环境变量mylove及其对应的值进行删除，输入如下命令：", "class": "Shell内建命令"}
{"title": "kill命令", "语法": "kill(选项)(参数)", "选项": "-a：当处理当前进程时，不限制命令名和进程号的对应关系； -l <信息编号>：若不加<信息编号>选项，则-l参数会列出全部的信息名称； -p：指定kill 命令只打印相关进程的进程号，而不发送任何信号； -s <信息名称或编号>：指定要送出的信息； -u：指定用户。", "参数": "进程或作业识别号：指定要删除的进程或作业。", "实例": "列出所有信号名称：", "class": "Shell内建命令"}
{"title": "unalias命令", "语法": "unalias(选项)(参数)", "选项": "-a：取消所有命令别名。", "参数": "命令别名：指定要取消的命令别名。", "实例": "使用unalias命令将已经设置的命令别名\"cc\"取消，输入如下命令：", "class": "Shell内建命令"}
{"title": "type命令", "语法": "type(选项)(参数)", "选项": "-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”； -p：如果给出的指令为外部指令，则显示其绝对路径； -a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。", "参数": "指令：要显示类型的指令。", "实例": "[root@localhost ~]# type ls ls is aliased to `ls --color=tty' [root@localhost ~]# type cd cd is a shell builtin [root@localhost ~]# type date date is /bin/date [root@localhost ~]# type mysql mysql is /usr/bin/mysql [root@localhost ~]# type nginx -bash: type: nginx: not found [root@localhost ~]# type if if is a shell keyword [root@localhost ~]# type which which is aliased to `alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde' [root@localhost ~]# type -a cd cd is a shell builtin [root@localhost ~]# type -a grep grep is /bin/grep", "class": "Shell内建命令"}
{"title": "fg命令", "语法": "fg(参数)", "参数": "作业标识：指定要放到前台的作业标识号。", "实例": "使用fg命令将任务号为1的任务从后台执行转换到前台执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "alias命令", "语法": "alias(选项)(参数)", "选项": "-p：打印已经设置的命令别名。", "参数": "命令别名设置：定义命令别名，格式为“命令别名=‘实际命令’”。", "实例": "alias 的基本使用方法为：", "class": "Shell内建命令"}
{"title": "納德拉為微軟定調：我們是工具制造者和平臺提供商命令", "class": "打印"}
{"title": "reject命令", "语法": "reject(选项)(参数)", "选项": "-E：当连接到服务器时强制使用加密； -U：指定连接服务器时使用的用户名； -h：指定连接服务器名和端口号； -r：指定拒绝打印任务的原因。", "参数": "目标：指定目标打印机。", "class": "打印"}
{"title": "lpadmin命令", "语法": "lpadmin(选项)(参数)", "选项": "-c：将打印机加入类； -i：为打印机设置“system V”风格的接口脚本； -m：从mode目录设置一个标准的“system V”接口脚本或“PPD”文件； -o：为“PPD”或服务器设置选项； -r：从类中删除打印机； -u：设置打印机用户级的访问控制； -D：为打印机提供一个文字描述； -E：允许打印机接受打印任务； -L：为打印机位置提供一个文字描述； -P：为打印机指定一个ppd描述文件； -p：指定要配置的打印机名称； -d：设置默认打印机。", "参数": "打印机：指定要配置的打印机的名称。", "class": "打印"}
{"title": "cupsenable命令", "语法": "cupsenable(选项)(参数)", "选项": "-E：当连接到服务器时强制使用加密； -U：指定连接服务器时使用的用户名； -u：指定打印任务所属的用户； -h：指定连接的服务器名和端口号；", "参数": "目标：指定目标打印机。", "class": "打印"}
{"title": "accept命令", "语法": "accept(选项)(参数)", "选项": "-E：当连接到服务器时强制加密； -U：指定连接服务器时使用的用户名； -h：指定连接服务器名和端口号。", "参数": "目标：指定目标打印机。", "class": "打印"}
{"title": "lpstat命令", "语法": "lpstat(选项)", "选项": "-E：与打印机连接时加密； -R：显示打印任务的等级； -U：指定可选用户名； -a：显示接受打印任务的打印机； -c：显示打印机类； -d：显示默认打印机； -h：指定可选的服务器信息； -l：显示长格式； -p：显示指定打印机，以及打印机是否接受打印任务； -s：显示汇总信息； -t：显示所有的状态信息。", "class": "打印"}
{"title": "cupsdisable命令", "语法": "cupsdisable(选项)(参数)", "选项": "-E：当连接到服务器时强制使用加密； -U：指定连接服务器时使用的用户名； -u：指定打印任务所属的用户； -c：取消指定打印机的所有打印任务； -h：指定连接的服务器名和端口号； -r：停止打印机的原因。", "参数": "目标：指定目标打印机。", "class": "打印"}
{"title": "lpc命令", "语法": "lpc", "实例": "[root@localhost ~]# lpc lpc> ? 命令可能是缩写。命令是： exit help quit status ? lpc> exit", "class": "打印"}
{"title": "cancel命令", "语法": "cancel(选项)(参数)", "选项": "-a：取消所有打印任务； -E：当连接到服务器时强制使用加密； -U：指定连接服务器时使用的用户名； -u：指定打印任务所属的用户； -h：指定连接的服务器名和端口号。", "参数": "打印任务号：指定要取消的打印任务编号。", "class": "打印"}
{"title": "lp命令", "语法": "lp(选项)(参数)", "选项": "-E：与打印服务器连接时强制使用加密； -U：指定连接打印服务器时使用的用户名； -d：指定接收打印任务的目标打印机； -i：指定一个存在的打印任务号； -m：打印完成时发送E-mail； -n：指定打印的份数； -t：指定打印任务的名称； -H：指定打印任务开始的时间； -P：指定需要打印的页码。", "参数": "文件：需打印的文件。", "实例": "要在连接在设备dlp0上的打印机lp0上打印文件/etc/motd，请输入：", "class": "打印"}
{"title": "lpq命令", "语法": "lpq(选项)", "选项": "-E：强制使用加密方式与服务器连接； -P：显示中的打印机上的打印队列状态；； -U：自动可选的用户名； -a：报告所有打印机的定义任务； -h：指定打印服务器信息； -l：使用长格式输出； +：指定显示状态的间隔时间。", "class": "打印"}
{"title": "eject命令", "语法": "eject(选项)(参数)", "选项": "-a<开关>或--auto<开关>：控制设备的自动退出功能； -c<光驱编号>或--changerslut<光驱编号> 选择光驱柜中的光驱； -d或--default：显示预设的设备，而不是实际执行动作； -f或--floppy：退出抽取式磁盘； -h或--help：显示帮助； -n或--noop：显示指定的设备； -q或--tape：退出磁带； -r或--cdrom：退出光盘； -s或--scsi：以SCSI指令来退出设备； -t或--trayclose：关闭光盘的托盘； -v或--verbose：执行时，显示详细的说明。", "参数": "设备名：指定弹出的设备名称。", "class": "打印"}
{"title": "lprm命令", "语法": "lprm(选项)(参数)", "选项": "-E：与打印服务器连接时强制使用加密； -P：指定接受打印任务的目标打印机； -U：指定可选的用户名。", "参数": "打印任务：指定需删除的打印任务号。", "实例": "将打印机hpprint中的第102号任务移除：", "class": "打印"}
{"title": "lpr命令", "语法": "lpr(选项)(参数)", "选项": "-E：与打印服务器连接时强制使用加密； -H：指定可选的打印服务器； -C：指定打印任务的名称； -P：指定接受打印任务的目标打印机； -U：指定可选的用户名； -#：指定打印的份数； -h：关闭banner打印； -m：打印完成后发送E-mail； -r：打印完成后删除文件。", "参数": "文件：需打印的文件。", "实例": "将man1和man2送到打印机lp进行打印：", "class": "打印"}
{"title": "基於 Android 的遠程系統管理，Cura 0.4.0 發布命令", "class": "软件开发"}
{"title": "谷歌VR團隊再獲關鍵人物：曾開發Vive最好應用命令", "class": "软件开发"}
{"title": "一起高效写代码，软件开发平台「CircleCI」获C轮3100万美元融资命令", "class": "软件开发"}
{"title": "factor命令", "class": "软件包管理"}
{"title": "dnf命令", "安装 DNF 包管理器": "DNF 并未默认安装在 RHEL 或 CentOS 7系统中，但是 Fedora 22 已经默认使用 DNF .", "总结": "DNF 包管理器作为 YUM 包管理器的升级替代品，它能自动完成更多的操作。但在我看来，正因如此，所以 DNF 包管理器不会太受那些经验老道的 Linux 系统管理者的欢迎。举例如下：", "class": "软件包管理"}
{"title": "dpkg-reconfigure命令", "语法": "dpkg-reconfigure(选项)(参数)", "选项": "-a：重新配置所有的软件包； -u或--unseen-only：仅显示未提过的问题； --default-priority：使用默认优先级，而非“低”级； --force：强制执行操作，需谨慎使用此选项； --no-reload：不要轻易的重装模板（使用时请慎重考虑）； -f或--frontend：指定 debconf 前端界面； -p或--priority：指定要显示的问题的最优先级； --terse：开启简要模式。", "参数": "软件包名：需要重新配置的已安装的软件包。", "实例": "用于配置语言：", "class": "软件包管理"}
{"title": "dpkg命令", "语法": "dpkg(选项)(参数)", "选项": "-i：安装软件包； -r：删除软件包； -P：删除软件包的同时删除其配置文件； -L：显示于软件包关联的文件； -l：显示已安装软件包列表； --unpack：解开软件包； -c：显示软件包内文件列表； --confiugre：配置软件包。", "参数": "Deb软件包：指定要操作的.deb软件包。", "实例": "dpkg -i package.deb #安装包 dpkg -r package #删除包 dpkg -P package #删除包（包括配置文件） dpkg -L package #列出与该包关联的文件 dpkg -l package #显示该包的版本 dpkg --unpack package.deb #解开deb包的内容 dpkg -S keyword #搜索所属的包内容 dpkg -l #列出当前已安装的包 dpkg -c package.deb #列出deb包的内容 dpkg --configure package #配置包", "class": "软件包管理"}
{"title": "apt-sortpkgs命令", "语法": "apt-sortpkgs(选项)(参数)", "选项": "-s：使用源索引字段排序； -h：显示帮助信息。", "参数": "文件：指定要排序的包含debian包信息的索引文件。", "class": "软件包管理"}
{"title": "apt-key命令", "语法": "apt-key(参数)", "参数": "操作指令：APT密钥操作指令。", "实例": "apt-key list #列出已保存在系统中key。 apt-key add keyname #把下载的key添加到本地trusted数据库中。 apt-key del keyname #从本地trusted数据库删除key。 apt-key update #更新本地trusted数据库，删除过期没用的key。", "class": "软件包管理"}
{"title": "aptitude命令", "语法": "aptitude(选项)(参数)", "选项": "-h：显示帮助信息； -d：仅下载软件包，不执行安装操作； -P：每一步操作都要求确认； -y：所有问题都回答“yes”； -v：显示附加信息； -u：启动时下载新的软件包列表。", "参数": "操作命令：用户管理软件包的操作命令。", "实例": "以下是我总结的一些常用aptitude命令，仅供参考：", "class": "软件包管理"}
{"title": "apt-get命令", "语法": "apt-get(选项)(参数)", "选项": "-c：指定配置文件。", "参数": "管理指令：对APT软件包的管理操作；\n软件包：指定要操纵的软件包。", "实例": "使用apt-get命令的第一步就是引入必需的软件库，Debian的软件库也就是所有Debian软件包的集合，它们存在互联网上的一些公共站点上。把它们的地址加入，apt-get就能搜索到我们想要的软件。/etc/apt/sources.list是存放这些地址列表的配置文件，其格式如下：", "class": "软件包管理"}
{"title": "ntsysv命令", "语法": "ntsysv(选项)", "选项": "--leve：指定运行等级； --back：在互动式界面里，显示Back钮，而非cancel钮。", "实例": "输入ntsysv命令后，出现一个交互式的管理菜单，如下：", "class": "软件包管理"}
{"title": "chkconfig命令", "语法": "chkconfig(选项)", "选项": "--add：增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据； --del：删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据； --level<等级代号>：指定读系统服务要在哪一个执行等级中开启或关毕。", "实例": "chkconfig --list #列出所有的系统服务。 chkconfig --add httpd #增加httpd服务。 chkconfig --del httpd #删除httpd服务。 chkconfig --level httpd 2345 on #设置httpd在运行级别为2、3、4、5的情况下都是on（开启）的状态。 chkconfig --list #列出系统所有的服务启动情况。 chkconfig --list mysqld #列出mysqld服务设置情况。 chkconfig --level 35 mysqld on #设定mysqld在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭。 chkconfig mysqld on #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级。", "class": "软件包管理"}
{"title": "rpmsign命令", "语法": "rpmsign(选项)", "选项": "--addsign：为自动软件包添加签名； --checksig：验证软件包签名； --delsign：删除软件包签名； --import：导入公钥； --resign：重新签名软件包； --nodigest：不验证软件包摘要； --nosignature：不验证软件包签名。", "class": "软件包管理"}
{"title": "rpmdb命令", "语法": "rpmdb(选项)", "选项": "--initdb：初始化RPM数据库； --rebuilddb：从已安装的包头文件，反向重建RPM数据库。", "class": "软件包管理"}
{"title": "yum命令", "语法": "yum(选项)(参数)", "选项": "-h：显示帮助信息； -y：对所有的提问都回答“yes”； -c：指定配置文件； -q：安静模式； -v：详细模式； -d：设置调试等级（0-10）； -e：设置错误等级（0-10）； -R：设置yum处理一个命令的最大等待时间； -C：完全从缓存中运行，而不去下载或者更新任何头文件。", "参数": "install：安装rpm软件包； update：更新rpm软件包； check-update：检查是否有可用的更新rpm软件包； remove：删除指定的rpm软件包； list：显示软件包的信息； search：检查软件包的信息； info：显示指定的rpm软件包的描述信息和概要信息； clean：清理yum过期的缓存； shell：进入yum的shell提示符； resolvedep：显示rpm软件包的依赖关系； localinstall：安装本地的rpm软件包； localupdate：显示本地rpm软件包进行更新； deplist：显示rpm软件包的所有依赖关系。", "实例": "部分常用的命令包括：", "class": "软件包管理"}
{"title": "dpkg-trigger命令", "语法": "dpkg-trigger(选项)(参数)", "选项": "--check-supported：检查运行的dpkg是否支持触发器，返回值为0，则支持触发器。 --help：显示帮助信息； --admindir=<目录>：设置dpkg数据库所在的目录； --no-act：仅用于测试，不执行任何操作； --by-package=<软件包>：覆盖触发器等待者。", "参数": "触发器名：指定触发器名称。", "class": "软件包管理"}
{"title": "rpm命令", "语法": "rpm(选项)(参数)", "选项": "-a：查询所有套件； -b<完成阶段><套件档>+或-t <完成阶段><套件档>+：设置包装套件的完成阶段，并指定套件档的文件名称； -c：只列出组态配置文件，本参数需配合\"-l\"参数使用； -d：只列出文本文件，本参数需配合\"-l\"参数使用； -e<套件档>或--erase<套件档>：删除指定的套件； -f<文件>+：查询拥有指定文件的套件； -h或--hash：套件安装时列出标记； -i：显示套件的相关信息； -i<套件档>或--install<套件档>：安装指定的套件档； -l：显示套件的文件列表； -p<套件档>+：查询指定的RPM套件档； -q：使用询问模式，当遇到任何问题时，rpm指令会先询问用户； -R：显示套件的关联性信息； -s：显示文件状态，本参数需配合\"-l\"参数使用； -U<套件档>或--upgrade<套件档>：升级指定的套件档； -v：显示指令执行过程； -vv：详细显示指令执行过程，便于排错。", "参数": "软件包：指定要操纵的rpm软件包。", "实例": "如何安装rpm软件包", "class": "软件包管理"}
{"title": "rcconf命令", "语法": "rcconf(选项)", "选项": "--help：打印帮助信息； --dialog：使用对话命令显示菜单； --notermcheck：不按照终端属性来设置窗口尺寸。", "class": "软件包管理"}
{"title": "rpmbuild命令", "语法": "rpmbuild(选项)", "选项": "--initdb：初始化RPM数据库； --rebuilddb：从已安装的包头文件，方向重建RPM数据库； -ba：创建二进制和源代码包； -bb：创建二进制代码包； -bs：创建源代码包。", "实例": "rpmbuild -ba 'spec文件路径'", "class": "软件包管理"}
{"title": "rpmverify命令", "语法": "rpmverify(选项)", "选项": "-Va：验证所有软件包； -V<软件包>f：验证指定软件包； --nomd5：不验证软件包的md5摘要。", "class": "软件包管理"}
{"title": "rpmquery命令", "语法": "rpmquery(选项)", "选项": "-qf：查询指定的文件所属的软件包； -q：查询指定的软件包是否被安装； -qc：查询软件包中的配置文件； -qd：查询软件包中的文档文件； -qi：查询软件包的基本信息。", "实例": "使用rpmquery命令查询指定文件所属的软件包：", "class": "软件包管理"}
{"title": "patch命令", "语法": "patch(选项)(参数)", "选项": "-b或--backup：备份每一个原始文件； -B<备份字首字符串>或--prefix=<备份字首字符串>：设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称； -c或--context：把修补数据解译成关联性的差异； -d<工作目录>或--directory=<工作目录>：设置工作目录； -D<标示符号>或--ifdef=<标示符号>：用指定的符号把改变的地方标示出来； -e或--ed：把修补数据解译成ed指令可用的叙述文件； -E或--remove-empty-files：若修补过后输出的文件其内容是一片空白，则移除该文件； -f或--force：此参数的效果和指定\"-t\"参数类似，但会假设修补数据的版本为新版本； -F<监别列数>或--fuzz<监别列数>：设置监别列数的最大值； -g<控制数值>或--get=<控制数值>：设置以RSC或SCCS控制修补作业； -i<修补文件>或--input=<修补文件>：读取指定的修补问家你； -l或--ignore-whitespace：忽略修补数据与输入数据的跳格，空格字符； -n或--normal：把修补数据解译成一般性的差异； -N或--forward：忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使 用过； -o<输出文件>或--output=<输出文件>：设置输出文件的名称，修补过的文件会以该名称存放； -p<剥离层级>或--strip=<剥离层级>：设置欲剥离几层路径名称； -f<拒绝文件>或--reject-file=<拒绝文件>：设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej； -R或--reverse：假设修补数据是由新旧文件交换位置而产生； -s或--quiet或--silent：不显示指令执行过程，除非发生错误； -t或--batch：自动略过错误，不询问任何问题； -T或--set-time：此参数的效果和指定\"-Z\"参数类似，但以本地时间为主； -u或--unified：把修补数据解译成一致化的差异； -v或--version：显示版本信息； -V<备份方式>或--version-control=<备份方式>：用\"-b\"参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用\"-z\"参数变更，当使用\"-V\"参数指定不同备份方式时，也会产生不同字尾的备份字符串； -Y<备份字首字符串>或--basename-prefix=--<备份字首字符串>：设置文件备份时，附加在文件基本名称开头的字首字符串； -z<备份字尾字符串>或--suffix=<备份字尾字符串>：此参数的效果和指定\"-B\"参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上\"backup/\"字符串后，文件super.c会备份于/src/linux/fs/backup目录里； -Z或--set-utc：把修补过的文件更改，存取时间设为UTC； --backup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件； --binary：以二进制模式读写数据，而不通过标准输出设备； --help：在线帮助； --nobackup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件； --verbose：详细显示指令的执行过程。", "参数": "原文件：指定需要打补丁的原始文件；\n补丁文件：指定补丁文件。", "class": "软件包管理"}
{"title": "rpm2cpio命令", "语法": "rpm2cpio(参数)", "参数": "文件：指定要转换的rpm包的文件名。", "实例": "rpm2cpio ../libstdc++-4.3.0-8.i386.rpm | cpio -idv", "class": "软件包管理"}
{"title": "dpkg-statoverride命令", "语法": "dpkg-statoverride(选项)", "选项": "-add：为文件添加一个改写； --remove：为文件删除一个改写； --list：显示所有改写列表； --update：如果文件存在，则立刻执行改写操作。", "实例": "修改文件夹的权限属性：", "class": "软件包管理"}
{"title": "dpkg-preconfigure命令", "语法": "dpkg-preconfigure(选项)(参数)", "选项": "-f：选择使用的前端； -p：感兴趣的最低的优先级问题； --apt：在apt模式下运行。", "参数": "软件包：指定“.deb”软件包。", "实例": "导入debconf模板：", "class": "软件包管理"}
{"title": "dpkg-split命令", "语法": "dpkg-split(选项)(参数)", "选项": "-S：设置分割后的每个小文件最大尺寸（以字节为单位）； -s：分割软件包； -j<分块文件><分块文件>：把各个分块合并到一起； -I<分块文件>：显示分块文件的相关信息； -l：列出不匹配的部分； -dscard<文件名>：忽略不匹配的部分。", "参数": "软件包：指定需要分割的“.deb”软件包。", "实例": "把foo.deb分割出N个大小为460KB的文件：", "class": "软件包管理"}
{"title": "dpkg-query命令", "语法": "dpkg-query(选项)(参数)", "选项": "-l：列出符合匹配模式的软件包； -s：查询软件包的状态信息； -L：显示软件包所安装的文件列表； -S：从安装的软件包中查询文件； -w：显示软件包信息； -c：显示软件包的控制文件路径； -p：显示软件包的细节。", "参数": "软件包名称：指定需要查询的软件包。", "实例": "查找文件file1在哪个包里安装：", "class": "软件包管理"}
{"title": "dpkg-divert命令", "语法": "dpkg-divert(选项)(参数)", "选项": "--add：添加一个转移文件； --remove：删除一个转移文件； --list：列出匹配的转移； --truename：对应转移文件真实文件名； --quidet：安静模式。", "参数": "文件：指定转移文件名。", "实例": "指定软件包wibble安装时，写入/usr/bin/example.foo，而不是/usr/bin/example：", "class": "软件包管理"}
{"title": "dpkg-deb命令", "语法": "dpkg-deb(选项)(参数)", "选项": "-c：显示软件包中的文件列表； -e：将主控信息解压； -f：把字段内容打印到标准输出； -x：将软件包中的文件释放到指定目录下； -X：将软件包中的文件释放到指定目录下，并显示释放文件的详细过程； -w：显示软件包的信息； -l：显示软件包的详细信息； -R：提取控制信息和存档的清单文件； -b：创建debian软件包。", "参数": "文件：指定要操作的“.deb”软件包的全名或软件名。", "实例": "解压程序文件：", "class": "软件包管理"}
{"title": "ldconfig命令", "语法": "ldconfig [-v|--verbose] [-n] [-N] [-X] [-f CONF] [-C CACHE] [-r ROOT] [-l] [-p|--print-cache] [-c FORMAT] [--format=FORMAT] [-V] [-?|--help|--usage] path...", "选项": "-v或--verbose：用此选项时，ldconfig将显示正在扫描的目录及搜索到的动态链接库，还有它所创建的连接的名字。 -n：用此选项时,ldconfig仅扫描命令行指定的目录，不扫描默认目录（/lib、/usr/lib），也不扫描配置文件/etc/ld.so.conf所列的目录。 -N：此选项指示ldconfig不重建缓存文件（/etc/ld.so.cache），若未用-X选项，ldconfig照常更新文件的连接。 -X：此选项指示ldconfig不更新文件的连接，若未用-N选项，则缓存文件正常更新。 -f CONF：此选项指定动态链接库的配置文件为CONF，系统默认为/etc/ld.so.conf。 -C CACHE：此选项指定生成的缓存文件为CACHE，系统默认的是/etc/ld.so.cache，此文件存放已排好序的可共享的动态链接库的列表。 -r ROOT：此选项改变应用程序的根目录为ROOT（是调用chroot函数实现的）。选择此项时，系统默认的配置文件/etc/ld.so.conf，实际对应的为ROOT/etc/ld.so.conf。如用-r /usr/zzz时，打开配置文件/etc/ld.so.conf时，实际打开的是/usr/zzz/etc/ld.so.conf文件。用此选项，可以大大增加动态链接库管理的灵活性。 -l：通常情况下,ldconfig搜索动态链接库时将自动建立动态链接库的连接，选择此项时，将进入专家模式，需要手工设置连接，一般用户不用此项。 -p或--print-cache：此选项指示ldconfig打印出当前缓存文件所保存的所有共享库的名字。 -c FORMAT 或 --format=FORMAT：此选项用于指定缓存文件所使用的格式，共有三种：old(老格式)，new(新格式)和compat（兼容格式，此为默认格式）。 -V：此选项打印出ldconfig的版本信息，而后退出。 -? 或 --help 或 --usage：这三个选项作用相同，都是让ldconfig打印出其帮助信息，而后退出。", "class": "编程开发"}
{"title": "readelf命令", "ELF文件类型": "种类型的ELF文件：", "选项": "-a --all 显示全部信息,等价于 -h -l -S -s -r -d -V -A -I. -h --file-header 显示elf文件开始的文件头信息. -l --program-headers --segments 显示程序头（段头）信息(如果有的话)。 -S --section-headers --sections 显示节头信息(如果有的话)。 -g --section-groups 显示节组信息(如果有的话)。 -t --section-details 显示节的详细信息(-S的)。 -s --syms --symbols 显示符号表段中的项（如果有的话）。 -e --headers 显示全部头信息，等价于: -h -l -S -n --notes 显示note段（内核注释）的信息。 -r --relocs 显示可重定位段的信息。 -u --unwind 显示unwind段信息。当前只支持IA64 ELF的unwind段信息。 -d --dynamic 显示动态段的信息。 -V --version-info 显示版本段的信息。 -A --arch-specific 显示CPU构架信息。 -D --use-dynamic 使用动态段中的符号表显示符号，而不是使用符号段。 -x <number or name> --hex-dump=<number or name> 以16进制方式显示指定段内内容。number指定段表中段的索引,或字符串指定文件中的段名。 -w[liaprmfFsoR] or --debug-dump[=line,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames-interp,=str,=loc,=Ranges] 显示调试段中指定的内容。 -I --histogram 显示符号的时候，显示bucket list长度的柱状图。 -v --version 显示readelf的版本信息。 -H --help 显示readelf所支持的命令行选项。 -W --wide 宽行输出。 @file 可以将选项集中到一个文件中，然后使用这个@file选项载入。", "实例": "先给出如下例子：", "class": "编程开发"}
{"title": "objdump命令", "选项": "--archive-headers -a 显示档案库的成员信息,类似ls -l将lib*.a的信息列出。 -b bfdname --target=bfdname 指定目标码格式。这不是必须的，objdump能自动识别许多格式，比如： objdump -b oasys -m vax -h fu.o 显示fu.o的头部摘要信息，明确指出该文件是Vax系统下用Oasys编译器生成的目标文件。objdump -i将给出这里可以指定的目标码格式列表。 -C --demangle 将底层的符号名解码成用户级名字，除了去掉所开头的下划线之外，还使得C++函数名以可理解的方式显示出来。 --debugging -g 显示调试信息。企图解析保存在文件中的调试信息并以C语言的语法显示出来。仅仅支持某些类型的调试信息。有些其他的格式被readelf -w支持。 -e --debugging-tags 类似-g选项，但是生成的信息是和ctags工具相兼容的格式。 --disassemble -d 从objfile中反汇编那些特定指令机器码的section。 -D --disassemble-all 与 -d 类似，但反汇编所有section. --prefix-addresses 反汇编的时候，显示每一行的完整地址。这是一种比较老的反汇编格式。 -EB -EL --endian={big|little} 指定目标文件的小端。这个项将影响反汇编出来的指令。在反汇编的文件没描述小端信息的时候用。例如S-records. -f --file-headers 显示objfile中每个文件的整体头部摘要信息。 -h --section-headers --headers 显示目标文件各个section的头部摘要信息。 -H --help 简短的帮助信息。 -i --info 显示对于 -b 或者 -m 选项可用的架构和目标格式列表。 -j name --section=name 仅仅显示指定名称为name的section的信息 -l --line-numbers 用文件名和行号标注相应的目标代码，仅仅和-d、-D或者-r一起使用使用-ld和使用-d的区别不是很大，在源码级调试的时候有用，要求编译时使用了-g之类的调试编译选项。 -m machine --architecture=machine 指定反汇编目标文件时使用的架构，当待反汇编文件本身没描述架构信息的时候(比如S-records)，这个选项很有用。可以用-i选项列出这里能够指定的架构. --reloc -r 显示文件的重定位入口。如果和-d或者-D一起使用，重定位部分以反汇编后的格式显示出来。 --dynamic-reloc -R 显示文件的动态重定位入口，仅仅对于动态目标文件意义，比如某些共享库。 -s --full-contents 显示指定section的完整内容。默认所有的非空section都会被显示。 -S --source 尽可能反汇编出源代码，尤其当编译的时候指定了-g这种调试参数时，效果比较明显。隐含了-d参数。 --show-raw-insn 反汇编的时候，显示每条汇编指令对应的机器码，如不指定--prefix-addresses，这将是缺省选项。 --no-show-raw-insn 反汇编时，不显示汇编指令的机器码，如不指定--prefix-addresses，这将是缺省选项。 --start-address=address 从指定地址开始显示数据，该选项影响-d、-r和-s选项的输出。 --stop-address=address 显示数据直到指定地址为止，该项影响-d、-r和-s选项的输出。 -t --syms 显示文件的符号表入口。类似于nm -s提供的信息 -T --dynamic-syms 显示文件的动态符号表入口，仅仅对动态目标文件意义，比如某些共享库。它显示的信息类似于 nm -D|--dynamic 显示的信息。 -V --version 版本信息 --all-headers -x 显示所可用的头信息，包括符号表、重定位入口。-x 等价于-a -f -h -r -t 同时指定。 -z --disassemble-zeroes 一般反汇编输出将省略大块的零，该选项使得这些零块也被反汇编。 @file 可以将选项集中到一个文件中，然后使用这个@file选项载入。", "实例": "首先，在给出后面大部分测试所基于的源代码以及编译指令。 源代码如下：", "class": "编程开发"}
{"title": "pstack命令", "实例": "pstree以树结构显示进程", "class": "编程开发"}
{"title": "indent命令", "语法": "indent(选项)(源文件) 或 indent（选项)(源文件)(-o 目标文件)", "选项": "-bad：在声明区加上空白行； -bap：添加空白行； -bbb：在注释后面添加空白行； -bc：在声明段中，如果出现逗号就换行； -bl：if（或是else、for等）与后面执行区段的“{”不同行，且“}”自成一行-bli<缩排格数>设置{}缩排的格数； -br：if（或是else、for等）与后面执行区段的“{”同行，且“}”自成一行； -bs：在sizeof之后空一格； -c<栏数>：将注释置于程序右侧指定的栏位； -cd<栏数>：将注释置于声明右侧指定的栏位； -cdb：注释符号自成一行； -ce：将else置于“}”（if执行区段的结尾）之后； -ci：<缩排格数>：叙述过长而换行时，指定换行后缩排的格数； -cli<缩排格数>：使用case时，switch缩排的格数； -cp<栏数>：将注释置于else与elseif叙述右侧指定的栏位； -cs：在case之后空一格； -d<缩排格数>：针对不是放在程序码右侧的注释，设置其缩排格数； -di<栏数>：将声明区段的变量置于指定的栏位； -fc1：针对放在每行最前端的注释，设置其格式； -fca：设置所有注释的格式； -gnu：使用指定的GNU格式，该参数为默认值； -i<格数>：设置缩排的格数； -ip<格数>：设置参数的缩排格数； -kr：指定使用Kernighan&Ritchie的格式； -lp：叙述过长而换行，且叙述中包含了括号时，将括号中的每行起始栏位内容垂直对其排列； -nbad：在声明区段后不要加上空白行； -nbap：在程序后面不添加空白行； -nbbb：在注释段后面不添加空白行； -nbc：在声明段中，即使出现逗号，也不换行； -ncdb：注释符号不自成一行； -nce：不将else置于“}”后面； -ncs：不在case后面空一格； -nfc1：不要格式化放在每行最前端的注释； -nfca：不用格式化任何的注释； -nip：参数不要缩排； -nlp：叙述过长而换行，且叙述中包含了括号时，不用将括号中的每行起始栏位垂直对其排列； -npcs：在调用函数名之后，不要添加空格； -npro：不要读取indent的配置文件“.indent.pro”； -npsl：程序类型与程序名称放在同一行； -nsc：注释左侧不要添加星号； -nsob：不用处理多余的空白行； -nss：若for或while区段仅有一行时，在分号前不加空格； -nv：不显示详细的信息； -orig：使用berkeley格式； -pcs：在调用函数名与“{”之间添加空格； -psl：程序类型置于程序名称的前一行； -sc：在每行注释左侧添加星号； -sob：删除多余的空白行； -ss：若for或swile区段仅有一行时，在分号前加上空格； -st：将结果显示在标准输出设备上； -T：数据类型名称缩排； -ts<格数>：设置tab的长度； -v：显示详细的执行过程； --version：显示版本信息。", "实例": "使用indent命令将C语言源文件\"test.c\"中所有的sizeof后面添加一个空格，输入如下命令：", "class": "编程开发"}
{"title": "gdb命令", "语法": "gdb(选项)(参数)", "选项": "-cd：设置工作目录； -q：安静模式，不打印介绍信息和版本信息； -d：添加文件查找路径； -x：从指定文件中执行GDB指令； -s：设置读取的符号表文件。", "参数": "文件：二进制可执行程序。", "实例": "以下是linux下dgb调试的一个实例，先给出一个示例用的小程序，C语言代码：", "class": "编程开发"}
{"title": "gcc命令", "语法": "gcc(选项)(参数)", "选项": "-o：指定生成的输出文件； -E：仅执行编译预处理； -S：将C代码转换为汇编代码； -wall：显示警告信息； -c：仅执行编译操作，不进行连接操作。", "参数": "C源文件：指定C语言源代码文件。", "实例": "常用编译命令选项", "class": "编程开发"}
{"title": "expr命令", "语法": "expr(选项)(参数)", "选项": "--help：显示指令的帮助信息； --version：显示指令版本信息。", "参数": "表达式：要求值的表达式。", "实例": "result=`expr 2 + 3` result=$(expr $no1 + 5)", "class": "编程开发"}
{"title": "test命令", "语法": "test(选项)", "选项": "-b<文件>：如果文件为一个块特殊文件，则为真； -c<文件>：如果文件为一个字符特殊文件，则为真； -d<文件>：如果文件为一个目录，则为真； -e<文件>：如果文件存在，则为真； -f<文件>：如果文件为一个普通文件，则为真； -g<文件>：如果设置了文件的SGID位，则为真； -G<文件>：如果文件存在且归该组所有，则为真； -k<文件>：如果设置了文件的粘着位，则为真； -O<文件>：如果文件存在并且归该用户所有，则为真； -p<文件>：如果文件为一个命名管道，则为真； -r<文件>：如果文件可读，则为真； -s<文件>：如果文件的长度不为零，则为真； -S<文件>：如果文件为一个套接字特殊文件，则为真； -u<文件>：如果设置了文件的SUID位，则为真； -w<文件>：如果文件可写，则为真； -x<文件>：如果文件可执行，则为真。", "实例": "linux中shell编程中的test常见用法：", "class": "编程开发"}
{"title": "php命令", "语法": "php(选项)(参数)", "选项": "-a：进入交互模式； -c：指定“php.ini”的搜索路径。", "参数": "文件：要执行的php脚本。", "class": "编程开发"}
{"title": "protoize命令", "语法": "protoize(选项)(参数)", "选项": "-d：设置需要转换代码的目录； -x：转换代码时排除的文件。", "参数": "文件：需要转换代码的C语言源文件。", "class": "编程开发"}
{"title": "mktemp命令", "语法": "mktemp(选项)(参数)", "选项": "-q：执行时若发生错误，不会显示任何信息； -u：暂存文件会在mktemp结束前先行删除； -d：创建一个目录而非文件。", "参数": "文件：指定创建的临时文件。", "class": "编程开发"}
{"title": "perl命令", "语法": "perl(选项)(参数)", "选项": "-w：输出有用的警告信息； -U：允许不安全的操作； -c：仅检查文件的语法； -d：在调试下运行脚本程序。", "参数": "文件：要运行的perl脚本程序。", "class": "编程开发"}
{"title": "make命令", "语法": "make(选项)(参数)", "选项": "-f：指定“makefile”文件； -i：忽略命令执行返回的出错信息； -s：沉默模式，在执行之前不输出相应的命令行信息； -r：禁止使用build-in规则； -n：非执行模式，输出所有执行命令，但并不执行； -t：更新目标文件； -q：make操作将根据目标文件是否已经更新返回\"0\"或非\"0\"的状态信息； -p：输出所有宏定义和目标文件描述； -d：Debug模式，输出有关文件和检测时间的详细信息。", "参数": "目标：指定编译目标。", "知识扩展": "无论是在linux 还是在Unix环境 中，make都是一个非常重要的编译命令。不管是自己进行项目开发还是安装应用软件，我们都经常要用到make或make install。利用make工具，我们可以将大型的开发项目分解成为多个更易于管理的模块，对于一个包括几百个源文件的应用程序，使用make和 makefile工具就可以简洁明快地理顺各个源文件之间纷繁复杂的相互关系。", "class": "编程开发"}
{"title": "ldd命令", "语法": "ldd(选项)(参数)", "选项": "--version：打印指令版本号； -v：详细信息模式，打印所有相关信息； -u：打印未使用的直接依赖； -d：执行重定位和报告任何丢失的对象； -r：执行数据对象和函数的重定位，并且报告任何丢失的对象和函数； --help：显示帮助信息。", "参数": "文件：指定可执行程序或者文库。", "其他介绍": "首先ldd不是一个可执行程序，而只是一个shell脚本", "class": "编程开发"}
{"title": "nm命令", "语法": "nm(选项)(参数)", "选项": "-A：每个符号前显示文件名； -D：显示动态符号； -g：仅显示外部符号； -r：反序显示符号表。", "参数": "目标文件：二进制目标文件，通常是库文件和可执行文件。", "class": "编程开发"}
{"title": "unprotoize命令", "语法": "unprotoize(选项)(参数)", "选项": "-d：设置需要转换代码的目录； -x：转换代码时排除的文件。", "参数": "文件：需要转换代码的C语言源文件。", "class": "编程开发"}
{"title": "ld命令", "语法": "ld(选项)(参数)", "选项": "-o：指定输出文件名； -e：指定程序的入口符号。", "参数": "目标文件：指定需要连接的目标文件。", "class": "编程开发"}
{"title": "gcov命令", "语法": "gcov(选项)(参数)", "选项": "-h：显示帮助信息； -v：显示版本信息； -a：输出所有的基本块的执行计数； -n：并创建输出文件。", "参数": "V语言文件：C语言源代码文件。", "class": "编程开发"}
{"title": "as命令", "语法": "as(选项)(参数)", "选项": "-ac：忽略失败条件； -ad：忽略调试指令； -ah：包括高级源； -al：包括装配； -am：包括宏扩展； -an：忽略形式处理； -as：包括符号； =file：设置列出文件的名字； --alternate：以交互宏模式开始； -f：跳过空白和注释预处理； -g：产生调试信息； -J：对于有符号溢出不显示警告信息； -L：在符号表中保留本地符号； -o：指定要生成的目标文件； --statistics：打印汇编所用的最大空间和总时间。", "参数": "汇编文件：指定要汇编的源文件。", "class": "编程开发"}
{"title": "在 Linux的命令行下，像在 Windows環境下 一樣操作管理文件和目錄命令", "class": "目录基本操作"}
{"title": "install命令", "语法": "install [OPTION]... [-T] SOURCE DEST install [OPTION]... SOURCE... DIRECTORY install [OPTION]... -t DIRECTORY SOURCE... install [OPTION]... -d DIRECTORY...", "选项": "--backup[=CONTROL]：为每个已存在的目的地文件进行备份。 -b：类似 --backup，但不接受任何参数。 -c：(此选项不作处理)。 -d，--directory：所有参数都作为目录处理，而且会创建指定目录的所有主目录。 -D：创建<目的地>前的所有主目录，然后将<来源>复制至 <目的地>；在第一种使用格式中有用。 -g，--group=组：自行设定所属组，而不是进程目前的所属组。 -m，--mode=模式：自行设定权限模式 (像chmod)，而不是rwxr-xr-x。 -o，--owner=所有者：自行设定所有者 (只适用于超级用户)。 -p，--preserve-timestamps：以<来源>文件的访问/修改时间作为相应的目的地文件的时间属性。 -s，--strip：用strip命令删除symbol table，只适用于第一及第二种使用格式。 -S，--suffix=后缀：自行指定备份文件的<后缀>。 -v，--verbose：处理每个文件/目录时印出名称。 --help：显示此帮助信息并离开。 --version：显示版本信息并离开。", "实例": "install -d [option] DIRECTORY [DIRECTORY...]", "class": "目录基本操作"}
{"title": "tree命令", "语法": "tree(选项)(参数)", "选项": "-a：显示所有文件和目录； -A：使用ASNI绘图字符显示树状图而非以ASCII字符组合； -C：在文件和目录清单加上色彩，便于区分各种类型； -d：先是目录名称而非内容； -D：列出文件或目录的更改时间； -f：在每个文件或目录之前，显示完整的相对路径名称； -F：在执行文件，目录，Socket，符号连接，管道名称名称，各自加上\"*\"，\"/\"，\"@\"，\"|\"号； -g：列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码； -i：不以阶梯状列出文件和目录名称； -l：<范本样式> 不显示符号范本样式的文件或目录名称； -l：如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录； -n：不在文件和目录清单加上色彩； -N：直接列出文件和目录名称，包括控制字符； -p：列出权限标示； -P：<范本样式> 只显示符合范本样式的文件和目录名称； -q：用“？”号取代控制字符，列出文件和目录名称； -s：列出文件和目录大小； -t：用文件和目录的更改时间排序； -u：列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码； -x：将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该目录予以排除在寻找范围外。", "参数": "目录：执行tree指令，它会列出指定目录下的所有文件，包括子目录里的文件。", "class": "目录基本操作"}
{"title": "popd命令", "语法": "pushd(选项)(参数)", "选项": "+N：将第N个目录删除（从左边数起，数字从0开始）； -N：将第N个目录删除（从右边数起，数字从0开始）； -n：将目录出栈时，不切换目录。", "实例": "root@Mylinux:/tmp/dir4# popd（相当于popd +0） /tmp/dir3 /tmp/dir2 /tmp/dir1 ~ root@Mylinux:/tmp/dir3# pushd /tmp/dir4 /tmp/dir4 /tmp/dir3 /tmp/dir2 /tmp/dir1 ~ root@Mylinux:/tmp/dir4# popd +1 /tmp/dir4 /tmp/dir2 /tmp/dir1 ~ root@Mylinux:/tmp/dir4# popd -2 /tmp/dir4 /tmp/dir1 ~", "class": "目录基本操作"}
{"title": "pushd命令", "语法": "pushd(选项)(参数)", "选项": "-n：只加入目录到堆叠中，不进行cd操作； +n：删除从左到右的第n个目录，数字从0开始； -n：删除从右到左的第n个目录，数字从0开始；", "参数": "目录：需要压入堆栈的目录。", "实例": "root@Mylinux:/tmp/dir4# pushd /tmp/dir3 /tmp/dir3 /tmp/dir4 /tmp/dir1 ~ root@Mylinux:/tmp/dir3# pushd /tmp/dir2 /tmp/dir2 /tmp/dir3 /tmp/dir4 /tmp/dir1 ~ root@Mylinux:/tmp/dir2# pushd -1 /tmp/dir1 ~ /tmp/dir2 /tmp/dir3 /tmp/dir4", "class": "目录基本操作"}
{"title": "dirs命令", "语法": "dirs(选项)(参数)", "选项": "-c：删除目录栈中的所有记录 -l：以完整格式显示 -p：一个目录一行的方式显示 -v：每行一个目录来显示目录栈的内容，每个目录前加上的编号 +N：显示从左到右的第n个目录，数字从0开始 -N：显示从右到左的第n个日录，数字从0开始", "参数": "目录：显示目录堆叠中的记录。", "实例": "[root@localhost etc]# dirs /etc", "class": "目录基本操作"}
{"title": "rmdir命令", "语法": "rmdir(选项)(参数)", "选项": "-p或--parents：删除指定目录后，若该目录的上层目录已变成空目录，则将其一并删除； --ignore-fail-on-non-empty：此选项使rmdir命令忽略由于删除非空目录时导致的错误信息； -v或-verboes：显示命令的详细执行过程； --help：显示命令的帮助信息； --version：显示命令的版本信息。", "参数": "目录列表：要删除的空目录列表。当删除多个空目录时，目录名之间使用空格隔开。", "实例": "删除子目录os_1和其父目录bin", "class": "目录基本操作"}
{"title": "mkdir命令", "语法": "mkdir (选项)(参数)", "选项": "-Z：设置安全上下文，当使用SELinux时有效； -m<目标属性>或--mode<目标属性>建立目录的同时设置目录的权限； -p或--parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录； --version 显示版本信息。", "参数": "目录：指定要创建的目录列表，多个目录之间用空格隔开。", "实例": "在目录/usr/meng下建立子目录test，并且只有文件主有读、写和执行权限，其他人无权访问", "class": "目录基本操作"}
{"title": "rm命令", "语法": "rm (选项)(参数)", "选项": "-d：直接把欲删除的目录的硬连接数据删除成0，删除该目录； -f：强制删除文件或目录； -i：删除已有文件或目录之前先询问用户； -r或-R：递归处理，将指定目录下的所有文件与子目录一并处理； --preserve-root：不对根目录进行递归操作； -v：显示指令的详细执行过程。", "参数": "文件：指定被删除的文件列表，如果参数中含有目录，则必须加上-r或者-R选项。", "实例": "交互式删除当前目录下的文件test和example", "class": "目录基本操作"}
{"title": "pwd命令", "语法": "pwd（选项）", "选项": "--help：显示帮助信息； --version：显示版本信息。", "实例": "[root@localhost ~]# pwd /root", "class": "目录基本操作"}
{"title": "ls命令", "语法": "ls（选项）（参数）", "选项": "-a：显示所有档案及目录（ls内定将档案名或目录名称为“.”的视为影藏，不会列出）； -A：显示除影藏文件“.”和“..”以外的所有文件列表； -C：多列显示输出结果。这是默认选项； -l：与“-C”选项功能相反，所有输出信息用单列格式输出，不输出为多列； -F：在每个输出项后追加文件的类型标识符，具体含义：“*”表示具有可执行权限的普通文件，“/”表示目录，“@”表示符号链接，“|”表示命令管道FIFO，“=”表示sockets套接字。当文件为普通文件时，不输出任何标识符； -b：将文件中的不可输出的字符以反斜线“”加字符编码的方式输出； -c：与“-lt”选项连用时，按照文件状态时间排序输出目录内容，排序的依据是文件的索引节点中的ctime字段。与“-l”选项连用时，则排序的一句是文件的状态改变时间； -d：仅显示目录名，而不显示目录下的内容列表。显示符号链接文件本身，而不显示其所指向的目录列表； -f：此参数的效果和同时指定“aU”参数相同，并关闭“lst”参数的效果； -i：显示文件索引节点号（inode）。一个索引节点代表一个文件； --file-type：与“-F”选项的功能相同，但是不显示“*”； -k：以KB（千字节）为单位显示文件大小； -l：以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等； -m：用“,”号区隔每个文件和目录的名称； -n：以用户识别码和群组识别码替代其名称； -r：以文件名反序排列并输出目录内容列表； -s：显示文件和目录的大小，以区块为单位； -t：用文件和目录的更改时间排序； -L：如果遇到性质为符号链接的文件或目录，直接列出该链接所指向的原始文件或目录； -R：递归处理，将指定目录下的所有文件及子目录一并处理； --full-time：列出完整的日期与时间； --color[=WHEN]：使用不同的颜色高亮显示不同类型的。", "参数": "目录：指定要显示列表的目录，也可以是具体的文件。", "实例": "显示当前目录下非影藏文件与目录", "class": "目录基本操作"}
{"title": "mv命令", "语法": "mv(选项)(参数)", "选项": "--backup=<备份模式>：若需覆盖文件，则覆盖前先行备份； -b：当文件存在时，覆盖前，为其创建一个备份； -f：若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录； -i：交互式操作，覆盖前先行询问用户，如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。用户输入”y”，表示将覆盖目标文件；输入”n”，表示取消对源文件的移动。这样可以避免误将文件覆盖。 --strip-trailing-slashes：删除源文件中的斜杠“/”； -S<后缀>：为备份文件指定后缀，而不使用默认的后缀； --target-directory=<目录>：指定源文件要移动到目标目录； -u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。", "参数": "源文件：源文件列表。\n目标文件：如果“目标文件”是文件名则在移动文件的同时，将其改名为“目标文件”；如果“目标文件”是目录名则将源文件移动到“目标文件”下。", "实例": "将文件ex3改名为new1", "class": "目录基本操作"}
{"title": "cp命令", "语法": "cp(选项)(参数)", "选项": "-a：此参数的效果和同时指定\"-dpR\"参数相同； -d：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录； -f：强行复制文件或目录，不论目标文件或目录是否已存在； -i：覆盖既有文件之前先询问用户； -l：对源文件建立硬连接，而非复制文件； -p：保留源文件或目录的属性； -R/r：递归处理，将指定目录下的所有文件与子目录一并处理； -s：对源文件建立符号连接，而非复制文件； -u：使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件； -S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀； -b：覆盖已存在的文件目标前将目标文件备份； -v：详细显示命令执行的操作。", "参数": "源文件：制定源文件列表。默认情况下，cp命令不能复制目录，如果要复制目录，则必须使用-R选项；\n目标文件：指定目标文件。当“源文件”为多个文件时，要求“目标文件”为指定的目录。", "实例": "如果把一个文件复制到一个目标文件中，而目标文件已经存在，那么，该目标文件的内容将被破坏。此命令中所有参数既可以是绝对路径名，也可以是相对路径名。通常会用到点.或点点..的形式。例如，下面的命令将指定文件复制到当前目录下：", "class": "目录基本操作"}
{"title": "cd命令", "语法": "cd (选项) (参数)", "选项": "-p 如果要切换到的目标目录是一个符号连接，直接切换到符号连接指向的目标目录 -L 如果要切换的目标目录是一个符号的连接，直接切换到字符连接名代表的目录，而非符号连接所指向的目标目录。 - 当仅实用\"-\"一个选项时，当前工作目录将被切换到环境变量\"OLDPWD\"所表示的目录。", "实例": "cd 进入用户主目录； cd ~ 进入用户主目录； cd - 返回进入此目录之前所在的目录； cd .. 返回上级目录（若当前目录为“/“，则执行完后还在“/\"；\"..\"为上级目录的意思）； cd ../.. 返回上两级目录； cd !$ 把上个命令的参数作为cd参数使用。", "class": "目录基本操作"}
{"title": "RHCSA 系列（二）: 如何進行文件和目錄管理命令", "创建、删除、复制和移动文件及目录": "文件和目錄管理是每一個系統管理員都應該掌握的必備技能。它包括了從頭開始的創建、刪除文本文件（每個程序的核心配置）以及目錄（你用來組織文件和其它目錄），以及識別已有文件的類型。", "输入输出重定向以及管道": "命令行環境提供了兩個非常有用的功能：允許重定向命令的輸入和輸出為另一個文件，以及發送命令的輸出到另一個命令，這分別稱為重定向和管道。", "归档，压缩，解包，解压文件": "如果你需要傳輸、備份、或者通過郵件發送一組文件，你可以使用一個存檔（或打包）工具，如 tar，通常與gzip，bzip2，或 xz 等壓縮工具配合使用。", "创建软连接和硬链接": "在Linux中，有2種類型的鏈接文件：硬鏈接和軟（也稱為符號）鏈接。因為硬鏈接文件只是現存文件的另一個名字，使用相同的 inode 號，它指向實際的數據；而符號鏈接只是指向的文件名。", "class": "Shell内建命令"}
{"title": "Pstree命令", "class": "Shell内建命令"}
{"title": "Vmstat命令", "class": "Shell内建命令"}
{"title": "xeyes命令", "class": "Shell内建命令"}
{"title": "fg , bg命令", "class": "Shell内建命令"}
{"title": "w命令", "class": "Shell内建命令"}
{"title": "sh命令", "语法": "bash [options] [file]", "选项": "-c string：命令从-c后的字符串读取。 -i：实现脚本交互。 -n：进行shell脚本的语法检查。 -x：实现shell脚本逐条语句的跟踪。", "实例": "使用-x选项跟踪脚本调试shell脚本，能打印出所执行的每一行命令以及当前状态：", "class": "Shell内建命令"}
{"title": "trap命令", "语法": "trap [-lp] [[arg] sigspec ...]", "选项参数说明": "如果arg参数缺省或者为“-”，每个接收到的sigspec信号都将会被重置为它们进入shell时的值；", "信号": "信号是一种进程间通信机制，它给应用程序提供一种异步的软件中断，使应用程序有机会接受其他程序活终端发送的命令(即信号)。应用程序收到信号后，有三种处理方式：忽略，默认，或捕捉。进程收到一个信号后，会检查对该信号的处理机制。如果是SIG_IGN，就忽略该信号；如果是SIG_DFT，则会采用系统默认的处理动作，通常是终止进程或忽略该信号；如果给该信号指定了一个处理函数(捕捉)，则会中断当前进程正在执行的任务，转而去执行该信号的处理函数，返回后再继续执行被中断的任务。", "捕获信号": "当你按下 Ctrl + C 键或 Break 键在终端一个shell程序的执行过程中，正常程序将立即终止，并返回命令提示符。这可能并不总是可取的。例如，你可能最终留下了一堆临时文件，将不会清理。", "class": "Shell内建命令"}
{"title": "let命令", "语法": "let arg [arg ...] #arg代表运算式", "用法": "自加操作let no++\n自减操作let no--\n简写形式let no+=10，let no-=20，分别等同于let no=no+10，let no=no-20", "实例": "#!/bin/bash let a=5+4 b=9-3 echo $a $b", "class": "Shell内建命令"}
{"title": "seq命令", "语法": "seq [选项]... 尾数 seq [选项]... 首数 尾数 seq [选项]... 首数 增量 尾数", "选项": "-f, --format=格式 使用printf 样式的浮点格式 -s, --separator=字符串 使用指定字符串分隔数字（默认使用：\\n） -w, --equal-width 在列前添加0 使得宽度相同", "实例": "-f选项：指定格式", "class": "Shell内建命令"}
{"title": "tput命令", "什么是 terminfo 数据库？": "UNIX 系统上的 terminfo 数据库用于定义终端和打印机的属性及功能，包括各设备（例如，终端和打印机）的行数和列数以及要发送至该设备的文本的属性。UNIX 中的几个常用程序都依赖 terminfo 数据库提供这些属性以及许多其他内容，其中包括 vi 和 emacs 编辑器以及 curses 和 man 程序。", "实例": "使输出的字符串有颜色，底色，加粗：", "class": "Shell内建命令"}
{"title": "apropos命令", "语法": "apropos [-dalhvV] [-e|-w|-r] [-s section] [-m system[,...]] [-M path] [-L locale] [-C file] keyword ...", "选项": "-d, --debug：输出调试信息。 -v, --verbose：输出详细的警告信息。 -r, -- regex：将每个keyword作为正则表达式解释。这是默认行为。每个keyword将匹配手册页和描述。 -w, --wildcard：将每个keyword作为shell样式的通配符解释。 -e, --exact：每个keyword将精确匹配手册页名字和描述。 -a, --and：只显示匹配所有keyword的手册页和描述。默认显示匹配任何keyword的项。 -l, --long：不根据终端宽度缩减输出。 -s section, --section section：只查找指定的手册section。 -m system[,...], --systems=system[,...]：用于查找其它操作系统的手册页。 -M path, --manpath=path：指定从其它以冒号分隔的手册页层次查找。默认使用$MANPATH环境变量。这个选项覆盖$MANPATH的内容。 -L locale, --locale=locale：apropos调用C函数setlocale来得到当前本地化信息，包括$LC_MESSAGE和$LANG。使用该选项提供一个locale字符串来临时更改本地化信息。 -C file, --config-file=file：使用这个用户配置文件而不是默认的~/.manpath。 -h, --help：打印帮助信息并退出。 -V, --version：打印版本信息并退出。", "返回值": "返回0表示成功，1表示用法、语法或配置文件错误，2表示操作错误，16表示没有找到匹配的内容。", "实例": "[root@localhost ~]# man -k who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::whoami (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid [root@localhost ~]# apropos who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::WhoAmI (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid", "class": "Shell内建命令"}
{"title": "set命令", "语法": "set(选项)(参数)", "选项": "-a：标示已修改的变量，以供输出至环境变量。 -b：使被中止的后台程序立刻回报执行状态。 -C：转向所产生的文件无法覆盖已存在的文件。 -d：Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 -e：若指令传回值不等于0，则立即退出shell。 -f：取消使用通配符。 -h：自动记录函数的所在位置。 -H Shell：可利用\"!\"加<指令编号>的方式来执行history中记录的指令。 -k：指令所给的参数都会被视为此指令的环境变量。 -l：记录for循环的变量名称。 -m：使用监视模式。 -n：只读取指令，而不实际执行。 -p：启动优先顺序模式。 -P：启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 -t：执行完随后的指令，即退出shell。 -u：当执行时使用到未定义过的变量，则显示错误信息。 -v：显示shell所读取的输入值。 -x：执行指令后，会先显示该指令及所下的参数。", "参数": "取消某个set曾启动的参数。", "实例": "使用declare命令定义一个新的环境变量\"mylove\"，并且将其值设置为\"Visual C++\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "command命令", "语法": "command(参数)", "参数": "指令：需要调用的指令及参数。", "实例": "使用command命令调用执行echo Linux，输入如下命令：", "class": "Shell内建命令"}
{"title": "dris命令", "语法": "dris(选项)", "选项": "+n：显示从左边算起第n笔的目录； -n：显示从右边算起第n笔的目录； -l：显示目录完整的记录。", "class": "Shell内建命令"}
{"title": "fc命令", "语法": "fc(选项)(参数)", "选项": "-l：显示历史命令； -n：显示历史命令时，不显示编号； -r：反序显示历史命令。", "参数": "起始指令编号：指定要编辑的起始指令编号；\n结尾指令编号：指定要编辑的结尾指令编号。", "实例": "使用该指令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "bind命令", "语法": "bind(选项)", "选项": "-d：显示按键配置的内容； -f<按键配置文件>：载入指定的按键配置文件； -l：列出所有的功能； -m<按键配置>：指定按键配置； -q<功能>：显示指定功能的按键； -v：列出目前的按键配置与其功能。", "实例": "bind -x '\"\\C-l\":ls -l' #直接按 CTRL+L 就列出目录", "class": "Shell内建命令"}
{"title": "readonly命令", "语法": "readonly(选项)(参数)", "选项": "-f：定义只读函数； -a：定义只读数组变量； -p：显示系统中全部只读变量列表。", "参数": "变量定义：定义变量，格式为“变量名=‘变量值’”。", "实例": "使用readonly命令显示系统中所有的已经定义的只读变量，输入如下命令：", "class": "Shell内建命令"}
{"title": "read命令", "语法": "read(选项)(参数)", "选项": "-p：指定读取值时的提示符； -t：指定读取值时等待的时间（秒）。", "参数": "变量：指定读取值的变量名。", "实例": "下面的列表给出了read命令的常用方式：", "class": "Shell内建命令"}
{"title": "bg命令", "语法": "bg(参数)", "参数": "作业标识：指定需要放到后台的作业标识号。", "实例": "使用bg命令将任务号为1的任务放到后台继续执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "ulimit命令", "语法": "ulimit(选项)", "选项": "-a：显示目前资源限制的设定； -c <core文件上限>：设定core文件的最大值，单位为区块； -d <数据节区大小>：程序数据节区的最大值，单位为KB； -f <文件大小>：shell所能建立的最大文件，单位为区块； -H：设定资源的硬性限制，也就是管理员所设下的限制； -m <内存大小>：指定可使用内存的上限，单位为KB； -n <文件数目>：指定同一时间最多可开启的文件数； -p <缓冲区大小>：指定管道缓冲区的大小，单位512字节； -s <堆叠大小>：指定堆叠的上限，单位为KB； -S：设定资源的弹性限制； -t <CPU时间>：指定CPU使用时间的上限，单位为秒； -u <程序数目>：用户最多可开启的程序数目； -v <虚拟内存大小>：指定可使用的虚拟内存上限，单位为KB。", "实例": "[root@localhost ~]# ulimit -a core file size (blocks, -c) 0 #core文件的最大值为100 blocks。 data seg size (kbytes, -d) unlimited #进程的数据段可以任意大。 scheduling priority (-e) 0 file size (blocks, -f) unlimited #文件可以任意大。 pending signals (-i) 98304 #最多有98304个待处理的信号。 max locked memory (kbytes, -l) 32 #一个任务锁住的物理内存的最大值为32KB。 max memory size (kbytes, -m) unlimited #一个任务的常驻物理内存的最大值。 open files (-n) 1024 #一个任务最多可以同时打开1024的文件。 pipe size (512 bytes, -p) 8 #管道的最大空间为4096字节。 POSIX message queues (bytes, -q) 819200 #POSIX的消息队列的最大值为819200字节。 real-time priority (-r) 0 stack size (kbytes, -s) 10240 #进程的栈的最大值为10240字节。 cpu time (seconds, -t) unlimited #进程使用的CPU时间。 max user processes (-u) 98304 #当前用户同时打开的进程（包括线程）的最大个数为98304。 virtual memory (kbytes, -v) unlimited #没有限制进程的最大地址空间。 file locks (-x) unlimited #所能锁住的文件的最大个数没有限制。", "class": "Shell内建命令"}
{"title": "enable命令", "语法": "enable(选项)(参数)", "选项": "-n：关闭指定的内部命令； -a：显示所有激活的内部命令； -f：从指定文件中读取内部命令。", "参数": "内部命令：指定要关闭或激活的内部命令。", "实例": "使用enable命令显示所有激活的内部命令：", "class": "Shell内建命令"}
{"title": "declare命令", "语法": "declare(选项)(参数)", "选项": "+/-：\"-\"可用来指定变量的属性，\"+\"则是取消变量所设的属性； -f：仅显示函数； r：将变量设置为只读； x：指定的变量会成为环境变量，可供shell以外的程序来使用； i：[设置值]可以是数值，字符串或运算式。", "参数": "shell变量：声明shell变量，格式为“变量名=值”。", "实例": "首先使用declare命令定义shell变量\"test\"，并且将其值设置为\"man.linuxde.net\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "wait命令", "语法": "wait(参数)", "参数": "进程或作业标示：指定进程号或者作业号。", "实例": "使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：", "class": "Shell内建命令"}
{"title": "builtin命令", "语法": "builtin(参数)", "参数": "shell内部命令：指定需要执行的shell内部命令。", "实例": "使用builtin命令执行shell内部命alias显示命令别名，输入如下命令：", "class": "Shell内建命令"}
{"title": "shopt命令", "语法": "shopt(选项)(参数)", "选项": "-s：激活指定的shell行为选项； -u：关闭指定的shell行为选项。", "参数": "shell选项：指定要操作的shell选项。", "实例": "使用shopt命令显示当前所有可以设置的shell操作选项，输入如下命令：", "class": "Shell内建命令"}
{"title": "exit命令", "语法": "exit(参数)", "参数": "返回值：指定shell返回值。", "实例": "退出当前shell：", "class": "Shell内建命令"}
{"title": "jobs命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "Shell内建命令"}
{"title": "help命令", "语法": "help(选项)(参数)", "选项": "-s：输出短格式的帮助信息。仅包括命令格式。", "参数": "内部命令：指定需要显示帮助信息的shell内部命令。", "实例": "使用help命令显示shell内部shopt命令的帮助信息，输入如下命令：", "class": "Shell内建命令"}
{"title": "history命令", "语法": "history(选项)(参数)", "选项": "-c：清空当前历史命令； -a：将历史命令缓冲区中命令写入历史命令文件中； -r：将历史命令文件中的命令读入当前历史命令缓冲区； -w：将当前历史命令缓冲区命令写入历史命令文件中。", "参数": "n：打印最近的n条历史命令。", "实例": "使用history命令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "logout命令", "语法": "logout", "class": "Shell内建命令"}
{"title": "export命令", "语法": "export(选项)(参数)", "选项": "-f：代表[变量名称]中为函数名称； -n：删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中； -p：列出所有的shell赋予程序的环境变量。", "参数": "变量：指定要输出或者删除的环境变量。", "实例": "一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。查看已经存在的环境变量：", "class": "Shell内建命令"}
{"title": "exec命令", "语法": "exec(选项)(参数)", "选项": "-c：在空环境中执行指定的命令。", "参数": "指令：要执行的指令和相应的参数。", "实例": "首先使用echo命令将文本“Linux C++”进行输出，输入如下命令：", "class": "Shell内建命令"}
{"title": "env命令", "语法": "env(选项)(参数)", "选项": "-i：开始一个新的空的环境； -u<变量名>：从当前环境中删除指定的变量。", "参数": "变量定义：定义在新的环境中变量，定义多个变量定义用空格隔开。格式为“变量名=值”；\n指定：指定要执行的指令和参数。", "实例": "[root@localhost ~]# env hostname=LinServ-1 TERM=linux SHELL=/bin/bash HISTSIZE=1000 SSH_CLIENT=192.168.2.111 2705 22 SSH_TTY=/dev/pts/0 USER=root LS_COLORS=no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35: mail=/var/spool/mail/root PATH=/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin INPUTRC=/etc/inputrc pwd=/root LANG=zh_CN.UTF-8 SHLVL=1 HOME=/root logname=root SSH_CONNECTION=192.168.2.111 2705 192.168.2.2 22 LESSOPEN=|/usr/bin/lesspipe.sh %s G_BROKEN_FILENAMES=1 _=/bin/env", "class": "Shell内建命令"}
{"title": "unset命令", "语法": "unset(选项)(参数)", "选项": "-f：仅删除函数； -v：仅删除变量。", "参数": "shell变量或函数：指定要删除的shell变量或shell函数。", "实例": "使用unset命令将前面所创建的环境变量mylove及其对应的值进行删除，输入如下命令：", "class": "Shell内建命令"}
{"title": "kill命令", "语法": "kill(选项)(参数)", "选项": "-a：当处理当前进程时，不限制命令名和进程号的对应关系； -l <信息编号>：若不加<信息编号>选项，则-l参数会列出全部的信息名称； -p：指定kill 命令只打印相关进程的进程号，而不发送任何信号； -s <信息名称或编号>：指定要送出的信息； -u：指定用户。", "参数": "进程或作业识别号：指定要删除的进程或作业。", "实例": "列出所有信号名称：", "class": "Shell内建命令"}
{"title": "unalias命令", "语法": "unalias(选项)(参数)", "选项": "-a：取消所有命令别名。", "参数": "命令别名：指定要取消的命令别名。", "实例": "使用unalias命令将已经设置的命令别名\"cc\"取消，输入如下命令：", "class": "Shell内建命令"}
{"title": "type命令", "语法": "type(选项)(参数)", "选项": "-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”； -p：如果给出的指令为外部指令，则显示其绝对路径； -a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。", "参数": "指令：要显示类型的指令。", "实例": "[root@localhost ~]# type ls ls is aliased to `ls --color=tty' [root@localhost ~]# type cd cd is a shell builtin [root@localhost ~]# type date date is /bin/date [root@localhost ~]# type mysql mysql is /usr/bin/mysql [root@localhost ~]# type nginx -bash: type: nginx: not found [root@localhost ~]# type if if is a shell keyword [root@localhost ~]# type which which is aliased to `alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde' [root@localhost ~]# type -a cd cd is a shell builtin [root@localhost ~]# type -a grep grep is /bin/grep", "class": "Shell内建命令"}
{"title": "fg命令", "语法": "fg(参数)", "参数": "作业标识：指定要放到前台的作业标识号。", "实例": "使用fg命令将任务号为1的任务从后台执行转换到前台执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "alias命令", "语法": "alias(选项)(参数)", "选项": "-p：打印已经设置的命令别名。", "参数": "命令别名设置：定义命令别名，格式为“命令别名=‘实际命令’”。", "实例": "alias 的基本使用方法为：", "class": "Shell内建命令"}
{"title": "讓你提前認識軟件開發(2)：軟件開發工程師常用的工具軟件命令", "class": "常用工具命令"}
{"title": "磁盤與文件系統管理命令", "class": "常用工具命令"}
{"title": "技巧05監測樹莓派的硬件命令", "class": "常用工具命令"}
{"title": "linux文件和目錄管理的基本命令命令", "class": "常用工具命令"}
{"title": "Find命令", "class": "常用工具命令"}
{"title": "rm – Remove命令", "class": "常用工具命令"}
{"title": "cd – Change Directory命令", "對於當前在終端運行的會中中， cd <directory> 將給定的文件夾（或目錄）設置成當前工作目錄。": "", "class": "常用工具命令"}
{"title": "ls – List命令", "class": "常用工具命令"}
{"title": "Decompression Bomb命令", "class": "常用工具命令"}
{"title": "Malicious Source Code命令", "class": "常用工具命令"}
{"title": "Dd Command命令", "class": "常用工具命令"}
{"title": "Tar Bomb命令", "class": "常用工具命令"}
{"title": "Mkfs Command命令", "class": "常用工具命令"}
{"title": "Rm -Rf Command命令", "class": "常用工具命令"}
{"title": "Mv Folder/Dev/Null Command命令", "class": "常用工具命令"}
{"title": "蘋果與斯坦福攜手深入進行心臟項目研究命令", "class": "常用工具命令"}
{"title": "pssh命令", "安装pssh": "在CentOS系统环境下，介绍yum的安装和源码安装的方式：", "选项": "--version：查看版本 --help：查看帮助，即此信息 -h：主机文件列表，内容格式”[user@]host[:port]” -H：主机字符串，内容格式”[user@]host[:port]” -：登录使用的用户名 -p：并发的线程数【可选】 -o：输出的文件目录【可选】 -e：错误输入文件【可选】 -t：TIMEOUT 超时时间设置，0无限制【可选】 -O：SSH的选项 -v：详细模式 -A：手动输入密码模式 -x：额外的命令行参数使用空白符号，引号，反斜线处理 -X：额外的命令行参数，单个参数模式，同-x -i：每个服务器内部处理信息输出 -P：打印出服务器返回信息", "实例": "获取每台服务器的uptime：", "class": "常用工具命令"}
{"title": "screen命令", "语法": "# screen [-AmRvx -ls -wipe][-d ][-h ][-r ][-s ][-S ]", "选项": "-A 　将所有的视窗都调整为目前终端机的大小。 -d <作业名称> 　将指定的screen作业离线。 -h <行数> 　指定视窗的缓冲区行数。 -m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r <作业名称> 　恢复离线的screen作业。 -R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s 　指定建立新视窗时，所要执行的shell。 -S <作业名称> 　指定screen作业的名称。 -v 　显示版本信息。 -x 　恢复之前离线的screen作业。 -ls或--list 　显示目前所有的screen作业。 -wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。", "常用screen参数": "screen -S yourname -> 新建一个叫yourname的session screen -ls -> 列出当前所有的session screen -r yourname -> 回到yourname这个session screen -d yourname -> 远程detach某个session screen -d -r yourname -> 结束当前session并回到yourname这个session", "使用 screen": "安装screen", "screen 高级应用": "会话共享", "class": "常用工具命令"}
{"title": "speedtest-cli命令", "安装speedtest－cli": "speedtest-cli需要在python 2.4-3.4的环境下，安装方法都很简单，自己选择以下最适合你的一种。", "用法": "-h, --help show this help message and exit --share 分享你的网速，该命令会在speedtest网站上生成网速测试结果的图片。 --simple Suppress verbose output, only show basic information --list 根据距离显示speedtest.net的测试服务器列表。 --server=SERVER 指定列表中id的服务器来做测试。 --mini=MINI URL of the Speedtest Mini server --source=SOURCE Source ip address to bind to --version Show the version number and exit", "实例": "列出所有在中国的测试服务器：", "class": "常用工具命令"}
{"title": "clockdiff命令", "选项": "-o：使用IP时间戳选项来测量系统时间差。时间戳只用3个。 -o1：使用IP时间戳选项来测量系统时间差。用4个时间戳。如果-o和-o1都没有设置，那么就是用ICMP时间戳来测试系统时间差。", "实例": "lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1 PING www.ustc.edu.cn (202.38.64.9) 56(124) bytes of data. 64 bytes from 202.38.64.9: icmp_seq=1 ttl=62 time=0.823 ms TS: lixi-desktop.local (210.45.74.25) 12522473 absolute 210.45.74.1 -251 local-gw.ustc.edu.cn (202.38.64.126) 248 202.38.64.9 -857514 Unrecorded hops: 3 --- www.ustc.edu.cn ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.823/0.823/0.823/0.000 ms", "class": "常用工具命令"}
{"title": "ntpdate命令", "语法": "ntpdate [ -b] [ -d] [ -s] [ -u] [ -aKeyid] [ -eAuthenticationDelay] [ -kKeyFile] [ -oVersion] [ -pSamples] [ -tTimeOut] Server...", "选项": "-aKeyid\n使用 Keyid 来认证全部数据包。\n-b\n通过调用 settimeofday 子例程来增加时钟的时间。\n-d\n指定调试方式。判断 ntpdate 命令会产生什么结果（不产生实际的结果）。结果再现在屏幕上。这个标志使用无特权的端口。\n-eAuthenticationDelay\n指定延迟认证处理的时间秒数。\n-kKeyFile\n当不使用缺省值 /etc/ntp.keys 文件时，为包含密钥的文件指定一个不同的名称。 请参阅文件KeyFile的描述。\n-oVersion\n当轮询它的发出数据包时，指定使用的 NTP 版本实现。 Version 的值可以是 1，2，3。缺省值是 3。\n-pSamples\n指定从每个服务器获取的样本的数目。 Samples 的值在 1 和 8 之间，并包括 1 和 8。它的缺省值是 4。\n-s\n指定日志操作 syslog 设施的使用，而不是使用标准输出。 当运行 ntpdate 命令和 cron命令时，它是很有用的。\n-tTimeOut\n指定等待响应的时间。给定 TimeOut 的值四舍五入为 0.2 秒的倍数。缺省值是 1 秒。\n-u\n指定使用无特权的端口发送数据包。 当在一个对特权端口的输入流量进行阻拦的防火墙后是很有益的， 并希望在防火墙之外和主机同步。防火墙是一个系统或者计算机，它控制从外网对专用网的访问。", "class": "常用工具命令"}
{"title": "rsync命令", "语法": "rsync [OPTION]... SRC DEST rsync [OPTION]... SRC [USER@]host:DEST rsync [OPTION]... [USER@]HOST:SRC DEST rsync [OPTION]... [USER@]HOST::SRC DEST rsync [OPTION]... SRC [USER@]HOST::DEST rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]", "选项": "-v, --verbose 详细模式输出。 -q, --quiet 精简输出模式。 -c, --checksum 打开校验开关，强制对文件传输进行校验。 -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。 -r, --recursive 对子目录以递归模式处理。 -R, --relative 使用相对路径信息。 -b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。 --backup-dir 将备份文件(如~filename)存放在在目录下。 -suffix=SUFFIX 定义备份文件前缀。 -u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。 -l, --links 保留软链结。 -L, --copy-links 想对待常规文件一样处理软链结。 --copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。 --safe-links 忽略指向SRC路径目录树以外的链结。 -H, --hard-links 保留硬链结。 -p, --perms 保持文件权限。 -o, --owner 保持文件属主信息。 -g, --group 保持文件属组信息。 -D, --devices 保持设备文件信息。 -t, --times 保持文件时间信息。 -S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。 -n, --dry-run现实哪些文件将被传输。 -w, --whole-file 拷贝文件，不进行增量检测。 -x, --one-file-system 不要跨越文件系统边界。 -B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。 -e, --rsh=command 指定使用rsh、ssh方式进行数据同步。 --rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。 -C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。 --existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。 --delete 删除那些DST中SRC没有的文件。 --delete-excluded 同样删除接收端那些被该选项指定排除的文件。 --delete-after 传输结束以后再删除。 --ignore-errors 及时出现IO错误也进行删除。 --max-delete=NUM 最多删除NUM个文件。 --partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。 --force 强制删除目录，即使不为空。 --numeric-ids 不将数字的用户和组id匹配为用户名和组名。 --timeout=time ip超时时间，单位为秒。 -I, --ignore-times 不跳过那些有同样的时间和长度的文件。 --size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。 --modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。 -T --temp-dir=DIR 在DIR中创建临时文件。 --compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。 -P 等同于 --partial。 --progress 显示备份过程。 -z, --compress 对备份的文件在传输时进行压缩处理。 --exclude=PATTERN 指定排除不需要传输的文件模式。 --include=PATTERN 指定不排除而需要传输的文件模式。 --exclude-from=FILE 排除FILE中指定模式的文件。 --include-from=FILE 不排除FILE指定模式匹配的文件。 --version 打印版本信息。 --address 绑定到特定的地址。 --config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。 --port=PORT 指定其他的rsync服务端口。 --blocking-io 对远程shell使用阻塞IO。 -stats 给出某些文件的传输状态。 --progress 在传输时现实传输过程。 --log-format=formAT 指定日志文件格式。 --password-file=FILE 从FILE中得到密码。 --bwlimit=KBPS 限制I/O带宽，KBytes per second。 -h, --help 显示帮助信息。", "实例": "SSH方式", "class": "常用工具命令"}
{"title": "vdfuse命令", "什么是VirtualBox": "VirtualBox是一款功能强大的x86虚拟机软件，它不仅具有丰富的特色，而且性能也很优异。更可喜的是，VirtualBox于数日前走向开源，成为了一个发布在GPL许可之下的自由软件。VirtualBox可以在Linux和Windows主机中运行，并支持在其中安装Windows (NT 4.0、2000、XP、Server 2003、Vista)、DOS/Windows 3.x、Linux (2.4 和 2.6)、OpenBSD等系列的客户操作系统。", "语法": "vdfuse [options] -f image-file mountpoint", "选项": "-h 帮助 -r 只读 -t 类型 (VDI, VMDK, VHD, or raw; default: auto) -f 镜像文件 -a 允许所有用户读取 -w 允许所有用户都写 -g 前台运行 -v 输出反馈 -d debug模式", "实例": "使用如下如下语句挂载.vdi文件：", "class": "常用工具命令"}
{"title": "ngrep命令", "安装": "ngrep命令的下载地址：http://ngrep.sourceforge.net/，libpcap下载地址：http://www.tcpdump.org/。先用yum install libpcap完全安装libpcap，注意有时候用libpcap安装包安装的不完整会影响ngrep的使用。", "语法": "ngrep <-LhNXViwqpevxlDtTRM> <-IO pcap_dump> <-n num> <-d dev> <-A num> <-s snaplen> <-S limitlen> <-w normal|byline|single|none> <-c cols> <-P char> <-F file> <match expression> <bpf filter>", "选项": "-e ：显示空数据包 -i ：忽略大小写 -v ：反转匹配 -R ：don't do privilege revocation logic -x ：以16进制格式显示 -X ：以16进制格式匹配 -w ：整字匹配 -p ：不使用混杂模式 -l ：make stdout line buffered -D ：replay pcap_dumps with their recorded time intervals -t ：在每个匹配的包之前显示时间戳 -T ：显示上一个匹配的数据包之间的时间间隔 -M ：仅进行单行匹配 -I ：从文件中读取数据进行匹配 -O ：将匹配的数据保存到文件 -n ：仅捕获指定数目的数据包进行查看 -A ：匹配到数据包后dump随后的指定数目的数据包 -s ：set the bpf caplen -S ：set the limitlen on matched packets -W ：设置显示格式byline将解析包中的换行符 -c ：强制显示列的宽度 -P ：set the non-printable display char to what is specified -F ：使用文件中定义的bpf(Berkeley Packet Filter) -N ：显示由IANA定义的子协议号 -d ：使用哪个网卡，可以用-L选项查询 -L ：查询网卡接口", "实例": "捕捉cloudian：18080端口的request和response，-W byline用来解析包中的换行符，否则包里的所有数据都是连续的，可读性差。-d lo是监听本地网卡：", "class": "常用工具命令"}
{"title": "tempfile命令", "tempfile命令": "tempfile命令只有在基于Debian的发行版中才默认自带，比如Ubuntu，其他发行版没有这个命令。", "$$变量": "如果没有tempfile命令的Linux发行版，也可以使用自己的临时文件名：", "class": "常用工具命令"}
{"title": "xargs命令", "xargs命令用法": "xargs用作替换工具，读取输入数据重新格式化后输出。", "子Shell（Subshells）": "运行一个shell脚本时会启动另一个命令解释器.，就好像你的命令是在命令行提示下被解释的一样，类似于批处理文件里的一系列命令。每个shell脚本有效地运行在父shell(parent shell)的一个子进程里。这个父shell是指在一个控制终端或在一个xterm窗口中给你命令指示符的进程。", "class": "常用工具命令"}
{"title": "awk命令", "模式": "模式可以是以下任意一个：", "操作": "操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：", "awk的工作原理": "awk 'BEGIN{ commands } pattern{ commands } END{ commands }'", "算术运算符": "运算符\n描述\n+ -\n加，减\n* / &\n乘，除与求余\n+ - !\n一元加，减和逻辑非\n^ ***\n求幂\n++ --\n增加或减少，作为前缀或后缀", "赋值运算符": "运算符\n描述\n= += -= *= /= %= ^= **=\n赋值语句", "逻辑运算符": "运算符\n描述\n||\n逻辑或\n&&\n逻辑与", "正则运算符": "运算符\n描述\n~ ~!\n匹配正则表达式和不匹配正则表达式", "关系运算符": "运算符\n描述\n< <= > >= != ==\n关系运算符", "其它运算符": "运算符\n描述\n$\n字段引用\n空格\n字符串连接符\n?:\nC条件表达式\nin\n数组中是否存在某键值", "运算级优先级表": "级别越高越优先", "读取下一条记录": "awk中next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。net语句一般用于多行合并：", "简单地读取一条记录": "awk getline用法：输出重定向需用到getline函数。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。", "关闭文件": "awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。", "输出到一个文件": "awk中允许用如下方式将结果输出到一个文件：", "条件判断语句": "if(表达式) 语句1 else 语句2", "循环语句": "while语句", "其他语句": "break 当 break 语句用于 while 或 for 语句时，导致退出程序循环。\ncontinue 当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。\nnext 能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。\nexit 语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。", "数组的定义": "数字做数组索引（下标）：", "数组相关函数": "得到数组长度：", "二维、多维数组使用": "awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，array[2,4]=1这样的访问是允许的。awk使用一个特殊的字符串SUBSEP(�34)作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2�344。", "算术函数": "格式\n描述\natan2( y, x )\n返回 y/x 的反正切。\ncos( x )\n返回 x 的余弦；x 是弧度。\nsin( x )\n返回 x 的正弦；x 是弧度。\nexp( x )\n返回 x 幂函数。\nlog( x )\n返回 x 的自然对数。\nsqrt( x )\n返回 x 平方根。\nint( x )\n返回 x 的截断至整数的值。\nrand( )\n返回任意数字 n，其中 0 <= n < 1。\nsrand( [expr] )\n将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。", "字符串函数": "格式\n描述\ngsub( Ere, Repl, [ In ] )\n除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。\nsub( Ere, Repl, [ In ] )\n用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。\nindex( String1, String2 )\n在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。\nlength [(String)]\n返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nblength [(String)]\n返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nsubstr( String, M, [ N ] )\n返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。\nmatch( String, Ere )\n在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。\nsplit( String, A, [Ere] )\n将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。\ntolower( String )\n返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\ntoupper( String )\n返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\nsprintf(Format, Expr, Expr, . . . )\n根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。", "一般函数": "格式\n描述\nclose( Expression )\n用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。\nsystem(command )\n执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。\nExpression | getline [ Variable ]\n从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ] < Expression\n从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ]\n将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。", "时间函数": "格式\n描述\n函数名\n说明\nmktime( YYYY MM dd HH MM ss[ DST])\n生成时间格式\nstrftime([format [, timestamp]])\n格式化时间输出，将时间戳转为时间字符串\n具体格式，见下表.\nsystime()\n得到时间戳,返回从1970年1月1日开始到当前时间(不计闰年)的整秒数", "class": "常用工具命令"}
{"title": "yes命令", "语法": "yes(参数)", "参数": "字符串：指定要重复打印的字符串。", "实例": "[root@localhost ~]# yes testline testline testline testline testline testline testline testline testline ...一直重复打印 testline，按Ctrl+C结束。", "class": "常用工具命令"}
{"title": "date命令", "语法": "date(选项)(参数)", "选项": "-d<字符串>：显示字符串所指的日期与时间。字符串前后必须加上双引号； -s<字符串>：根据字符串来设置日期与时间。字符串前后必须加上双引号； -u：显示GMT； --help：在线帮助； --version：显示版本信息。", "参数": "<+时间日期格式>：指定显示时使用的日期时间格式。", "日期格式字符串列表": "%H 小时，24小时制（00~23） %I 小时，12小时制（01~12） %k 小时，24小时制（0~23） %l 小时，12小时制（1~12） %M 分钟（00~59） %p 显示出AM或PM %r 显示时间，12小时制（hh:mm:ss %p） %s 从1970年1月1日00:00:00到目前经历的秒数 %S 显示秒（00~59） %T 显示时间，24小时制（hh:mm:ss） %X 显示时间的格式（%H:%M:%S） %Z 显示时区，日期域（CST） %a 星期的简称（Sun~Sat） %A 星期的全称（Sunday~Saturday） %h,%b 月的简称（Jan~Dec） %B 月的全称（January~December） %c 日期和时间（Tue Nov 20 14:12:58 2012） %d 一个月的第几天（01~31） %x,%D 日期（mm/dd/yy） %j 一年的第几天（001~366） %m 月份（01~12） %w 一个星期的第几天（0代表星期天） %W 一年的第几个星期（00~53，星期一为第一天） %y 年的最后两个数字（1999则是99）", "实例": "格式化输出：", "class": "常用工具命令"}
{"title": "consoletype命令", "语法": "consoletype", "实例": "[root@localhost ~]# consoletype pty", "class": "常用工具命令"}
{"title": "info命令", "语法": "info(选项)(参数)", "选项": "-d：添加包含info格式帮助文档的目录； -f：指定要读取的info格式的帮助文档； -n：指定首先访问的info帮助文件的节点； -o：输出被选择的节点内容到指定文件。", "参数": "帮助主题：指定需要获得帮助的主题，可以是指令、函数以及配置文件。", "实例": "在info后面输入命令的名称就可以查看该命令的info帮助文档了：", "class": "常用工具命令"}
{"title": "hostid命令", "语法": "hostid", "选项": "--help：显示帮助信息； --version：显示版本信息。", "实例": "[root@localhost ~]# hostid 007f0100", "class": "常用工具命令"}
{"title": "clear命令", "语法": "clear", "实例": "直接输入clear命令当前终端上的任何信息就可被清除。", "class": "常用工具命令"}
{"title": "whoami命令", "语法": "whoami(选项)", "选项": "--help：在线帮助； --version：显示版本信息。", "实例": "[root@localhost ~]# whoami root [root@localhost ~]# id -un root", "class": "常用工具命令"}
{"title": "users命令", "语法": "users(选项)", "选项": "--help：显示命令的帮助信息； --version：显示命令的版本信息。", "实例": "[root@localhost ~]# users root root", "class": "常用工具命令"}
{"title": "sleep命令", "语法": "sleep(参数)", "参数": "时间：指定要暂停时间的长度。", "实例": "有时在写一些以循环方式运行的监控脚本，设置时间间隔是必不可少的，下面是一个Shell进度条的脚本演示在脚本中生成延时。", "class": "常用工具命令"}
{"title": "md5sum命令", "语法": "md5sum(选项)(参数)", "选项": "-b：二进制模式读取文件； -t或--text：把输入的文件作为文本文件看待； -c：从指定文件中读取MD5校验和，并进行校验； --status：验证成功时不输出任何信息； -w：当校验不正确时给出警告信息。", "参数": "文件：指定保存着文件名和校验和的文本文件。", "实例": "生成一个文件insert.sql的md5值：", "class": "常用工具命令"}
{"title": "mesg命令", "语法": "mesg(参数)", "参数": "y/n：y表示运行向当前终端写信息，n表示禁止向当前终端写信息。", "实例": "[root@localhost ~]# mesg y #允许系统用户将信息直接显示在你的屏幕上。 [root@localhost ~]# mesg n #不允许系统用户将信息直接显示在你的屏幕上。", "class": "常用工具命令"}
{"title": "mtools命令", "语法": "mtools(选项)", "选项": "-a：长文件名重复时自动更改目标文件的长文件名； -A：短文件名重复但长文件名不同时自动更改目标文件的短文件名； -o：长文件名重复时，将目标文件覆盖现有的文件； -O：短文件名重复但长文件名不同时，将目标文件覆盖现有的文件； -r：长文件名重复时，要求用户更改目标文件的长文件名； -R：短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名； -s：长文件名重复时，则不处理该目标文件； -S：短文件名重复但长文件名不同时，则不处理该目标文件； -v：执行时显示详细的说明； -V：显示版本信息。", "实例": "使用mtools命令显示其支持的所有的指令，输入如下命令：", "class": "常用工具命令"}
{"title": "login命令", "语法": "login(选项)(参数)", "选项": "-p：告诉login指令不销毁环境变量； -h：指定远程服务器的主机名。", "参数": "用户名：指定登录使用的用户名。", "class": "常用工具命令"}
{"title": "factor命令", "class": "软件包管理"}
{"title": "dnf命令", "安装 DNF 包管理器": "DNF 并未默认安装在 RHEL 或 CentOS 7系统中，但是 Fedora 22 已经默认使用 DNF .", "总结": "DNF 包管理器作为 YUM 包管理器的升级替代品，它能自动完成更多的操作。但在我看来，正因如此，所以 DNF 包管理器不会太受那些经验老道的 Linux 系统管理者的欢迎。举例如下：", "class": "软件包管理"}
{"title": "dpkg-reconfigure命令", "语法": "dpkg-reconfigure(选项)(参数)", "选项": "-a：重新配置所有的软件包； -u或--unseen-only：仅显示未提过的问题； --default-priority：使用默认优先级，而非“低”级； --force：强制执行操作，需谨慎使用此选项； --no-reload：不要轻易的重装模板（使用时请慎重考虑）； -f或--frontend：指定 debconf 前端界面； -p或--priority：指定要显示的问题的最优先级； --terse：开启简要模式。", "参数": "软件包名：需要重新配置的已安装的软件包。", "实例": "用于配置语言：", "class": "软件包管理"}
{"title": "dpkg命令", "语法": "dpkg(选项)(参数)", "选项": "-i：安装软件包； -r：删除软件包； -P：删除软件包的同时删除其配置文件； -L：显示于软件包关联的文件； -l：显示已安装软件包列表； --unpack：解开软件包； -c：显示软件包内文件列表； --confiugre：配置软件包。", "参数": "Deb软件包：指定要操作的.deb软件包。", "实例": "dpkg -i package.deb #安装包 dpkg -r package #删除包 dpkg -P package #删除包（包括配置文件） dpkg -L package #列出与该包关联的文件 dpkg -l package #显示该包的版本 dpkg --unpack package.deb #解开deb包的内容 dpkg -S keyword #搜索所属的包内容 dpkg -l #列出当前已安装的包 dpkg -c package.deb #列出deb包的内容 dpkg --configure package #配置包", "class": "软件包管理"}
{"title": "apt-sortpkgs命令", "语法": "apt-sortpkgs(选项)(参数)", "选项": "-s：使用源索引字段排序； -h：显示帮助信息。", "参数": "文件：指定要排序的包含debian包信息的索引文件。", "class": "软件包管理"}
{"title": "apt-key命令", "语法": "apt-key(参数)", "参数": "操作指令：APT密钥操作指令。", "实例": "apt-key list #列出已保存在系统中key。 apt-key add keyname #把下载的key添加到本地trusted数据库中。 apt-key del keyname #从本地trusted数据库删除key。 apt-key update #更新本地trusted数据库，删除过期没用的key。", "class": "软件包管理"}
{"title": "aptitude命令", "语法": "aptitude(选项)(参数)", "选项": "-h：显示帮助信息； -d：仅下载软件包，不执行安装操作； -P：每一步操作都要求确认； -y：所有问题都回答“yes”； -v：显示附加信息； -u：启动时下载新的软件包列表。", "参数": "操作命令：用户管理软件包的操作命令。", "实例": "以下是我总结的一些常用aptitude命令，仅供参考：", "class": "软件包管理"}
{"title": "apt-get命令", "语法": "apt-get(选项)(参数)", "选项": "-c：指定配置文件。", "参数": "管理指令：对APT软件包的管理操作；\n软件包：指定要操纵的软件包。", "实例": "使用apt-get命令的第一步就是引入必需的软件库，Debian的软件库也就是所有Debian软件包的集合，它们存在互联网上的一些公共站点上。把它们的地址加入，apt-get就能搜索到我们想要的软件。/etc/apt/sources.list是存放这些地址列表的配置文件，其格式如下：", "class": "软件包管理"}
{"title": "ntsysv命令", "语法": "ntsysv(选项)", "选项": "--leve：指定运行等级； --back：在互动式界面里，显示Back钮，而非cancel钮。", "实例": "输入ntsysv命令后，出现一个交互式的管理菜单，如下：", "class": "软件包管理"}
{"title": "chkconfig命令", "语法": "chkconfig(选项)", "选项": "--add：增加所指定的系统服务，让chkconfig指令得以管理它，并同时在系统启动的叙述文件内增加相关数据； --del：删除所指定的系统服务，不再由chkconfig指令管理，并同时在系统启动的叙述文件内删除相关数据； --level<等级代号>：指定读系统服务要在哪一个执行等级中开启或关毕。", "实例": "chkconfig --list #列出所有的系统服务。 chkconfig --add httpd #增加httpd服务。 chkconfig --del httpd #删除httpd服务。 chkconfig --level httpd 2345 on #设置httpd在运行级别为2、3、4、5的情况下都是on（开启）的状态。 chkconfig --list #列出系统所有的服务启动情况。 chkconfig --list mysqld #列出mysqld服务设置情况。 chkconfig --level 35 mysqld on #设定mysqld在等级3和5为开机运行服务，--level 35表示操作只在等级3和5执行，on表示启动，off表示关闭。 chkconfig mysqld on #设定mysqld在各等级为on，“各等级”包括2、3、4、5等级。", "class": "软件包管理"}
{"title": "rpmsign命令", "语法": "rpmsign(选项)", "选项": "--addsign：为自动软件包添加签名； --checksig：验证软件包签名； --delsign：删除软件包签名； --import：导入公钥； --resign：重新签名软件包； --nodigest：不验证软件包摘要； --nosignature：不验证软件包签名。", "class": "软件包管理"}
{"title": "rpmdb命令", "语法": "rpmdb(选项)", "选项": "--initdb：初始化RPM数据库； --rebuilddb：从已安装的包头文件，反向重建RPM数据库。", "class": "软件包管理"}
{"title": "yum命令", "语法": "yum(选项)(参数)", "选项": "-h：显示帮助信息； -y：对所有的提问都回答“yes”； -c：指定配置文件； -q：安静模式； -v：详细模式； -d：设置调试等级（0-10）； -e：设置错误等级（0-10）； -R：设置yum处理一个命令的最大等待时间； -C：完全从缓存中运行，而不去下载或者更新任何头文件。", "参数": "install：安装rpm软件包； update：更新rpm软件包； check-update：检查是否有可用的更新rpm软件包； remove：删除指定的rpm软件包； list：显示软件包的信息； search：检查软件包的信息； info：显示指定的rpm软件包的描述信息和概要信息； clean：清理yum过期的缓存； shell：进入yum的shell提示符； resolvedep：显示rpm软件包的依赖关系； localinstall：安装本地的rpm软件包； localupdate：显示本地rpm软件包进行更新； deplist：显示rpm软件包的所有依赖关系。", "实例": "部分常用的命令包括：", "class": "软件包管理"}
{"title": "dpkg-trigger命令", "语法": "dpkg-trigger(选项)(参数)", "选项": "--check-supported：检查运行的dpkg是否支持触发器，返回值为0，则支持触发器。 --help：显示帮助信息； --admindir=<目录>：设置dpkg数据库所在的目录； --no-act：仅用于测试，不执行任何操作； --by-package=<软件包>：覆盖触发器等待者。", "参数": "触发器名：指定触发器名称。", "class": "软件包管理"}
{"title": "rpm命令", "语法": "rpm(选项)(参数)", "选项": "-a：查询所有套件； -b<完成阶段><套件档>+或-t <完成阶段><套件档>+：设置包装套件的完成阶段，并指定套件档的文件名称； -c：只列出组态配置文件，本参数需配合\"-l\"参数使用； -d：只列出文本文件，本参数需配合\"-l\"参数使用； -e<套件档>或--erase<套件档>：删除指定的套件； -f<文件>+：查询拥有指定文件的套件； -h或--hash：套件安装时列出标记； -i：显示套件的相关信息； -i<套件档>或--install<套件档>：安装指定的套件档； -l：显示套件的文件列表； -p<套件档>+：查询指定的RPM套件档； -q：使用询问模式，当遇到任何问题时，rpm指令会先询问用户； -R：显示套件的关联性信息； -s：显示文件状态，本参数需配合\"-l\"参数使用； -U<套件档>或--upgrade<套件档>：升级指定的套件档； -v：显示指令执行过程； -vv：详细显示指令执行过程，便于排错。", "参数": "软件包：指定要操纵的rpm软件包。", "实例": "如何安装rpm软件包", "class": "软件包管理"}
{"title": "rcconf命令", "语法": "rcconf(选项)", "选项": "--help：打印帮助信息； --dialog：使用对话命令显示菜单； --notermcheck：不按照终端属性来设置窗口尺寸。", "class": "软件包管理"}
{"title": "rpmbuild命令", "语法": "rpmbuild(选项)", "选项": "--initdb：初始化RPM数据库； --rebuilddb：从已安装的包头文件，方向重建RPM数据库； -ba：创建二进制和源代码包； -bb：创建二进制代码包； -bs：创建源代码包。", "实例": "rpmbuild -ba 'spec文件路径'", "class": "软件包管理"}
{"title": "rpmverify命令", "语法": "rpmverify(选项)", "选项": "-Va：验证所有软件包； -V<软件包>f：验证指定软件包； --nomd5：不验证软件包的md5摘要。", "class": "软件包管理"}
{"title": "rpmquery命令", "语法": "rpmquery(选项)", "选项": "-qf：查询指定的文件所属的软件包； -q：查询指定的软件包是否被安装； -qc：查询软件包中的配置文件； -qd：查询软件包中的文档文件； -qi：查询软件包的基本信息。", "实例": "使用rpmquery命令查询指定文件所属的软件包：", "class": "软件包管理"}
{"title": "patch命令", "语法": "patch(选项)(参数)", "选项": "-b或--backup：备份每一个原始文件； -B<备份字首字符串>或--prefix=<备份字首字符串>：设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称； -c或--context：把修补数据解译成关联性的差异； -d<工作目录>或--directory=<工作目录>：设置工作目录； -D<标示符号>或--ifdef=<标示符号>：用指定的符号把改变的地方标示出来； -e或--ed：把修补数据解译成ed指令可用的叙述文件； -E或--remove-empty-files：若修补过后输出的文件其内容是一片空白，则移除该文件； -f或--force：此参数的效果和指定\"-t\"参数类似，但会假设修补数据的版本为新版本； -F<监别列数>或--fuzz<监别列数>：设置监别列数的最大值； -g<控制数值>或--get=<控制数值>：设置以RSC或SCCS控制修补作业； -i<修补文件>或--input=<修补文件>：读取指定的修补问家你； -l或--ignore-whitespace：忽略修补数据与输入数据的跳格，空格字符； -n或--normal：把修补数据解译成一般性的差异； -N或--forward：忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使 用过； -o<输出文件>或--output=<输出文件>：设置输出文件的名称，修补过的文件会以该名称存放； -p<剥离层级>或--strip=<剥离层级>：设置欲剥离几层路径名称； -f<拒绝文件>或--reject-file=<拒绝文件>：设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej； -R或--reverse：假设修补数据是由新旧文件交换位置而产生； -s或--quiet或--silent：不显示指令执行过程，除非发生错误； -t或--batch：自动略过错误，不询问任何问题； -T或--set-time：此参数的效果和指定\"-Z\"参数类似，但以本地时间为主； -u或--unified：把修补数据解译成一致化的差异； -v或--version：显示版本信息； -V<备份方式>或--version-control=<备份方式>：用\"-b\"参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用\"-z\"参数变更，当使用\"-V\"参数指定不同备份方式时，也会产生不同字尾的备份字符串； -Y<备份字首字符串>或--basename-prefix=--<备份字首字符串>：设置文件备份时，附加在文件基本名称开头的字首字符串； -z<备份字尾字符串>或--suffix=<备份字尾字符串>：此参数的效果和指定\"-B\"参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上\"backup/\"字符串后，文件super.c会备份于/src/linux/fs/backup目录里； -Z或--set-utc：把修补过的文件更改，存取时间设为UTC； --backup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件； --binary：以二进制模式读写数据，而不通过标准输出设备； --help：在线帮助； --nobackup-if-mismatch：在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件； --verbose：详细显示指令的执行过程。", "参数": "原文件：指定需要打补丁的原始文件；\n补丁文件：指定补丁文件。", "class": "软件包管理"}
{"title": "rpm2cpio命令", "语法": "rpm2cpio(参数)", "参数": "文件：指定要转换的rpm包的文件名。", "实例": "rpm2cpio ../libstdc++-4.3.0-8.i386.rpm | cpio -idv", "class": "软件包管理"}
{"title": "dpkg-statoverride命令", "语法": "dpkg-statoverride(选项)", "选项": "-add：为文件添加一个改写； --remove：为文件删除一个改写； --list：显示所有改写列表； --update：如果文件存在，则立刻执行改写操作。", "实例": "修改文件夹的权限属性：", "class": "软件包管理"}
{"title": "dpkg-preconfigure命令", "语法": "dpkg-preconfigure(选项)(参数)", "选项": "-f：选择使用的前端； -p：感兴趣的最低的优先级问题； --apt：在apt模式下运行。", "参数": "软件包：指定“.deb”软件包。", "实例": "导入debconf模板：", "class": "软件包管理"}
{"title": "dpkg-split命令", "语法": "dpkg-split(选项)(参数)", "选项": "-S：设置分割后的每个小文件最大尺寸（以字节为单位）； -s：分割软件包； -j<分块文件><分块文件>：把各个分块合并到一起； -I<分块文件>：显示分块文件的相关信息； -l：列出不匹配的部分； -dscard<文件名>：忽略不匹配的部分。", "参数": "软件包：指定需要分割的“.deb”软件包。", "实例": "把foo.deb分割出N个大小为460KB的文件：", "class": "软件包管理"}
{"title": "dpkg-query命令", "语法": "dpkg-query(选项)(参数)", "选项": "-l：列出符合匹配模式的软件包； -s：查询软件包的状态信息； -L：显示软件包所安装的文件列表； -S：从安装的软件包中查询文件； -w：显示软件包信息； -c：显示软件包的控制文件路径； -p：显示软件包的细节。", "参数": "软件包名称：指定需要查询的软件包。", "实例": "查找文件file1在哪个包里安装：", "class": "软件包管理"}
{"title": "dpkg-divert命令", "语法": "dpkg-divert(选项)(参数)", "选项": "--add：添加一个转移文件； --remove：删除一个转移文件； --list：列出匹配的转移； --truename：对应转移文件真实文件名； --quidet：安静模式。", "参数": "文件：指定转移文件名。", "实例": "指定软件包wibble安装时，写入/usr/bin/example.foo，而不是/usr/bin/example：", "class": "软件包管理"}
{"title": "dpkg-deb命令", "语法": "dpkg-deb(选项)(参数)", "选项": "-c：显示软件包中的文件列表； -e：将主控信息解压； -f：把字段内容打印到标准输出； -x：将软件包中的文件释放到指定目录下； -X：将软件包中的文件释放到指定目录下，并显示释放文件的详细过程； -w：显示软件包的信息； -l：显示软件包的详细信息； -R：提取控制信息和存档的清单文件； -b：创建debian软件包。", "参数": "文件：指定要操作的“.deb”软件包的全名或软件名。", "实例": "解压程序文件：", "class": "软件包管理"}
{"title": "系統管理與維護命令", "class": "文件系统管理"}
{"title": "Linux Fork Bomb Command命令", "class": "文件系统管理"}
{"title": "基於Web的文件管理器，發布 eXtplorer 2.1.5 版本命令", "class": "文件系统管理"}
{"title": "SkyNet：用開源系統管理物聯網命令", "class": "文件系统管理"}
{"title": "Linux jobs命令用法详解：显示Linux中的任务列表及任务状态命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "文件系统管理"}
{"title": "repquota命令", "语法": "repquota(选项)(参数)", "选项": "-a：列出在/etc/fstab文件里，有加入quota设置的分区的使用状况，包括用户和群组； -g：列出所有群组的磁盘空间限制； -u：列出所有用户的磁盘空间限制； -v：显示该用户或群组的所有空间限制。", "参数": "文件系统：要打印报表的文件系统或者对应的设备文件名。", "实例": "显示所有文件系统的磁盘使用情况", "class": "文件系统管理"}
{"title": "e2label命令", "语法": "e2label(参数)", "参数": "文件系统：指定文件系统所对应的设备文件名；\n新卷标：为文件系统指定新卷标。", "实例": "许多用了多年Linux的人可能也没有用过e2label命令。但是这个命令相当有效。在介绍它之前,我们先看看/etc/fstab文件：", "class": "文件系统管理"}
{"title": "findfs命令", "语法": "findfs(参数)", "参数": "LABEL=<卷标>或者UUID=<UUID>：按照卷标或者UUID查询文件系统。", "实例": "通过卷标名查找对应的文件系统：", "class": "文件系统管理"}
{"title": "resize2fs命令", "语法": "resize2fs(选项)(参数)", "选项": "-d：打开调试特性； -p：打印已完成的百分比进度条； -f：强制执行调整大小操作，覆盖掉安全检查操作； -F：开始执行调整大小前，刷新文件系统设备的缓冲区。", "参数": "设备文件名：增大要调整大小的文件系统所对应的设备文件名；\n大小：文件系统的新大小。", "实例": "LV分区重设大小", "class": "文件系统管理"}
{"title": "e2image命令", "语法": "e2image(选项)(参数)", "选项": "-l：将文件中的“ext2/ext3”文件系统元数据还原到分区上。", "参数": "文件系统：指定文件系统对应的设备文件名；\n文件：指定保存文件系统元数据的文件名。", "class": "文件系统管理"}
{"title": "tune2fs命令", "语法": "tune2fs(选项)(参数)", "选项": "-c：调整最大加载次数； -C：设置文件系统已经被加载的次数； -e：设置内核代码检测到错误时的行为； -f：强制执行修改，即使发生错误； -i：设置相邻两次文件系统检查的相隔时间； -j：为“ext2”文件系统添加日志功能，将其转换为“ext3”文件系统； -l：显示文件超级块内容； -L：设置文件系统卷标； -m：显示文件保留块的百分比； -M：设置文件系统最后被加载到的目录； -o：设置或清除文件系统加载的特性或选项； -O：设置或清除文件系统的特性或选项； -r：设置文件系统保留块的大小； -T：设置文件系统上次被检查的时间； -u：设置可以使用文件系统保留块的用户； -U：设置文件系统的UUID。", "参数": "文件系统：指定调整的文件系统或者其对应的设备文件名。", "实例": "tune2fs -c 30 /dev/hda1 设置强制检查前文件系统可以挂载的次数 tune2fs -c -l /dev/hda1 关闭强制检查挂载次数限制。 tune2fs -i 10 /dev/hda1 10天后检查 tune2fs -i 1d /dev/hda1 1天后检查 tune2fs -i 3w /dev/hda1 3周后检查 tune2fs -i 6m /dev/hda1 半年后检查 tune2fs -i 0 /dev/hda1 禁用时间检查 tune2fs -j /dev/hda1 添加日志功能，将ext2转换成ext3文件系统 tune2fs -r 40000 /dev/hda1 调整/dev/hda1分区的保留空间为40000个磁盘块 tune2fs -o acl,user_xattr /dev/hda1 设置/dev/hda1挂载选项，启用Posix Access Control Lists和用户指定的扩展属性", "class": "文件系统管理"}
{"title": "sync命令", "语法": "sync(选项)", "选项": "--help：显示帮助； --version：显示版本信息。", "buffer与cache": "buffer：为了解决写磁盘的效率\ncache：为了解决读磁盘的效率", "class": "文件系统管理"}
{"title": "swapoff命令", "语法": "swapoff(选项)(参数)", "选项": "-a：关闭配置文件“/etc/fstab”中所有的交换空间。", "参数": "交换空间：指定需要激活的交换空间，可以是交换文件和交换分区，如果是交换分区则指定交换分区对应的设备文件。", "实例": "关闭交换分区", "class": "文件系统管理"}
{"title": "swapon命令", "语法": "swapon(选项)(参数)", "选项": "-a：将/etc/fstab文件中所有设置为swap的设备，启动为交换区； -h：显示帮助； -p<优先顺序>：指定交换区的优先顺序； -s：显示交换区的使用状况； -V：显示版本信息。", "参数": "交换空间：指定需要激活的交换空间，可以是交换文件和交换分区，如果是交换分区则指定交换分区对应的设备文件。", "实例": "mkswap -c /dev/hdb4 （-c是检查有无坏块） swapon -v /dev/hdb4 swapon -s Filename type Size Used Priority /dev/hda5 partition 506008 96 -1 /dev/hdb4 partition 489972 0 -2", "class": "文件系统管理"}
{"title": "quota命令", "语法": "quota(选项)(参数)", "选项": "-g：列出群组的磁盘空间限制； -q：简明列表，只列出超过限制的部分； -u：列出用户的磁盘空间限制； -v：显示该用户或群组，在所有挂入系统的存储设备的空间限制； -V：显示版本信息。", "参数": "用户或者工作组：指定要显示的用户或者工作组。", "实例": "我们可以限制某一群组所能使用的最大磁盘配额，而且可以再限制某一使用者的最大磁盘配额 ，好比做一个收费的应用，vip可以得到空间更大一些。另外，以 Link 的方式，来使邮件可以作为限制的配额（更改/var/spool/mail 这个路径），不2，需要重新再规划一个硬盘！直接使用 Link 的方式指向 /home （或者其它已经做好的 quota 磁盘）就可以！这通常是用在原本规划不好，但是却又不想要更动原有主机架构的情况中！", "class": "文件系统管理"}
{"title": "quotastats命令", "语法": "quotastats", "实例": "显示磁盘配额限制状态", "class": "文件系统管理"}
{"title": "edquota命令", "语法": "edquota(选项)(参数)", "选项": "-u：设置用户的quota，这是预设的参数； -g：设置群组的quota； -p<源用户名称>：将源用户的quota设置套用至其他用户或群组； -t：设置宽限期限。", "参数": "用户：指定要编辑磁盘配额限制的用户名或者工作组。", "实例": "配置系统的磁盘配额支持", "class": "文件系统管理"}
{"title": "quotaon命令", "语法": "quotaon(选项)(参数)", "选项": "-a：开启在/ect/fstab文件里，有加入quota设置的分区的空间限制； -g：开启群组的磁盘空间限制； -u：开启用户的磁盘空间限制； -v：显示指令指令执行过程。", "参数": "文件系统：指定要激活磁盘配额功能的文件系统。", "class": "文件系统管理"}
{"title": "quotacheck命令", "语法": "quotacheck(选项)(参数)", "选项": "-a：扫描在/etc/fstab文件里，有加入quota设置的分区； -d：详细显示指令执行过程，便于排错或了解程序执行的情形； -g：扫描磁盘空间时，计算每个群组识别码所占用的目录和文件数目； -R：排除根目录所在的分区； -u：扫描磁盘空间时，计算每个用户识别码所占用的目录和文件数目； -v：显示指令执行过程。", "参数": "文件系统：指定要扫描的文件系统。", "实例": "将所有的在/etc/mtab内，含有quota支持的partition进行扫描：", "class": "文件系统管理"}
{"title": "quotaoff命令", "语法": "quotaoff(选项)(参数)", "选项": "-a：关闭在/etc/fstab文件里，有加入quota设置的分区的空间限制； -g：关闭群组的磁盘空间限制； -u：关闭用户的磁盘空间限制； -v：显示指令执行过程。", "参数": "文件系统：指定要关闭磁盘配额功能的文件系统。", "class": "文件系统管理"}
{"title": "mkfs命令", "语法": "mkfs(选项)(参数)", "选项": "fs：指定建立文件系统时的参数； -t<文件系统类型>：指定要建立何种文件系统； -v：显示版本信息与详细的使用方法； -V：显示简要的使用方法； -c：在制做档案系统前，检查该partition是否有坏轨。", "参数": "文件系统：指定要创建的文件系统对应的设备文件名；\n块数：指定文件系统的磁盘块数。", "实例": "在/dev/hda5上建一个msdos的档案系统，同时检查是否有坏轨存在，并且将过程详细列出来：", "class": "文件系统管理"}
{"title": "mountpoint命令", "语法": "mountpoint(选项)(参数)", "选项": "-q：不打印任何信息； -d：打印文件系统的主设备号和次设备号； -x：打印块数设备的主设备号和次设备号。", "参数": "目录：指定要判断的目录。", "实例": "查看/mnt目录是不是挂载点：", "class": "文件系统管理"}
{"title": "umount命令", "语法": "umount(选项)(参数)", "选项": "-a：卸除/etc/mtab中记录的所有文件系统； -h：显示帮助； -n：卸除时不要将信息存入/etc/mtab文件中； -r：若无法成功卸除，则尝试以只读的方式重新挂入文件系统； -t<文件系统类型>：仅卸除选项中所指定的文件系统； -v：执行时显示详细的信息； -V：显示版本信息。", "参数": "文件系统：指定要卸载的文件系统或者其对应的设备文件名。", "实例": "下面两条命令分别通过设备名和挂载点卸载文件系统，同时输出详细信息：", "class": "文件系统管理"}
{"title": "e2fsck命令", "语法": "e2fsck(选项)(参数)", "选项": "-a：不询问使用者意见，便自动修复文件系统； -b<superblock>：指定superblock，而不使用预设的superblock； -B<区块大小>：指定区块的大小，单位为字节； -c：一并执行badblocks，以标示损坏的区块； -C：将检查过程的信息完整记录在file descriptor中，使得整个检查过程都能完整监控； -d：显示排错信息； -f：即使文件系统没有错误迹象，仍强制地检查正确性； -F：执行前先清除设备的缓冲区； -l<文件>：将文件中指定的区块加到损坏区块列表； -L<文件>：先清除损坏区块列表，再将文件中指定的区块加到损坏区块列表。因此损坏区块列表的区块跟文件中指定的区块是一样的； -n：以只读模式开启文件系统，并采取非互动方式执行，所有的问题对话均设置以\"no\"回答； -p：不询问使用者意见，便自动修复文件系统； -r：此参数只为了兼容性而存在，并无实际作用； -s：如果文件系统的字节顺序不适当，就交换字节顺序，否则不做任何动作； -S：不管文件系统的字节顺序，一律交换字节顺序； -t：显示时间信息； -v：执行时显示详细的信息； -V：显示版本信息； -y：采取非互动方式执行，所有的问题均设置以\"yes\"回答。", "参数": "文件系统或者分区：指定文件系统或者分区所对应的设备文件名。", "实例": "检查/dev/sda1是否有问题，如发现问题便自动修复：", "class": "文件系统管理"}
{"title": "dumpe2fs命令", "语法": "dumpe2fs(选项)(参数)", "选项": "-b：打印文件系统中预留的块信息； -ob<超级块>：指定检查文件系统时使用的超级块； -OB<块大小>：检查文件系统时使用的指定的块大小； -h：仅显示超级块信息； -i：从指定的文件系统映像文件中读取文件系统信息； -x：以16进制格式打印信息块成员。", "参数": "文件系统：指定要查看信息的文件系统。", "实例": "dumpe2fs /dev/hda1 dumpe2fs 1.39 (29-May-2006) Filesystem volume name: / last mounted on: <not available> Filesystem UUID: 845ccd40-1f3b-4729-a63d-cb80f51b082a Filesystem magic number: 0xEF53 Filesystem revision #: 1 (dynamic) Filesystem features: has_journal ext_attr resize_inode dir_index filetype needs_recovery sparse_super large_file Default mount options: user_xattr acl Filesystem state: clean Errors behavior: Continue Filesystem OS type: Linux Inode count: 5242880 Block count: 5241817 Reserved block count: 262090 free blocks: 4434157 Free inodes: 5170836 First block: 0 Block size: 4096 Fragment size: 4096 Reserved GDT blocks: 1022 Blocks per group: 32768 Fragments per group: 32768 Inodes per group: 32768 Inode blocks per group: 1024 Filesystem created: Sun Mar 24 02:09:14 2013 Last mount time: Thu Aug 1 16:42:07 2013 Last write time: Thu Aug 1 16:42:07 2013 Mount count: 10 Maximum mount count: -1 Last checked: Sun Mar 24 02:09:14 2013 Check interval: 0 (<none>) Reserved blocks uid: 0 (user root) Reserved blocks gid: 0 (group root) First inode: 11 Inode size: 128 Journal inode: 8 First orphan inode: 3735559 Default directory hash: tea Directory Hash Seed: e3f7162e-1194-4161-805d-763db89dbc69 Journal backup: inode blocks Journal size: 128M Group 0: (Blocks 0-32767) Primary superblock at 0, Group descriptors at 1-2 Reserved GDT blocks at 3-1024 Block bitmap at 1025 (+1025), Inode bitmap at 1026 (+1026) Inode table at 1027-2050 (+1027) 0 free blocks, 32757 free inodes, 2 directories Free blocks: Free inodes: 12-32768 ...", "class": "文件系统管理"}
{"title": "fsck命令", "语法": "fsck(选项)(参数)", "选项": "-a：自动修复文件系统，不询问任何问题； -A：依照/etc/fstab配置文件的内容，检查文件内所列的全部文件系统； -N：不执行指令，仅列出实际执行会进行的动作； -P：当搭配\"-A\"参数使用时，则会同时检查所有的文件系统； -r：采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式； -R：当搭配\"-A\"参数使用时，则会略过/目录的文件系统不予检查； -s：依序执行检查作业，而非同时执行； -t<文件系统类型>：指定要检查的文件系统类型； -T：执行fsck指令时，不显示标题信息； -V：显示指令执行过程。", "参数": "文件系统：指定要查看信息的文件系统。", "实例": "linux的文件系统损坏会导致linux不正常关机，出错的时候如果系统告诉你是哪一块硬盘的分区有问题，比如是/dev/hda2，接着用如下的命令去对付它：", "class": "文件系统管理"}
{"title": "mount命令", "语法": "mount(选项)(参数)", "选项": "-V：显示程序版本； -l：显示已加载的文件系统列表； -h：显示帮助信息并退出； -v：冗长模式，输出指令执行的详细信息； -n：加载没有写入文件“/etc/mtab”中的文件系统； -r：将文件系统加载为只读模式； -a：加载文件“/etc/fstab”中描述的所有文件系统。", "参数": "设备文件名：指定要加载的文件系统对应的设备名；\n加载点：指定加载点目录。", "实例": "mount -t auto /dev/cdrom /mnt/cdrom mount: mount point /mnt/cdrom does not exist /mnt/cdrom目录不存在，需要先创建。 cd /mnt -bash: cd: /mnt: No such file or directory mkdir -p /mnt/cdrom 创建/mnt/cdrom目录 ls bin dev home lib media mnt proc sbin srv tmp var boot etc initrd lost+found misc opt root selinux sys usr mount -t auto /dev/cdrom /mnt/cdrom 挂载cdrom mount: block device /dev/cdrom is write-protected, mounting read-only 挂载成功 ll /mnt/cdrom 查看cdrom里面内容 total 859 dr-xr-xr-x 4 root root 2048 Sep 4 2005 CentOS -r--r--r-- 2 root root 8859 Mar 19 2005 centosdocs-man.css -r--r--r-- 9 root root 18009 Mar 1 2005 GPL dr-xr-xr-x 2 root root 241664 May 7 02:32 headers dr-xr-xr-x 4 root root 2048 May 7 02:23 images dr-xr-xr-x 2 root root 4096 May 7 02:23 isolinux dr-xr-xr-x 2 root root 18432 May 2 18:50 NOTES -r--r--r-- 2 root root 5443 May 7 01:49 RELEASE-NOTES-en.html dr-xr-xr-x 2 root root 2048 May 7 02:34 repodata -r--r--r-- 9 root root 1795 Mar 1 2005 rpm-GPG-KEY -r--r--r-- 2 root root 1795 Mar 1 2005 RPM-GPG-KEY-centos4 -r--r--r-- 1 root root 571730 May 7 01:39 yumgroups.xml", "class": "文件系统管理"}
{"title": "mke2fs命令", "语法": "mke2fs(选项)(参数)", "选项": "-b<区块大小>：指定区块大小，单位为字节； -c；检查是否有损坏的区块； -f<不连续区段大小>：指定不连续区段的大小，单位为字节； -F：不管指定的设备为何，强制执行mke2fs； -i<字节>：指定\"字节/inode\"的比例； -N<inode数>：指定要建立的inode数目； -l<文件>：从指定的文件中，读取文件西中损坏区块的信息； -L<标签>：设置文件系统的标签名称； -m<百分比值>：指定给管理员保留区块的比例，预设为5%； -M：记录最后一次挂入的目录； -q：执行时不显示任何信息； -r：指定要建立的ext2文件系统版本； -R=<区块数>：设置磁盘阵列参数； -S：仅写入superblock与group descriptors，而不更改inode able inode bitmap以及block bitmap； -v：执行时显示详细信息； -V：显示版本信息。", "参数": "设备文件：指定要创建的文件系统的分区设备文件名；\n块数：指定要创建的文件系统的磁盘块数量。", "实例": "创建指定的ext2文件系统。", "class": "文件系统管理"}
{"title": "Linux服務器管理系統，wdcp v2.5 正式版發布命令", "class": "服务器管理"}
{"title": "Linux 文件与目录管理命令", "class": "文件处理"}
{"title": "iconv命令", "语法": "iconv -f encoding [-t encoding] [inputfile]...", "选项": "-f encoding :把字符从encoding编码开始转换。 -t encoding :把字符转换到encoding编码。 -l :列出已知的编码字符集合 -o file :指定输出文件 -c :忽略输出的非法字符 -s :禁止警告信息，但不是错误信息 --verbose :显示进度信息 -f和-t所能指定的合法字符在-l选项的命令里面都列出来了。", "实例": "列出当前支持的字符编码：", "class": "文件处理"}
{"title": "nl命令", "语法": "nl (选项) (参数)", "选项": "-b ：指定行号指定的方式，主要有两种： -b a ：表示不论是否为空行，也同样列出行号(类似 cat -n)； -b t ：如果有空行，空的那一行不要列出行号(默认值)； -n ：列出行号表示的方法，主要有三种： -n ln ：行号在萤幕的最左方显示； -n rn ：行号在自己栏位的最右方显示，且不加 0 ； -n rz ：行号在自己栏位的最右方显示，且加 0 ； -w ：行号栏位的占用的位数。 -p ：在逻辑定界符处不重新开始计算。", "实例": "用 nl 列出 log2015.log 的内容：", "class": "文件处理"}
{"title": "basename命令", "语法": "basename(选项)(参数)", "选项": "--help：显示帮助； --version：显示版本号。", "参数": "文件：带路径信息的文件；\n后缀：可选参数，指定要去除的文件后缀字符串。", "实例": "1、要显示一个shell变量的基本名称，请输入：", "class": "文件处理"}
{"title": "unlink命令", "语法": "unlink(选项)(参数)", "选项": "--help：显示帮助； --version：显示版本号。", "参数": "文件：指定要删除的文件。", "class": "文件处理"}
{"title": "pathchk命令", "语法": "pathchk(选项)(参数)", "选项": "-p：检查大多数的POSIX系统； -P：检查空名字和“-”开头的文件； --portability：检查所有的POSIX系统，等同于“-P-p”选项； --help：显示帮助； --wersion：显示版本号。", "参数": "文件：带路径信息的文件；\n后缀：可选参数，指定要去除的文件后缀字符串。", "class": "文件处理"}
{"title": "touch命令", "语法": "touch(选项)(参数)", "选项": "-a：或--time=atime或--time=access或--time=use 只更改存取时间； -c：或--no-create 不建立任何文件； -d：<时间日期> 使用指定的日期时间，而非现在的时间； -f：此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题； -m：或--time=mtime或--time=modify 只更该变动时间； -r：<参考文件或目录> 把指定文件或目录的日期时间，统统设成和参考文件或目录的日期时间相同； -t：<日期时间> 使用指定的日期时间，而非现在的时间； --help：在线帮助； --version：显示版本信息。", "参数": "文件：指定要设置时间属性的文件列表。", "实例": "touch ex2", "class": "文件处理"}
{"title": "rename命令", "语法": "rename(参数)", "参数": "原字符串：将文件名需要替换的字符串； 目标字符串：将文件名中含有的原字符替换成目标字符串； 文件：指定要改变文件名的文件列表。", "实例": "将main1.c重命名为main.c", "class": "文件处理"}
{"title": "dd命令", "语法": "dd(选项)", "选项": "bs=<字节数>：将ibs（输入）与欧巴桑（输出）设成指定的字节数； cbs=<字节数>：转换时，每次只转换指定的字节数； conv=<关键字>：指定文件转换的方式； count=<区块数>：仅读取指定的区块数； ibs=<字节数>：每次读取的字节数； obs=<字节数>：每次输出的字节数； of=<文件>：输出到文件； seek=<区块数>：一开始输出时，跳过指定的区块数； skip=<区块数>：一开始读取时，跳过指定的区块数； --help：帮助； --version：显示版本信息。", "实例": "[root@localhost text]# dd if=/dev/zero of=sun.txt bs=1M count=1 1+0 records in 1+0 records out 1048576 bytes (1.0 MB) copied, 0.006107 seconds, 172 MB/s [root@localhost text]# du -sh sun.txt 1.1M sun.txt", "class": "文件处理"}
{"title": "dirname命令", "语法": "dirname(选项)(参数)", "选项": "--help：显示帮助； --version：显示版本号。", "实例": "dirname // 结果为 / dirname /a/b/ 结果为：/a dirname a 结果为 . dirname a/b 结果为路径名 a", "class": "文件处理"}
{"title": "updatedb命令", "语法": "updatedb(选项)", "选项": "-o<文件>：忽略默认的数据库文件，使用指定的slocate数据库文件； -U<目录>：更新指定目录的slocate数据库； -v：显示执行的详细过程。", "实例": "实用updatedb命令的-U选项可以指定要更新slocate数据库的目录。", "class": "文件处理"}
{"title": "ln命令", "语法": "ln(选项)(参数)", "选项": "-b或--backup：删除，覆盖目标文件之前的备份； -d或-F或——directory：建立目录的硬连接； -f或——force：强行建立文件或目录的连接，不论文件或目录是否存在； -i或——interactive：覆盖既有文件之前先询问用户； -n或--no-dereference：把符号连接的目的目录视为一般文件； -s或——symbolic：对源文件建立符号连接，而非硬连接； -S<字尾备份字符串>或--suffix=<字尾备份字符串>：用\"-b\"参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，预设的备份字符串是符号“~”，用户可通过“-S”参数来改变它； -v或——verbose：显示指令执行过程； -V<备份方式>或--version-control=<备份方式>：用“-b”参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用“-S”参数变更，当使用“-V”参数<备份方式>指定不同备份方式时，也会产生不同字尾的备份字符串； --help：在线帮助； --version：显示版本信息。", "参数": "源文件：指定连接的源文件。如果使用-s选项创建符号连接，则“源文件”可以是文件或者目录。创建硬连接时，则“源文件”参数只能是文件；\n目标文件：指定源文件的目标连接文件。", "实例": "将目录/usr/mengqc/mub1下的文件m2.c链接到目录/usr/liu下的文件a2.c", "硬链接": "建立硬链接时，在另外的目录或本目录中增加目标文件的一个目录项，这样，一个文件就登记在多个目录中。如图所示的m2.c文件就在目录mub1和liu中都建立了目录项。", "符号链接": "符号链接也称为软链接，是将一个路径名链接到一个文件。这些文件是一种特别类型的文件。事实上，它只是一个文本文件（如图中的abc文件），其中包含它提供链接的另一个文件的路径名，如图中虚线箭头所示。另一个文件是实际包含所有数据的文件。所有读、写文件内容的命令被用于符号链接时，将沿着链接方向前进来访问实际的文件。", "class": "文件处理"}
{"title": "cat命令", "语法": "cat(选项)(参数)", "选项": "-n或-number：有1开始对所有输出的行数编号； -b或--number-nonblank：和-n相似，只不过对于空白行不编号； -s或--squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行； -A：显示不可打印字符，行尾显示“$”； -e：等价于\"-vE\"选项； -t：等价于\"-vT\"选项；", "参数": "文件列表：指定要连接的文件列表。", "实例": "设ml和m2是当前目录下的两个文件", "class": "文件处理"}
{"title": "strings命令", "语法": "strings [ -a ] [ - ] [ -o ] [ -t Format ] [ -n Number ] [ -Number ] [ file ... ]", "选项": "-a --all：扫描整个文件而不是只扫描目标文件初始化和装载段 -f –print-file-name：在显示字符串前先显示文件名 -n –bytes=[number]：找到并且输出所有NUL终止符序列 - ：设置显示的最少的字符数，默认是4个字符 -t --radix={o,d,x} ：输出字符的位置，基于八进制，十进制或者十六进制 -o ：类似--radix=o -T --target= ：指定二进制文件格式 -e --encoding={s,S,b,l,B,L} ：选择字符大小和排列顺序:s = 7-bit, S = 8-bit, {b,l} = 16-bit, {B,L} = 32-bit @ ：读取中选项", "实例": "列出ls中所有的ASCII文本：", "class": "文件查找和比较"}
{"title": "diff命令", "语法": "diff(选项)(参数)", "选项": "-<行数>：指定要显示多少行的文本。此参数必须与-c或-u参数一并使用； -a或——text：diff预设只会逐行比较文本文件； -b或--ignore-space-change：不检查空格字符的不同； -B或--ignore-blank-lines：不检查空白行； -c：显示全部内容，并标出不同之处； -C<行数>或--context<行数>：与执行“-c-<行数>”指令相同； -d或——minimal：使用不同的演算法，以小的单位来做比较； -D<巨集名称>或ifdef<巨集名称>：此参数的输出格式可用于前置处理器巨集； -e或——ed：此参数的输出格式可用于ed的script文件； -f或-forward-ed：输出的格式类似ed的script文件，但按照原来文件的顺序来显示不同处； -H或--speed-large-files：比较大文件时，可加快速度； -l<字符或字符串>或--ignore-matching-lines<字符或字符串>：若两个文件在某几行有所不同，而之际航同时都包含了选项中指定的字符或字符串，则不显示这两个文件的差异； -i或--ignore-case：不检查大小写的不同； -l或——paginate：将结果交由pr程序来分页； -n或——rcs：将比较结果以RCS的格式来显示； -N或--new-file：在比较目录时，若文件A仅出现在某个目录中，预设会显示：Only in目录，文件A 若使用-N参数，则diff会将文件A 与一个空白的文件比较； -p：若比较的文件为C语言的程序码文件时，显示差异所在的函数名称； -P或--unidirectional-new-file：与-N类似，但只有当第二个目录包含了第一个目录所没有的文件时，才会将这个文件与空白的文件做比较； -q或--brief：仅显示有无差异，不显示详细的信息； -r或——recursive：比较子目录中的文件； -s或--report-identical-files：若没有发现任何差异，仍然显示信息； -S<文件>或--starting-file<文件>：在比较目录时，从指定的文件开始比较； -t或--expand-tabs：在输出时，将tab字符展开； -T或--initial-tab：在每行前面加上tab字符以便对齐； -u，-U<列数>或--unified=<列数>：以合并的方式来显示文件内容的不同； -v或——version：显示版本信息； -w或--ignore-all-space：忽略全部的空格字符； -W<宽度>或--width<宽度>：在使用-y参数时，指定栏宽； -x<文件名或目录>或--exclude<文件名或目录>：不比较选项中所指定的文件或目录； -X<文件>或--exclude-from<文件>；您可以将文件或目录类型存成文本文件，然后在=<文件>中指定此文本文件； -y或--side-by-side：以并列的方式显示文件的异同之处； --help：显示帮助； --left-column：在使用-y参数时，若两个文件某一行内容相同，则仅在左侧的栏位显示该行内容； --suppress-common-lines：在使用-y参数时，仅显示不同之处。", "参数": "文件1：指定要比较的第一个文件；\n文件2：指定要比较的第二个文件。", "实例": "将目录/usr/li下的文件\"test.txt\"与当前目录下的文件\"test.txt\"进行比较，输入如下命令：", "class": "文件查找和比较"}
{"title": "cmp命令", "语法": "cmp(选项)(参数)", "选项": "-c或--print-chars：除了标明差异处的十进制字码之外，一并显示该字符所对应字符； -i<字符数目>或--ignore-initial=<字符数目>：指定一个数目； -l或——verbose：标示出所有不一样的地方； -s或--quiet或——silent：不显示错误信息； -v或——version：显示版本信息； --help：在线帮助。", "参数": "目录：比较两个文件的差异。", "实例": "使用cmp命令比较文件\"testfile\"和文件\"testfile1\"两个文件，则输入下面的命令：", "class": "文件查找和比较"}
{"title": "diff3命令", "语法": "diff3(选项)(参数)", "选项": "-a：把所有的文件都当做文本文件按照行为单位进行比较，即给定的文件不是文本文件； -A：合并第2个文件和第3个文件之间的不同到第1个文件中，有冲突内容用括号括起来； -B：与选项“-A”功能相同，但是不显示冲突的内容； -e/--ed：生成一个“-ed”脚本，用于将第2个文件和第3个文件之间的不同合并到第1个文件中； --easy-only：除了不显示互相重叠的变化，与选项“-e”的功能相同； -i：为了和system V系统兼容，在“ed”脚本的最后生成“w”和“q”命令。此选项必须和选项“-AeExX3”连用，但是不能和“-m”连用； --initial-tab：在正常格式的行的文本前，输出一个TAB字符而非两个空白字符。此选项将导致在行中TAB字符的对齐方式看上去规范。", "参数": "文件1：指定要比较的第1个文件；\n文件2：指定要比较的第2个文件；\n文件3：指定要比较的第3个文件。", "class": "文件查找和比较"}
{"title": "locate/slocate命令", "语法": "locate/slocate(选项)(参数)", "选项": "-d<目录>或--database=<目录>：指定数据库所在的目录； -u：更新slocate数据库； --help：显示帮助； --version：显示版本信息。", "参数": "查找字符串：要查找的文件名中含有的字符串。", "实例": "搜索etc目录下所有以sh开头的文件：", "class": "文件查找和比较"}
{"title": "which命令", "语法": "which(选项)(参数)", "选项": "-n<文件名长度>：制定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名； -p<文件名长度>：与-n参数相同，但此处的<文件名长度>包含了文件的路径； -w：指定输出时栏位的宽度； -V：显示版本信息。", "参数": "指令名：指令名列表。", "实例": "查找文件、显示命令路径：", "class": "文件查找和比较"}
{"title": "find命令", "语法": "find(选项)(参数)", "选项": "-amin<分钟>：查找在指定时间曾被存取过的文件或目录，单位以分钟计算； -anewer<参考文件或目录>：查找其存取时间较指定文件或目录的存取时间更接近现在的文件或目录； -atime<24小时数>：查找在指定时间曾被存取过的文件或目录，单位以24小时计算； -cmin<分钟>：查找在指定时间之时被更改过的文件或目录； -cnewer<参考文件或目录>查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录； -ctime<24小时数>：查找在指定时间之时被更改的文件或目录，单位以24小时计算； -daystart：从本日开始计算时间； -depth：从指定目录下最深层的子目录开始查找； -expty：寻找文件大小为0 Byte的文件，或目录下没有任何子目录或文件的空目录； -exec<执行指令>：假设find指令的回传值为True，就执行该指令； -false：将find指令的回传值皆设为False； -fls<列表文件>：此参数的效果和指定“-ls”参数类似，但会把结果保存为指定的列表文件； -follow：排除符号连接； -fprint<列表文件>：此参数的效果和指定“-print”参数类似，但会把结果保存成指定的列表文件； -fprint0<列表文件>：此参数的效果和指定“-print0”参数类似，但会把结果保存成指定的列表文件； -fprintf<列表文件><输出格式>：此参数的效果和指定“-printf”参数类似，但会把结果保存成指定的列表文件； -fstype<文件系统类型>：只寻找该文件系统类型下的文件或目录； -gid<群组识别码>：查找符合指定之群组识别码的文件或目录； -group<群组名称>：查找符合指定之群组名称的文件或目录； -help或——help：在线帮助； -ilname<范本样式>：此参数的效果和指定“-lname”参数类似，但忽略字符大小写的差别； -iname<范本样式>：此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别； -inum<inode编号>：查找符合指定的inode编号的文件或目录； -ipath<范本样式>：此参数的效果和指定“-path”参数类似，但忽略字符大小写的差别； -iregex<范本样式>：此参数的效果和指定“-regexe”参数类似，但忽略字符大小写的差别； -links<连接数目>：查找符合指定的硬连接数目的文件或目录； -iname<范本样式>：指定字符串作为寻找符号连接的范本样式； -ls：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出； -maxdepth<目录层级>：设置最大目录层级； -mindepth<目录层级>：设置最小目录层级； -mmin<分钟>：查找在指定时间曾被更改过的文件或目录，单位以分钟计算； -mount：此参数的效果和指定“-xdev”相同； -mtime<24小时数>：查找在指定时间曾被更改过的文件或目录，单位以24小时计算； -name<范本样式>：指定字符串作为寻找文件或目录的范本样式； -newer<参考文件或目录>：查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录； -nogroup：找出不属于本地主机群组识别码的文件或目录； -noleaf：不去考虑目录至少需拥有两个硬连接存在； -nouser：找出不属于本地主机用户识别码的文件或目录； -ok<执行指令>：此参数的效果和指定“-exec”类似，但在执行指令之前会先询问用户，若回答“y”或“Y”，则放弃执行命令； -path<范本样式>：指定字符串作为寻找目录的范本样式； -perm<权限数值>：查找符合指定的权限数值的文件或目录； -print：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称前皆有“./”字符串； -print0：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为全部的名称皆在同一行； -printf<输出格式>：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式可以自行指定； -prune：不寻找字符串作为寻找文件或目录的范本样式; -regex<范本样式>：指定字符串作为寻找文件或目录的范本样式； -size<文件大小>：查找符合指定的文件大小的文件； -true：将find指令的回传值皆设为True； -typ<文件类型>：只寻找符合指定的文件类型的文件； -uid<用户识别码>：查找符合指定的用户识别码的文件或目录； -used<日数>：查找文件或目录被更改之后在指定时间曾被存取过的文件或目录，单位以日计算； -user<拥有者名称>：查找符和指定的拥有者名称的文件或目录； -version或——version：显示版本信息； -xdev：将范围局限在先行的文件系统中； -xtype<文件类型>：此参数的效果和指定“-type”参数类似，差别在于它针对符号连接检查。", "参数": "起始目录：查找文件的起始目录。", "实例": "根据文件或者正则表达式进行匹配", "class": "文件查找和比较"}
{"title": "whereis命令", "语法": "whereis(选项)(参数)", "选项": "-b：只查找二进制文件； -B<目录>：只在设置的目录下查找二进制文件； -f：不显示文件名前的路径名称； -m：只查找说明文件； -M<目录>：只在设置的目录下查找说明文件； -s：只查找原始代码文件； -S<目录>只在设置的目录下查找原始代码文件； -u：查找不包含指定类型的文件。", "参数": "指令名：要查找的二进制程序、源文件和man手册页的指令名。", "实例": "将相关的文件都查找出来", "class": "文件查找和比较"}
{"title": "hexdump命令", "语法": "hexdump [选项] [文件]...", "选项": "-n length 只格式化输入文件的前length个字节。 -C 输出规范的十六进制和ASCII码。 -b 单字节八进制显示。 -c 单字节字符显示。 -d 双字节十进制显示。 -o 双字节八进制显示。 -x 双字节十六进制显示。 -s 从偏移量开始输出。 -e 指定格式字符串，格式字符串包含在一对单引号中，格式字符串形如：'a/b \"format1\" \"format2\"'。", "实例": "hexdump -e '16/1 \"%02X \" \" | \"' -e '16/1 \"%_p\" \"\\n\"' test 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F | ................ 10 11 12 13 14 15 16 17 18 19 1A 1B 1C 1D 1E 1F | ................ 20 21 22 23 24 25 26 27 28 29 2A 2B 2C 2D 2E 2F | !\"#$%&'()*+,-./", "class": "文件内容查看"}
{"title": "od命令", "语法": "od(选项)(参数)", "选项": "-a：此参数的效果和同时指定“-ta”参数相同； -A：<字码基数>：选择以何种基数计算字码； -b：此参数的效果和同时指定“-toC”参数相同； -c：此参数的效果和同时指定“-tC”参数相同； -d：此参数的效果和同时指定“-tu2”参数相同； -f：此参数的效果和同时指定“-tfF”参数相同； -h：此参数的效果和同时指定“-tx2”参数相同； -i：此参数的效果和同时指定“-td2”参数相同； -j<字符数目>或--skip-bytes=<字符数目>：略过设置的字符数目； -l：此参数的效果和同时指定“-td4”参数相同； -N<字符数目>或--read-bytes=<字符数目>：到设置的字符树目为止； -o：此参数的效果和同时指定“-to2”参数相同； -s<字符串字符数>或--strings=<字符串字符数>：只显示符合指定的字符数目的字符串； -t<输出格式>或--format=<输出格式>：设置输出格式； -v或--output-duplicates：输出时不省略重复的数据； -w<每列字符数>或--width=<每列字符数>：设置每列的最大字符数； -x：此参数的效果和同时指定“-h”参数相同； --help：在线帮助； --version：显示版本信息。", "参数": "文件：指定要显示的文件。", "实例": "[linuxde@localhost ~]$ echo abcdef g > tmp [linuxde@localhost ~]$ cat tmp abcdef g", "class": "文件内容查看"}
{"title": "cut命令", "语法": "cut(选项)(参数)", "选项": "-b：仅显示行中指定直接范围的内容； -c：仅显示行中指定范围的字符； -d：指定字段的分隔符，默认的字段分隔符为“TAB”； -f：显示指定字段的内容； -n：与“-b”选项连用，不分割多字节字符； --complement：补足被选择的字节、字符或字段； --out-delimiter=<字段分隔符>：指定输出内容是的字段分割符； --help：显示指令的帮助信息； --version：显示指令的版本信息。", "参数": "文件：指定要进行内容过滤的文件。", "实例": "例如有一个学生报表信息，包含No、Name、Mark、Percent：", "指定字段的字符或者字节范围": "cut命令可以将一串字符作为列来显示，字符字段的记法：", "class": "文件内容查看"}
{"title": "tail命令", "语法": "tail(选项)(参数)", "选项": "--retry：即是在tail命令启动时，文件不可访问或者文件稍后变得不可访问，都始终尝试打开文件。使用此选项时需要与选项“——follow=name”连用； -c<N>或——bytes=<N>：输出文件尾部的N（N为整数）个字节内容； -f<name/descriptor>或；--follow<nameldescript>：显示文件最新追加的内容。“name”表示以文件名的方式监视文件的变化。“-f”与“-fdescriptor”等效； -F：与选项“-follow=name”和“--retry\"连用时功能相同； -n<N>或——line=<N>：输出文件的尾部N（N位数字）行内容。 --pid=<进程号>：与“-f”选项连用，当指定的进程号的进程终止后，自动退出tail命令； -q或——quiet或——silent：当有多个文件参数时，不输出各个文件名； -s<秒数>或——sleep-interal=<秒数>：与“-f”选项连用，指定监视文件变化时间隔的秒数； -v或——verbose：当有多个文件参数时，总是输出各个文件名； --help：显示指令的帮助信息； --version：显示指令的版本信息。", "参数": "文件列表：指定要显示尾部内容的文件列表。", "实例": "tail file （显示文件file的最后10行） tail +20 file （显示文件file的内容，从第20行至文件末尾） tail -c 10 file （显示文件file的最后10个字符）", "class": "文件内容查看"}
{"title": "head命令", "语法": "head(选项)(参数)", "选项": "-n<数字>：指定显示头部内容的行数； -c<字符数>：指定显示头部内容的字符数； -v：总是显示文件名的头信息； -q：不显示文件名的头信息。", "参数": "文件列表：指定显示头部内容的文件列表。", "class": "文件内容查看"}
{"title": "less命令", "语法": "less(选项)(参数)", "选项": "-e：文件内容显示完毕后，自动退出； -f：强制显示文件； -g：不加亮显示搜索到的所有关键词，仅显示当前显示的关键字，以提高显示速度； -l：搜索时忽略大小写的差异； -N：每一行行首显示行号； -s：将连续多个空行压缩成一行显示； -S：在单行显示较长的内容，而不换行显示； -x<数字>：将TAB字符显示为指定个数的空格字符。", "参数": "文件：指定要分屏显示内容的文件。", "class": "文件内容查看"}
{"title": "more命令", "语法": "more(语法)(参数)", "选项": "-<数字>：指定每屏显示的行数； -d：显示“[press space to continue,'q' to quit.]”和“[Press 'h' for instructions]”； -c：不进行滚屏操作。每次刷新这个屏幕； -s：将多个空行压缩成一行显示； -u：禁止下划线； +<数字>：从指定数字的行开始显示。", "参数": "文件：指定分页显示内容的文件。", "实例": "显示文件file的内容，但在显示之前先清屏，并且在屏幕的最下方显示完核的百分比。", "class": "文件内容查看"}
{"title": "nano命令", "语法": "nano [选项] [[+行,列] 文件名]...", "选项": "-h, -? --help 显示此信息 +行,列 从所指列数与行数开始 -A --smarthome 启用智能 HOME 键 -B --backup 储存既有文件的备份 -C <目录> --backupdir=<目录> 用以储存独一备份文件的目录 -D --boldtext 用粗体替代颜色反转 -E --tabstospaces 将已输入的制表符转换为空白 -F --multibuffer 启用多重文件缓冲区功能 -H --historylog 记录与读取搜索/替换的历史字符串 -I --ignorercfiles 不要参考nanorc 文件 -K --rebindkeypad 修正数字键区按键混淆问题 -L --nonewlines 不要将换行加到文件末端 -N --noconvert 不要从 DOS/Mac 格式转换 -O --morespace 编辑时多使用一行 -Q <字符串> --quotestr=<字符串> 引用代表字符串 -R --restricted 限制模式 -S --smooth 按行滚动而不是半屏 -T <#列数> --tabsize=<#列数> 设定制表符宽度为 #列数 -U --quickblank 状态行快速闪动 -V --version 显示版本资讯并离开 -W --wordbounds 更正确地侦测单字边界 -Y <字符串> --syntax=<字符串> 用于加亮的语法定义 -c --const 持续显示游标位置 -d --rebinddelete 修正退格键/删除键混淆问题 -i --autoindent 自动缩进新行 -k --cut 从游标剪切至行尾 -l --nofollow 不要依照符号连结，而是覆盖 -m --mouse 启用鼠标功能 -o <目录> --operatingdir=<目录> 设定操作目录 -p --preserve 保留XON (^Q) 和XOFF (^S) 按键 -q --quiet 沉默忽略启动问题, 比如rc 文件错误 -r <#列数> --fill=<#列数> 设定折行宽度为 #列数 -s <程序> --speller=<程序> 启用替代的拼写检查程序 -t --tempfile 离开时自动储存，不要提示 -u --undo 允许通用撤销[试验性特性] -v --view 查看(只读)模式 -w --nowrap 不要自动换行 -x --nohelp 不要显示辅助区 -z --suspend 启用暂停功能 -$ --softwrap 启用软换行 -a, -b, -e, -f, -g, -j (忽略，为与pico 相容)", "用法": "光标控制", "class": "文件编辑"}
{"title": "sed命令", "选项": "-e<script>或--expression=<script>：以选项中的指定的script来处理输入的文本文件； -f<script文件>或--file=<script文件>：以选项中指定的script文件来处理输入的文本文件； -h或--help：显示帮助； -n或--quiet或——silent：仅显示script处理后的结果； -V或--version：显示版本信息。", "参数": "文件：指定待处理的文本文件列表。", "sed命令": "a\\ 在当前行下面插入文本。 i\\ 在当前行上面插入文本。 c\\ 把选定的行改为新的文本。 d 删除，删除选择的行。 D 删除模板块的第一行。 s 替换指定字符 h 拷贝模板块的内容到内存中的缓冲区。 H 追加模板块的内容到内存中的缓冲区。 g 获得内存缓冲区的内容，并替代当前模板块中的文本。 G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。 l 列表不能打印字符的清单。 n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。 N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。 p 打印模板块的行。 P(大写) 打印模板块的第一行。 q 退出Sed。 b lable 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。 r file 从file中读行。 t label if分支，从最后一行开始，条件一旦满足或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。 T label 错误分支，从最后一行开始，一旦发生错误或者T，t命令，将导致分支到带有标号的命令处，或者到脚本的末尾。 w file 写并追加模板块到file末尾。 W file 写并追加模板块的第一行到file末尾。 ! 表示后面的命令对所有没有被选定的行发生作用。 = 打印当前行号码。 # 把注释扩展到下一个换行符以前。", "sed替换标记": "g 表示行内全面替换。 p 表示打印行。 w 表示把行写入一个文件。 x 表示互换模板块中的文本和缓冲区中的文本。 y 表示把一个字符翻译为另外的字符（但是不用于正则表达式） \\1 子串匹配标记 & 已匹配字符串标记", "sed元字符集": "^ 匹配行开始，如：/^sed/匹配所有以sed开头的行。 $ 匹配行结束，如：/sed$/匹配所有以sed结尾的行。 . 匹配一个非换行符的任意字符，如：/s.d/匹配s后接一个任意字符，最后是d。 * 匹配0个或多个字符，如：/*sed/匹配所有模板是一个或多个空格后紧跟sed的行。 [] 匹配一个指定范围内的字符，如/[ss]ed/匹配sed和Sed。 [^] 匹配一个不在指定范围内的字符，如：/[^A-RT-Z]ed/匹配不包含A-R和T-Z的一个字母开头，紧跟ed的行。 \\(..\\) 匹配子串，保存匹配的字符，如s/\\(love\\)able/\\1rs，loveable被替换成lovers。 & 保存搜索字符用来替换其他字符，如s/love/**&**/，love这成**love**。 \\< 匹配单词的开始，如:/\\<love/匹配包含以love开头的单词的行。 \\> 匹配单词的结束，如/love\\>/匹配包含以love结尾的单词的行。 x\\{m\\} 重复字符x，m次，如：/0\\{5\\}/匹配包含5个0的行。 x\\{m,\\} 重复字符x，至少m次，如：/0\\{5,\\}/匹配至少有5个0的行。 x\\{m,n\\} 重复字符x，至少m次，不多于n次，如：/0\\{5,10\\}/匹配5~10个0的行。", "替换操作：s命令": "替换文本中的字符串：", "全面替换标记g": "使用后缀 /g 标记会替换每一行中的所有匹配：", "定界符": "以上命令中字符 / 在sed中作为定界符使用，也可以使用任意的定界符：", "删除操作：d命令": "删除空白行：", "已匹配字符串标记&": "正则表达式 \\w\\+ 匹配每一个单词，使用 [&] 替换它，& 对应于之前所匹配到的单词：", "子串匹配标记\\1": "匹配给定样式的其中一部分：", "组合多个表达式": "sed '表达式' | sed '表达式' 等价于： sed '表达式; 表达式'", "引用": "sed表达式可以使用单引号来引用，但是如果表达式内部包含变量字符串，就需要使用双引号。", "选定行的范围：,（逗号）": "所有在模板test和check所确定的范围内的行都被打印：", "多点编辑：e命令": "-e选项允许在同一行里执行多条命令：", "从文件读入：r命令": "file里的内容被读进来，显示在与test匹配的行后面，如果匹配多行，则file的内容将显示在所有匹配行的下面：", "写入文件：w命令": "在example中所有包含test的行都被写入file里：", "追加（行下）：a\\命令": "将 this is a test line 追加到 以test 开头的行后面：", "插入（行上）：i\\命令": "将 this is a test line 追加到以test开头的行前面：", "下一个：n命令": "如果test被匹配，则移动到匹配行的下一行，替换这一行的aa，变为bb，并打印该行，然后继续：", "变形：y命令": "把1~10行内所有abcde转变为大写，注意，正则表达式元字符不能使用这个命令：", "退出：q命令": "打印完第10行后，退出sed", "保持和获取：h命令和G命令": "在sed处理文件的时候，每一行都被保存在一个叫模式空间的临时缓冲区中，除非行被删除或者输出被取消，否则所有被处理的行都将 打印在屏幕上。接着模式空间被清空，并存入新的一行等待处理。", "保持和互换：h命令和x命令": "互换模式空间和保持缓冲区的内容。也就是把包含test与check的行互换：", "脚本scriptfile": "sed脚本是一个sed的命令清单，启动Sed时以-f选项引导脚本文件名。Sed对于脚本中输入的命令非常挑剔，在命令的末尾不能有任何空白或文本，如果在一行中有多个命令，要用分号分隔。以#开头的行为注释行，且不能跨行。", "打印奇数行或偶数行": "方法1：", "打印匹配字符串的下一行": "grep -A 1 SCC URFILE sed -n '/SCC/{n;p}' URFILE awk '/SCC/{getline; print}' URFILE", "class": "文件编辑"}
{"title": "pico命令", "语法": "pico(选项)(参数)", "选项": "-b：开启置换的功能； -d：开启删除的功能； -e：使用完整的文件名称； -f：支持键盘上F1、F2...功能键； -g：显示光标； -h：在线帮助； -j：开启切换的功能； -k：预设pico在使用剪下命令时，会把光标所在的列的内容全部删除； -m：开启鼠标支持的功能，您可用鼠标点选命令列表； -n<间隔秒数>：设置多久检查一次新邮件； -o<工作目录>：设置工作目录； -q：忽略预设值； -r<编辑页宽>：设置编辑文件的页宽； -s<拼字检查器>：另外指定拼字检查器； -t：启动工具模式； -v：启动阅读模式，用户只能观看，无法编辑文件的内容； -w：关闭自动换行，通过这个参数可以编辑内容很长的列； -x：关闭页面下方的命令列表； -z：让pico可被Ctrl+z中断，暂存在后台作业里； +<列表编号>：执行pico指令进入编辑模式时，从指定的列数开始编辑。", "参数": "文件：指定要编辑的文件。", "class": "文件编辑"}
{"title": "emacs命令", "语法": "emacs(选项)(参数)", "选项": "+<行号>：启动emacs编辑器，并将光标移动到制定行号的行； -q：启动emacs编辑器，而不加载初始化文件； -u<用户>：启动emacs编辑器时，加载指定用户的初始化文件； -t<文件>：启动emacs编辑器时，把指定的文件作为中端，不适用标准输入（stdin）与标准输出（stdout）； -f<函数>：执行指定lisp（广泛应用于人工智能领域的编程语言）函数； -l<lisp代码文件>：加载指定的lisp代码文件； -batch：以批处理模式运行emacs编辑器。", "参数": "文件：指定要编辑的文本文件。", "class": "文件编辑"}
{"title": "jed命令", "语法": "jed(选项)(参数)", "选项": "-2：显示上下两个编辑区； -batch：以批处理模式来执行； -f<函数>：执行Slang函数； -g<行数>：移到缓冲区中指定的行数； -i<文件>：将指定的文件载入缓冲区； -n：不要载入jed.rc配置文件； -s<字符串>：查找并移到指定的字符串。", "参数": "文件：指定待编辑的文件列表。", "实例": "以上下两个编辑区的方式，开启 mysource.c 原始代码文件。若要切换编辑区，可利用稍后介绍的命令，开启操作命令，开启功能表后，按 3 ，再按 2 ，即可切换编辑区：", "class": "文件编辑"}
{"title": "joe命令", "语法": "joe(选项)(参数)", "选项": "-force：强制在最后一行的结尾处加上换行符号； -lines<行数>：设置行数； -lightoff：选取的区块在执行完区块命令后，就会恢复成原来的状态； -autoindent：自动缩排； -backpath：<目录>：指定备份文件的目录； -beep：编辑时，若有错误即发出哔声； -columns<栏位>：设置栏数； -csmode：可执行连续查找模式； -dopadding：是程序跟tty间存在缓冲区； -exask：在程序中，执行“Ctrl+k+x”时，会先确认是否要保存文件； -force：强制在最后一行的结尾处加上换行符号； -help：执行程序时一并显示帮助； -keepup：在进入程序后，画面上方为状态列； -marking：在选取区块时，反白区块会随着光标移动； -mid：当光标移出画面时，即自动卷页，使光标回到中央； -nobackups：不建立备份文件； -nonotice：程序执行时，不显示版本信息； -nosta：程序执行时，不显示状态列； -noxon：尝试取消“Ctrl+s”和“Ctrl+q”键的功能； -orphan：若同时开启一个以上的文件，则其他文件会置于独立的缓冲区，而不会另外开启编辑区； -pg<行数>：按“PageUp”或“PageDown”换页时，所要保留前一页的行数； -skiptop<行数>：不使用屏幕上方指定的行数。", "参数": "文件：指定要编辑的文件。", "class": "文件编辑"}
{"title": "ed命令", "语法": "ed(选项)(参数)", "选项": "-G或——traditional：提供兼容的功能； -p<字符串>：指定ed在command mode的提示字符； -s，-，--quiet或——silent：不执行开启文件时的检查功能； --help：显示帮助； --version：显示版本信息。", "参数": "文件：待编辑的文件。", "class": "文件编辑"}
{"title": "ex命令", "语法": "ex（参数）", "参数": "文件：指定待编辑的文件。", "class": "文件编辑"}
{"title": "vi命令", "语法": "vi(选项)(参数)", "选项": "+<行号>：从指定行号的行开始先是文本内容； -b：以二进制模式打开文件，用于编辑二进制文件和可执行文件； -c<指令>：在完成对第一个文件编辑任务后，执行给出的指令； -d：以diff模式打开文件，当多个文件编辑时，显示文件差异部分； -l：使用lisp模式，打开“lisp”和“showmatch”； -m：取消写文件功能，重设“write”选项； -M：关闭修改功能； -n：不实用缓存功能； -o<文件数目>：指定同时打开指定数目的文件； -R：以只读方式打开文件； -s：安静模式，不现实指令的任何错误信息。", "参数": "文件列表：指定要编辑的文件列表。多个文件之间使用空格分隔开。", "class": "文件编辑"}
{"title": "dos2unix命令", "语法": "dos2unix [-hkqV] [-c convmode] [-o file ...] [-n infile outfile ...]", "选项": "-k：保持输出文件的日期不变 -q：安静模式，不提示任何警告信息。 -V：查看版本 -c：转换模式，模式有：ASCII, 7bit, ISO, Mac, 默认是：ASCII。 -o：写入到源文件 -n：写入到新文件", "参数": "参数：需要转换到文件。", "实例": "最简单的用法就是dos2unix直接跟上文件名：", "class": "文件权限属性设置"}
{"title": "setfacl命令", "选项": "-b,--remove-all：删除所有扩展的acl规则，基本的acl规则(所有者，群组，其他）将被保留。 -k,--remove-default：删除缺省的acl规则。如果没有缺省规则，将不提示。 -n，--no-mask：不要重新计算有效权限。setfacl默认会重新计算ACL mask，除非mask被明确的制定。 --mask：重新计算有效权限，即使ACL mask被明确指定。 -d，--default：设定默认的acl规则。 --restore=file：从文件恢复备份的acl规则（这些文件可由getfacl -R产生）。通过这种机制可以恢复整个目录树的acl规则。此参数不能和除--test以外的任何参数一同执行。 --test：测试模式，不会改变任何文件的acl规则，操作后的acl规格将被列出。 -R，--recursive：递归的对所有文件及目录进行操作。 -L，--logical：跟踪符号链接，默认情况下只跟踪符号链接文件，跳过符号链接目录。 -P，--physical：跳过所有符号链接，包括符号链接文件。 --version：输出setfacl的版本号并退出。 --help：输出帮助信息。 --：标识命令行参数结束，其后的所有参数都将被认为是文件名 -：如果文件名是-，则setfacl将从标准输入读取文件名。", "class": "文件权限属性设置"}
{"title": "umask命令", "语法": "umask(选项)(参数)", "选项": "-p：输出的权限掩码可直接作为指令来执行； -S：以符号方式输出权限掩码。", "参数": "权限掩码：指定权限掩码。", "实例": "利用umask命令可以指定哪些权限将在新文件的默认权限中被删除。例如，可以使用下面的命令创建掩码，使得组用户的写权限，其他用户的读、写和执行权限都被取消：", "class": "文件权限属性设置"}
{"title": "lsattr命令", "语法": "lsattr(选项)(参数)", "选项": "-E：可显示设备属性的当前值，但这个当前值是从用户设备数据库中获得的，而不是从设备直接获得的。 -D：显示属性的名称，属性的默认值，描述和用户是否可以修改属性值的标志。 -R：递归的操作方式； -V：显示指令的版本信息； -a：列出目录中的所有文件，包括隐藏文件。", "参数": "文件：指定显示文件系统属性的文件名。", "实例": "lsattr -E -l rmt0 -H lsattr -EO -l rmt0", "class": "文件权限属性设置"}
{"title": "chmod命令", "语法": "chmod(选项)(参数)", "选项": "-c或——changes：效果类似“-v”参数，但仅回报更改的部分； -f或--quiet或——silent：不显示错误信息； -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理； -v或——verbose：显示指令执行过程； --reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同； <权限范围>+<权限设置>：开启权限范围的文件或目录的该选项权限设置； <权限范围>-<权限设置>：关闭权限范围的文件或目录的该选项权限设置； <权限范围>=<权限设置>：指定权限范围的文件或目录的该选项权限设置；", "参数": "权限模式：指定文件的权限模式；\n文件：要改变权限的文件。", "知识扩展和实例": "Linux用 户分为：拥有者、组群(Group)、其他（other），Linux系统中，预设的情況下，系统中所有的帐号与一般身份使用者，以及root的相关信 息， 都是记录在/etc/passwd文件中。每个人的密码则是记录在/etc/shadow文件下。 此外，所有的组群名称记录在/etc/group內！", "class": "文件权限属性设置"}
{"title": "chown命令", "语法": "chown(选项)(参数)", "选项": "-c或——changes：效果类似“-v”参数，但仅回报更改的部分； -f或--quite或——silent：不显示错误信息； -h或--no-dereference：只对符号连接的文件作修改，而不更改其他任何相关文件； -R或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理； -v或——version：显示指令执行过程； --dereference：效果和“-h”参数相同； --help：在线帮助； --reference=<参考文件或目录>：把指定文件或目录的拥有者与所属群组全部设成和参考文件或目录的拥有者与所属群组相同； --version：显示版本信息。", "参数": "用户：组：指定所有者和所属工作组。当省略“：组”，仅改变文件所有者；\n文件：指定要改变所有者和工作组的文件列表。支持多个文件和目标，支持shell通配符。", "实例": "将目录/usr/meng及其下面的所有文件、子目录的文件主改成 liu：", "class": "文件权限属性设置"}
{"title": "chgrp命令", "语法": "chgrp(选项)(参数)", "选项": "-c或——changes：效果类似“-v”参数，但仅回报更改的部分； -f或--quiet或——silent：不显示错误信息； -h或--no-dereference：只对符号连接的文件作修改，而不是该其他任何相关文件； -R或——recursive：递归处理，将指令目录下的所有文件及子目录一并处理； -v或——verbose：显示指令执行过程； --reference=<参考文件或目录>：把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同；", "参数": "组：指定新工作名称；\n文件：指定要改变所属组的文件列表。多个文件或者目录之间使用空格隔开。", "实例": "将/usr/meng及其子目录下的所有文件的用户组改为mengxin", "class": "文件权限属性设置"}
{"title": "chattr命令", "语法": "chattr(选项)", "选项": "-R：递归处理，将指令目录下的所有文件及子目录一并处理； -v<版本编号>：设置文件或目录版本； -V：显示指令执行过程； +<属性>：开启文件或目录的该项属性； -<属性>：关闭文件或目录的该项属性； =<属性>：指定文件或目录的该项属性。", "实例": "用chattr命令防止系统中某个关键文件被修改：", "class": "文件权限属性设置"}
{"title": "stat命令", "语法": "stat(选项)(参数)", "选项": "-L：支持符号连接； -f：显示文件系统状态而非文件状态； -t：以简洁方式输出信息； --help：显示指令的帮助信息； --version：显示指令的版本信息。", "参数": "文件：指定要显示信息的普通文件或者文件系统对应的设备文件名。", "实例": "[root@localhost ~]# ls -l myfile -rw-r--r-- 1 root root 0 2010-10-09 myfile [root@localhost ~]# stat myfile file: “myfile” Size: 0 Blocks: 8 IO Block: 4096 一般空文件 Device: fd00h/64768d Inode: 194805815 Links: 1 Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root) Access: 2010-12-12 12:22:35.000000000 +0800 Modify: 2010-10-09 20:44:21.000000000 +0800 Change: 2010-10-09 20:44:21.000000000 +0800 [root@localhost ~]# stat -f myfile File: \"myfile\" id: 0 Namelen: 255 type: ext2/ext3 Block size: 4096 Fundamental block size: 4096 Blocks: Total: 241555461 free: 232910771 Available: 220442547 Inodes: Total: 249364480 Free: 249139691 [root@localhost ~]# stat -t myfile myfile 0 8 81a4 0 0 fd00 194805815 1 0 0 1292127755 1286628261 1286628261 4096", "class": "文件权限属性设置"}
{"title": "file命令", "语法": "file(选项)(参数)", "选项": "-b：列出辨识结果时，不显示文件名称； -c：详细显示指令执行过程，便于排错或分析程序执行的情形； -f<名称文件>：指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称； -L：直接显示符号连接所指向的文件类别； -m<魔法数字文件>：指定魔法数字文件； -v：显示版本信息； -z：尝试去解读压缩文件的内容。", "参数": "文件：要确定类型的文件列表，多个文件之间使用空格分开，可以使用shell通配符匹配多个文件。", "实例": "显示文件类型", "class": "文件权限属性设置"}
{"title": "egrep命令", "语法": "egrep(选项)(查找模式)(文件名1，文件名2，……)", "实例": "显示文件中符合条件的字符。例如，查找当前目录下所有文件中包含字符串\"Linux\"的文件，可以使用如下命令：", "class": "文件过滤分割与合并"}
{"title": "fgrep命令", "语法": "fgrep(选项)(参数)", "选项": "-b：在找到的每行之前添加行所在的块编号。使用此标志有助于按照上下文查找磁盘块号码。-b 标志不能用于标准输入或者管道输入。 -c：仅显示匹配行的计数。 -e 模式：指定模式。这个工作模式很简单，但当此模式以 a-(减号) 开头时却是很有用的。 -f StringFile：指定包含字符串的文件。 -h：当多个文件被处理时隐藏文件名。 -i：当进行比较时忽略字母的大小写。 -l：只列出包含匹配行的文件名（一次）。文件名之间用换行符分隔。 n：将文件中每行的相对行号置于行前。 -pSeparator：显示包含匹配行的整个段落。段落之间将按照Separator参数指定的段落分隔符加以分隔，这些分隔符是与搜索模式有着相同格式的模式。包含段落分隔符的行将仅用作分隔符；它们不会被包含在输出中。缺省的段落分隔符是空白行。 -q：禁止所有写入到标准输出的操作，不管是否为匹配行。如果选中输入行，以 0 状态退出。 -s：仅显示出错消息。这在检查状态时很有用。 -v：显示除了匹配特定模式的行以外的所有行。 -w：执行单词搜索。 -x：显示匹配模式的行，要求无额外的字符。 -y：当进行比较时忽略字符的大小写。", "实例": "搜索几个文件中的一个简单字符串：", "class": "文件过滤分割与合并"}
{"title": "split命令", "选项": "-b：值为每一输出档案的大小，单位为 byte。 -C：每一输出档中，单行的最大 byte 数。 -d：使用数字作为后缀。 -l：值为每一输出档的列数大小。", "实例": "生成一个大小为100KB的测试文件：", "class": "文件过滤分割与合并"}
{"title": "grep命令", "选项": "-a 不要忽略二进制数据。 -A<显示列数> 除了显示符合范本样式的那一行之外，并显示该行之后的内容。 -b 在显示符合范本样式的那一行之外，并显示该行之前的内容。 -c 计算符合范本样式的列数。 -C<显示列数>或-<显示列数> 除了显示符合范本样式的那一列之外，并显示该列之前后的内容。 -d<进行动作> 当指定要查找的是目录而非文件时，必须使用这项参数，否则grep命令将回报信息并停止动作。 -e<范本样式> 指定字符串作为查找文件内容的范本样式。 -E 将范本样式为延伸的普通表示法来使用，意味着使用能使用扩展正则表达式。 -f<范本文件> 指定范本文件，其内容有一个或多个范本样式，让grep查找符合范本条件的文件内容，格式为每一列的范本样式。 -F 将范本样式视为固定字符串的列表。 -G 将范本样式视为普通的表示法来使用。 -h 在显示符合范本样式的那一列之前，不标示该列所属的文件名称。 -H 在显示符合范本样式的那一列之前，标示该列的文件名称。 -i 忽略字符大小写的差别。 -l 列出文件内容符合指定的范本样式的文件名称。 -L 列出文件内容不符合指定的范本样式的文件名称。 -n 在显示符合范本样式的那一列之前，标示出该列的编号。 -q 不显示任何信息。 -R/-r 此参数的效果和指定“-d recurse”参数相同。 -s 不显示错误信息。 -v 反转查找。 -w 只显示全字符合的列。 -x 只显示全列符合的列。 -y 此参数效果跟“-i”相同。 -o 只输出文件中匹配到的部分。", "grep递归搜索文件": "在多级目录中对文本进行递归搜索：", "class": "文件过滤分割与合并"}
{"title": "comm命令", "语法": "comm(选项)(参数)", "选项": "-1：不显示在第一个文件出现的内容； -2：不显示在第二个文件中出现的内容； -3：不显示同时在两个文件中都出现的内容。", "参数": "文件1：指定要比较的第一个有序文件；\n文件2：指定要比较的第二个有序文件。", "实例": "[root@localhost text]# cat aaa.txt aaa bbb ccc ddd eee 111 222", "class": "文件过滤分割与合并"}
{"title": "printf命令", "语法": "printf(选项)(参数) --help：在线帮助； --version：显示版本信息。", "参数": "输出格式：指定数据输出时的格式；\n输出字符串：指定要输出的数据。", "实例": "printf \"hello world\"", "class": "文件过滤分割与合并"}
{"title": "expand命令", "语法": "expand(选项)(参数)", "选项": "-t<数字>：指定制表符所代表的空白字符的个数，而不使用默认的8。", "参数": "文件：指定要转换制表符为空白的文件。", "class": "文件过滤分割与合并"}
{"title": "spell命令", "语法": "spell(参数)", "参数": "文件：指定需要进行拼写检查的文件。", "class": "文件过滤分割与合并"}
{"title": "pr命令", "语法": "pr(选项)(参数)", "选项": "-h<标题>：为页指定标题； -l<行数>：指定每页的行数。", "参数": "文件：需要转换格式的文件。", "class": "文件过滤分割与合并"}
{"title": "look命令", "语法": "look(选项)(参数)", "选项": "-a：使用另一个字典文件web2，该文件也位于/usr/dict目录下； -d：只对比英文字母和数字，其余一概忽略不予比对； -f：忽略字符大小写差别； -t<字尾字符串>：设置字尾字符串。", "参数": "字符串：指定要查找的字符串；\n文件：指定要查找的目标文件。", "class": "文件过滤分割与合并"}
{"title": "tac命令", "语法": "tac(选项)(参数)", "选项": "-a或——append：将内容追加到文件的末尾； -i或——ignore-interrupts：忽略中断信号。", "参数": "文件列表：指定要保存内容的文件列表。", "class": "文件过滤分割与合并"}
{"title": "wc命令", "语法": "wc(选项)(参数)", "选项": "-c或--bytes或——chars：只显示Bytes数； -l或——lines：只显示列数； -w或——words：只显示字数。", "参数": "文件：需要统计的文件列表。", "class": "文件过滤分割与合并"}
{"title": "fmt命令", "语法": "fmt(选项)(参数)", "选项": "-c或--crown-margin：每段前两列缩排； -p<列起始字符串>或-prefix=<列起始字符串>：仅合并含有指定字符串的列，通常运用在程序语言的注解方面； -s或--split-only：只拆开字数超出每列字符数的列，但不合并字数不足每列字符数的列； -t或--tagged-paragraph：每列前两列缩排，但第1列和第2列的缩排格式不同； -u或--uniform-spacing：每列字符之间都以一个空格字符间隔，每个句子之间则两个空格字符分隔； -w<每列字符数>或--width=<每列字符数>或-<每列字符数>：设置每列的最大字符数。", "参数": "指定要优化格式的文件。", "class": "文件过滤分割与合并"}
{"title": "rev命令", "语法": "rev(参数)", "参数": "文件：指定要反序显示内容的文件。", "实例": "[root@localhost ~]# cat iptables.bak # Generated by iptables-save v1.3.5 on Thu Dec 26 21:25:15 2013 *filter :INPUT DROP [48113:2690676] :FORWARD accept [0:0] :OUTPUT ACCEPT [3381959:1818595115] -A INPUT -i lo -j ACCEPT -A INPUT -p tcp -m tcp --dport 22 -j ACCEPT -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A OUTPUT -o lo -j ACCEPT COMMIT # Completed on Thu Dec 26 21:25:15 2013 [root@localhost ~]# rev iptables.bak 3102 51:52:12 62 ceD uhT no 5.3.1v evas-selbatpi yb detareneG # retlif* ]6760962:31184[ PORD TUPNI: ]0:0[ TPECCA DRAWROF: ]5115958181:9591833[ TPECCA TUPTUO: TPECCA j- ol i- TUPNI A- TPECCA j- 22 tropd-- pct m- pct p- TUPNI A- TPECCA j- 08 tropd-- pct m- pct p- TUPNI A- TPECCA j- DEHSILBATSE,DETALER etats-- etats m- TUPNI A- TPECCA j- pmci p- TUPNI A- TPECCA j- ol o- TUPTUO A- TIMMOC 3102 51:52:12 62 ceD uhT no detelpmoC #", "class": "文件过滤分割与合并"}
{"title": "diffstat命令", "语法": "diffstat(选项)(参数)", "选项": "-n<文件名长度>：指定文件名长度，指定的长度必须大于或等于所有文件中最长的文件名； -p<文件名长度>：与-n参数相同，但此处的<文件名长度>包括了文件的路径； -w：指定要输出时栏位的宽度； -v：显示版本信息。", "参数": "文件：指定保存有diff命令的输出信息文件。", "实例": "将目录\"test1\"和\"test2\"下的同名文件\"testf.txt\"使用diff命令进行比较。然后使用diffstat命令对结果进行统计显示，输入如下命令：", "class": "文件过滤分割与合并"}
{"title": "ispell命令", "语法": "ispell(参数)", "参数": "文件：指定要进行拼写检查的文件。", "class": "文件过滤分割与合并"}
{"title": "uniq命令", "语法": "uniq(选项)(参数)", "选项": "-c或——count：在每列旁边显示该行重复出现的次数； -d或--repeated：仅显示重复出现的行列； -f<栏位>或--skip-fields=<栏位>：忽略比较指定的栏位； -s<字符位置>或--skip-chars=<字符位置>：忽略比较指定的字符； -u或——unique：仅显示出一次的行列； -w<字符位置>或--check-chars=<字符位置>：指定要比较的字符。", "参数": "输入文件：指定要去除的重复行文件。如果不指定此项，则从标准读取数据；\n输出文件：指定要去除重复行后的内容要写入的输出文件。如果不指定此选项，则将内容显示到标准输出设备（显示终端）。", "实例": "删除重复行：", "class": "文件过滤分割与合并"}
{"title": "tee命令", "语法": "tee(选项)(参数)", "选项": "-a：向文件中重定向时使用追加模式； -i：忽略中断（interrupt）信号。", "参数": "文件：指定输出重定向的文件。", "class": "文件过滤分割与合并"}
{"title": "paste命令", "语法": "paste(选项)(参数)", "选项": "-d<间隔字符>或--delimiters=<间隔字符>：用指定的间隔字符取代跳格字符； -s或——serial串列进行而非平行处理。", "参数": "文件列表：指定需要合并的文件列表。", "class": "文件过滤分割与合并"}
{"title": "sort命令", "语法": "sort(选项)(参数)", "选项": "-b：忽略每行前面开始出的空格字符； -c：检查文件是否已经按照顺序排序； -d：排序时，处理英文字母、数字及空格字符外，忽略其他的字符； -f：排序时，将小写字母视为大写字母； -i：排序时，除了040至176之间的ASCII字符外，忽略其他的字符； -m：将几个排序号的文件进行合并； -M：将前面3个字母依照月份的缩写进行排序； -n：依照数值的大小排序； -o<输出文件>：将排序后的结果存入制定的文件； -r：以相反的顺序来排序； -t<分隔字符>：指定排序时所用的栏位分隔字符； +<起始栏位>-<结束栏位>：以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。", "参数": "文件：指定待排序的文件列表。", "实例": "sort将文件/文本的每一行作为一个单位，相互比较，比较原则是从首字符向后，依次按ASCII码值进行比较，最后将他们按升序输出。", "class": "文件过滤分割与合并"}
{"title": "unexpand命令", "语法": "unexpand(选项)(参数)", "选项": "-a或--all：转换文件中所有的空白字符； --first-only：仅转换开头的空白字符； -t<N>：指定TAB所代表的N个（N为整数）字符数，默认N值是8。", "参数": "文件：指定要转换空白为TAB的文件列表。", "class": "文件过滤分割与合并"}
{"title": "csplit命令", "语法": "csplit(选项)(参数)", "选项": "-b<输出格式>或--suffix-format=<输出格式>：预设的输出格式其文件名称为xx00，xx01等，用户可以通过改变<输出格式>来改变输出的文件名； -f<输出字首字符串>或--prefix=<输出字首字符串>：预设的输出字首字符串其文件名为xx00，xx01等，如果制定输出字首字符串为“hello”，则输出的文件名称会变成hello00，hello、01...... -k或--keep-files：保留文件，就算发生错误或中断执行，与不能删除已经输出保存的文件； -n<输出文件名位数>或--digits=<输出文件名位数>：预设的输出文件名位数其文件名称为xx00，xx01......如果用户指定输出文件名位数为“3”，则输出的文件名称会变成xx000，xx001等； -q或-s或--quiet或——silent：不显示指令执行过程； -z或--elide-empty-files：删除长度为0 Byte文件。", "参数": "文件：指定要分割的原文件；\n模式：指定要分割文件时的匹配模式。", "实例": "示例测试文件 server.log", "class": "文件过滤分割与合并"}
{"title": "fold命令", "语法": "fold(选项)(参数)", "选项": "-b或——bytes：以Byte为单位计算列宽，而非采用行数编号为单位； -s或——spaces：以空格字符作为换列点； -w<每列行数>或--width<每列行数>：设置每列的最大行数。", "参数": "文件：指定要显示内容的文件。", "class": "文件过滤分割与合并"}
{"title": "join命令", "语法": "join(选项)(参数)", "选项": "-a<1或2>：除了显示原来的输出内容之外，还显示指令文件中没有相同栏位的行； -e<字符串>：若[文件1]与[文件2]中找不到指定的栏位，则在输出中填入选项中的字符串； -i或--ignore-case：比较栏位内容时，忽略大小写的差异； -o<格式>：按照指定的格式来显示结果； -t<字符>：使用栏位的分割字符； -v<1或2>：更-a相同，但是只显示文件中没有相同栏位的行； -1<栏位>：连接[文件1]指定的栏位； -2<栏位>：连接[文件2]指定的栏位。", "参数": "文件1：要进行合并操作的第1个文件参数；\n文件2：要进行合并操作的第2个文件参数。", "class": "文件过滤分割与合并"}
{"title": "col命令", "语法": "col(选项)", "选项": "-b：过滤掉所有的控制字符，包括RLF和HRLF； -f：滤掉RLF字符，但允许将HRLF字符呈现出来； -x：以多个空格字符来表示跳格字符； -l<缓冲区列数>：预设的内存缓冲区有128列，用户可以自行指定缓冲区的大小。", "class": "文件过滤分割与合并"}
{"title": "tr命令", "语法": "tr(选项)(参数)", "选项": "-c或——complerment：取代所有不属于第一字符集的字符； -d或——delete：删除所有属于第一字符集的字符； -s或--squeeze-repeats：把连续重复的字符以单独一个字符表示； -t或--truncate-set1：先删除第一字符集较第二字符集多出的字符。", "参数": "字符集1：指定要转换或删除的原字符集。当执行转换操作时，必须使用参数“字符集2”指定转换的目标字符集。但执行删除操作时，不需要参数“字符集2”；\n字符集2：指定要转换成的目标字符集。", "实例": "将输入字符由大写转换为小写：", "class": "文件过滤分割与合并"}
{"title": "colrm命令", "语法": "colrm(参数)", "参数": "起始列号：指定要删除的指定列；\n结尾列号：指定要删除的结尾列。", "class": "文件过滤分割与合并"}
{"title": "lha命令", "选项": "-a或a：压缩文件，并加入到压缩文件内。 -a<0/1/2>/u</0/1/2> 压缩文件时，采用不同的文件头。 -c或c：压缩文件，重新建构新的压缩文件后，再将其加入。 -d或d：从压缩文件内删除指定的文件。 -<a/c/u>d或<a/c/u>d：压缩文件，然后将其加入，重新建构，更新压缩文件或，删除原始文件，也就是把文件移到压缩文件中。 -e或e：解开压缩文件。 -f或f：强制执行lha命令，在解压时会直接覆盖已有的文件而不加以询问。 -g或g：使用通用的压缩格式，便于解决兼容性的问题。 -<e/x>i或<e/x>i：解开压缩文件时，忽略保存在压缩文件内的文件路径，直接将其解压后存放在现行目录下或是指定的目录中。 -l或l：列出压缩文件的相关信息。 -m或m：此选项的效果和同时指定\"-ad\"选项相同。 -n或n：不执行指令，仅列出实际执行会进行的动作。 -<a/u>o或<a/u>o：采用lharc兼容格式，将压缩后的文件加入，更新压缩文件。 -p或p：从压缩文件内输出到标准输出设备。 -q或q：不显示指令执行过程。 -t或t：检查备份文件内的每个文件是否正确无误。 -u或u：更换较新的文件到压缩文件内。 -u</0/1/2>或u</0/1/2>：在文件压缩时采用不同的文件头，然后更新到压缩文件内。 -v或v：详细列出压缩文件的相关信息。 -<e/x>w=<目的目录>或<e/x>w=<目的目录>：指定解压缩的目录。 -x或x：解开压缩文件。 -<a/u>z或<a/u>z：不压缩文件，直接把它加入，更新压缩文件。", "实例": "lha -a abc.lhz a.b #压缩a.b文件，压缩后生成 abc.lhz 文件 lha -a abc2 /home/hnlinux #压缩目录 lha -xiw=agis abc #解压文件abc，到当前目录", "class": "文件压缩与解压"}
{"title": "bzcmp命令", "语法": "bzcmp(参数)", "参数": "文件1：指定要比较的第一个.bz2压缩包；\n文件2：指定要比较的第二个.bz2压缩包。", "class": "文件压缩与解压"}
{"title": "bzcat命令", "语法": "bzcat(参数)", "参数": ".bz2压缩文件：指定要显示内容的.bz2压缩文件。", "实例": "将/tmp/man.config以bzip2格式压缩：", "class": "文件压缩与解压"}
{"title": "unarj命令", "语法": "unarj(选项)(参数)", "选项": "e：解压缩.arj文件； l：显示压缩文件内所包含的文件； t：检查压缩文件是否正确； x：解压缩时保留原有的路径。", "参数": ".arj压缩包：指定要解压缩的.arj压缩包。", "class": "文件压缩与解压"}
{"title": "zcat命令", "语法": "zcat(选项)(参数)", "选项": "-S：指定gzip格式的压缩包的后缀。当后缀不是标准压缩包后缀时使用此选项； -c：将文件内容写到标注输出； -d：执行解压缩操作； -l：显示压缩包中文件的列表； -L：显示软件许可信息； -q：禁用警告信息； -r：在目录上执行递归操作； -t：测试压缩文件的完整性； -V：显示指令的版本信息； -l：更快的压缩速度； -9：更高的压缩比。", "参数": "文件：指定要显示其中文件内容的压缩包。", "class": "文件压缩与解压"}
{"title": "znew命令", "语法": "znew(选项)(参数)", "选项": "-f：强制执行转换操作，即是目标“.gz”已经存在； -t：删除原文件前测试新文件； -v：显示文件名和每个文件的压缩比； -9：食用油花的压缩比，速度较慢； -P：使用管道完成转换操作，以降低磁盘空间使用； -K：当“.Z”文件比“.gz”文件小时，保留“.Z”文件。", "参数": "文件：指定compress指令压缩生成的“.Z”压缩包。", "class": "文件压缩与解压"}
{"title": "zipsplit命令", "语法": "zipsplit(选项)(参数)", "选项": "-n：指定分割后每个zip文件的大小； -t：报告将要产生的较小的zip文件的大小； -b：指定分割后的zip文件的存放位置。", "参数": "文件：指定要分割的zip压缩包。", "class": "文件压缩与解压"}
{"title": "arj命令", "语法": "arj(参数)", "参数": "操作指令：对“.arj”压缩包执行的操作指令；\n压缩包名称：指定要操作的arj压缩包名称。", "class": "文件压缩与解压"}
{"title": "gzexe命令", "语法": "gzexe(选项)(参数)", "选项": "-d：解压缩被gzexe压缩过的可执行文件。", "参数": "文件：指定需要压缩的可执行文件。", "class": "文件压缩与解压"}
{"title": "bzgrep命令", "语法": "bzgrep(参数)", "参数": "搜索模式：指定要搜索的模式；\n.bz2文件：指定要搜索的.bz2压缩包。", "class": "文件压缩与解压"}
{"title": "compress命令", "语法": "compress(选项)(参数)", "选项": "-f：不提示用户，强制覆盖掉目标文件； -c：将结果送到标准输出，无文件被改变； -r：递归的操作方式； -b<压缩效率>：压缩效率是一个介于9~16的数值，预设值为\"16\"，指定愈大的数值，压缩效率就愈高； -d：对文件进行解压缩而非压缩； -v：显示指令执行过程； -V：显示指令版本及程序预设值。", "参数": "文件：指定要压缩的文件列表。", "实例": "将/etc/man.config复到/tmp ，并加以压缩", "class": "文件压缩与解压"}
{"title": "zfore命令", "语法": "zfore(参数)", "参数": "文件列表：指定要添加“.gz”后缀的gzip压缩文件。", "class": "文件压缩与解压"}
{"title": "bzless命令", "语法": "bzless(参数)", "参数": "文件：指定要分屏显示的.bz2压缩包。", "class": "文件压缩与解压"}
{"title": "bzmore命令", "语法": "bzmore(参数)", "参数": "文件：指定要分屏显示的.bz2压缩包。", "class": "文件压缩与解压"}
{"title": "zipinfo命令", "语法": "zipinfo(选项)(参数)", "选项": "-1：只列出文件名称； -2：此参数的效果和指定“-1”参数类似，但可搭配“-h”，“-t”和“-z”参数使用； -h：只列出压缩文件的文件名称； -l：此参数的效果和指定“-m”参数类似，但会列出原始文件的大小而非每个文件的压缩率； -m：此参数的效果和指定“-s”参数类似，但多会列出每个文件的压缩率； -M：若信息内容超过一个画面，则采用类似more指令的方式列出信息； -s：用类似执行“ls-l”指令的效果列出压缩文件内容； -t：只列出压缩文件内所包含的文件数目，压缩前后的文件大小及压缩率； -T：将压缩文件内每个文件的日期时间用年，月，日，时，分，秒的顺序列出； -v：详细显示压缩文件内每一个文件的信息； -x<范本样式>：不列出符合条件的文件的信息； -z：如果压缩文件内含有注释，就将注释显示出来。", "参数": "文件：指定zip格式的压缩包。", "class": "文件压缩与解压"}
{"title": "unzip命令", "语法": "unzip(选项)(参数)", "选项": "-c：将解压缩的结果显示到屏幕上，并对字符做适当的转换； -f：更新现有的文件； -l：显示压缩文件内所包含的文件； -p：与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换； -t：检查压缩文件是否正确； -u：与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其他文件解压缩到目录中； -v：执行时显示详细的信息； -z：仅显示压缩文件的备注文字； -a：对文本文件进行必要的字符转换； -b：不要对文本文件进行字符转换； -C：压缩文件中的文件名称区分大小写； -j：不处理压缩文件中原有的目录路径； -L：将压缩文件中的全部文件名改为小写； -M：将输出结果送到more程序处理； -n：解压缩时不要覆盖原有的文件； -o：不必先询问用户，unzip执行后覆盖原有的文件； -P<密码>：使用zip的密码选项； -q：执行时不显示任何信息； -s：将文件名中的空白字符转换为底线字符； -V：保留VMS的文件版本信息； -X：解压缩时同时回存文件原来的UID/GID； -d<目录>：指定文件解压缩后所要存储的目录； -x<文件>：指定不要处理.zip压缩文件中的哪些文件； -Z：unzip-Z等于执行zipinfo指令。", "参数": "压缩包：指定要解压的“.zip”压缩包。", "实例": "将压缩文件text.zip在当前目录下解压缩。", "class": "文件压缩与解压"}
{"title": "bzip2recover命令", "语法": "bzip2recover(参数)", "参数": "文件：指定要恢复数据的.bz2压缩包。", "class": "文件压缩与解压"}
{"title": "tar命令", "语法": "tar(选项)(参数)", "选项": "-A或--catenate：新增文件到以存在的备份文件； -B：设置区块大小； -c或--create：建立新的备份文件； -C <目录>：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。 -d：记录文件的差别； -x或--extract或--get：从备份文件中还原文件； -t或--list：列出备份文件的内容； -z或--gzip或--ungzip：通过gzip指令处理备份文件； -Z或--compress或--uncompress：通过compress指令处理备份文件； -f<备份文件>或--file=<备份文件>：指定备份文件； -v或--verbose：显示指令执行过程； -r：添加文件到已经压缩的文件； -u：添加改变了和现有的文件到已经存在的压缩文件； -j：支持bzip2解压文件； -v：显示操作过程； -l：文件系统边界设置； -k：保留原有文件不覆盖； -m：保留文件不被覆盖； -w：确认压缩文件的正确性； -p或--same-permissions：用原来的文件权限还原文件； -P或--absolute-names：文件名使用绝对名称，不移除文件名称前的“/”号； -N <日期格式> 或 --newer=<日期时间>：只将较指定日期更新的文件保存到备份文件里； --exclude=<范本样式>：排除符合范本样式的文件。", "参数": "文件或目录：指定要打包的文件或目录列表。", "实例": "将文件全部打包成tar包：", "class": "文件压缩与解压"}
{"title": "bunzip2命令", "语法": "bunzip2(选项)(参数)", "选项": "-f或--force：解压缩时，若输出的文件与现有文件同名时，预设不会覆盖现有的文件； -k或——keep：在解压缩后，预设会删除原来的压缩文件。若要保留压缩文件，请使用此参数； -s或——small：降低程序执行时，内存的使用量； -v或——verbose：解压缩文件时，显示详细的信息； -l，--license，-V或——version：显示版本信息。", "参数": ".bz2压缩包：指定需要解压缩的.bz2压缩包。", "实例": "将/opt目录下的etc.zip、var.zip和backup.zip进行压缩，设置压缩率为最高，同时在压缩完毕后不删除原始文件，显示压缩过程的详细信息。", "class": "文件压缩与解压"}
{"title": "gunzip命令", "语法": "gunzip(选项)(参数)", "选项": "-a或——ascii：使用ASCII文字模式； -c或--stdout或--to-stdout：把解压后的文件输出到标准输出设备； -f或-force：强行解开压缩文件，不理会文件名称或硬连接是否存在以及该文件是否为符号连接； -h或——help：在线帮助； -l或——list：列出压缩文件的相关信息； -L或——license：显示版本与版权信息； -n或--no-name：解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其忽略不予处理； -N或——name：解压缩时，若压缩文件内含有原来的文件名称及时间戳记，则将其回存到解开的文件上； -q或——quiet：不显示警告信息； -r或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理； -S或<压缩字尾字符串>或----suffix<压缩字尾字符串>：更改压缩字尾字符串； -t或——test：测试压缩文件是否正确无误； -v或——verbose：显示指令执行过程； -V或——version：显示版本信息；", "参数": "文件列表：指定要解压缩的压缩包。", "实例": "首先将/etc目录下的所有文件以及子目录进行压缩，备份压缩包etc.zip到/opt目录，然后对etc.zip文件进行gzip压缩，设置gzip的压缩级别为9。", "class": "文件压缩与解压"}
{"title": "bzdiff命令", "语法": "bzdiff(参数)", "参数": "文件1：指定要比较的第一个.bz2压缩包；\n文件2：指定要比较的第二个.bz2压缩包。", "class": "文件压缩与解压"}
{"title": "zip命令", "语法": "zip(选项)(参数)", "选项": "-A：调整可执行的自动解压缩文件； -b<工作目录>：指定暂时存放文件的目录； -c：替每个被压缩的文件加上注释； -d：从压缩文件内删除指定的文件； -D：压缩文件内不建立目录名称； -f：此参数的效果和指定“-u”参数类似，但不仅更新既有文件，如果某些文件原本不存在于压缩文件内，使用本参数会一并将其加入压缩文件中； -F：尝试修复已损坏的压缩文件； -g：将文件压缩后附加在已有的压缩文件之后，而非另行建立新的压缩文件； -h：在线帮助； -i<范本样式>：只压缩符合条件的文件； -j：只保存文件名称及其内容，而不存放任何目录名称； -J：删除压缩文件前面不必要的数据； -k：使用MS-DOS兼容格式的文件名称； -l：压缩文件时，把LF字符置换成LF+CR字符； -ll：压缩文件时，把LF+cp字符置换成LF字符； -L：显示版权信息； -m：将文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中； -n<字尾字符串>：不压缩具有特定字尾字符串的文件； -o：以压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同； -q：不显示指令执行过程； -r：递归处理，将指定目录下的所有文件和子目录一并处理； -S：包含系统和隐藏文件； -t<日期时间>：把压缩文件的日期设成指定的日期； -T：检查备份文件内的每个文件是否正确无误； -u：更换较新的文件到压缩文件内； -v：显示指令执行过程或显示版本信息； -V：保存VMS操作系统的文件属性； -w：在文件名称里假如版本编号，本参数仅在VMS操作系统下有效； -x<范本样式>：压缩时排除符合条件的文件； -X：不保存额外的文件属性； -y：直接保存符号连接，而非该链接所指向的文件，本参数仅在UNIX之类的系统下有效； -z：替压缩文件加上注释； -$：保存第一个被压缩文件所在磁盘的卷册名称； -<压缩效率>：压缩效率是一个介于1~9的数值。", "参数": "zip压缩包：指定要创建的zip压缩包；\n文件列表：指定要压缩的文件列表。", "实例": "将/home/Blinux/html/这个目录下所有文件和文件夹打包为当前目录下的html.zip：", "class": "文件压缩与解压"}
{"title": "bzip2命令", "语法": "bzip2(选项)(参数)", "选项": "-c或——stdout：将压缩与解压缩的结果送到标准输出； -d或——decompress：执行解压缩； -f或-force：bzip2在压缩或解压缩时，若输出文件与现有文件同名，预设不会覆盖现有文件。若要覆盖。请使用此参数； -h或——help：在线帮助； -k或——keep：bzip2在压缩或解压缩后，会删除原始文件。若要保留原始文件，请使用此参数； -s或——small：降低程序执行时内存的使用量； -t或——test：测试.bz2压缩文件的完整性； -v或——verbose：压缩或解压缩文件时，显示详细的信息； -z或——compress：强制执行压缩； -V或——version：显示版本信息； --repetitive-best：若文件中有重复出现的资料时，可利用此参数提高压缩效果； --repetitive-fast：若文件中有重复出现的资料时，可利用此参数加快执行效果。", "参数": "文件：指定要压缩的文件。", "实例": "压缩指定文件filename:", "class": "文件压缩与解压"}
{"title": "gzip命令", "语法": "gzip(选项)(参数)", "选项": "-a或——ascii：使用ASCII文字模式； -d或--decompress或----uncompress：解开压缩文件； -f或——force：强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接； -h或——help：在线帮助； -l或——list：列出压缩文件的相关信息； -L或——license：显示版本与版权信息； -n或--no-name：压缩文件时，不保存原来的文件名称及时间戳记； -N或——name：压缩文件时，保存原来的文件名称及时间戳记； -q或——quiet：不显示警告信息； -r或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理； -S或<压缩字尾字符串>或----suffix<压缩字尾字符串>：更改压缩字尾字符串； -t或——test：测试压缩文件是否正确无误； -v或——verbose：显示指令执行过程； -V或——version：显示版本信息； -<压缩效率>：压缩效率是一个介于1~9的数值，预设值为“6”，指定愈大的数值，压缩效率就会愈高； --best：此参数的效果和指定“-9”参数相同； --fast：此参数的效果和指定“-1”参数相同。", "参数": "文件列表：指定要压缩的文件列表。", "实例": "把test6目录下的每个文件压缩成.gz文件", "class": "文件压缩与解压"}
{"title": "uncompress命令", "语法": "uncompress(选项)(参数)", "选项": "-f：不提示用户，强制覆盖掉目标文件； -c：将结果送到标准输出，无文件被改变； -r：递归的操作方式。", "参数": "文件：指定要压缩的“.Z”压缩包。", "实例": "先创建一个.Z压缩文件", "class": "文件压缩与解压"}
{"title": "cpio命令", "语法": "cpio(选项)", "选项": "-0或--null：接受新增列控制字符，通常配合find指令的“-print0”参数使用； -a或--rest-access-time：重新设置文件的存取时间； -A或--append：附加到已存在的备份文档中，且这个备份文档必须存放在磁盘上，而不能放置于磁带机里； -b或--awap：此参数的效果和同时指定“-ss”参数相同； -B：将输入/输出的区块大小改成5210Bytes； -c：使用旧ASCII备份格式； -C<区块大小>或--io-size=<区块大小>：设置输入/输出的区块大小，单位是Byte； -d或--make-directories：如有需要cpio会自行建立目录； -E<范本文件>或--pattern-file=<范本文件>：指定范本文件，其内含有一个或多个范本样式，让cpio解开符合范本条件的文件，格式为每列一个范本样式； -f或--nonmatching：让cpio解开所有不符合范本条件的文件； -F<备份档>或--file=<备份档>：指定备份档的名称，用来取代标准输入或输出，也能借此通过网络使用另一台主机的保存设备存取备份档； -H<备份格式>：指定备份时欲使用的文件格式； -i或--extract：执行copy-in模式，还原备份档； -l<备份档>：指定备份档的名称，用来取代标准输入，也能借此通过网络使用另一台主机的保存设备读取备份档； -k：此参数将忽略不予处理，仅负责解决cpio不同版本间的兼容性问题； -l或--link：以硬连接的方式取代复制文件，可在copy-pass模式下运用； -L或--dereference：不建立符号连接，直接复制该连接所指向的原始文件； -m或preserve-modification-time：不去更改文件的更改时间； -M<回传信息>或--message=<回传信息>：设置更换保存媒体的信息； -n或--numeric-uid-gid：使用“-tv”参数列出备份档的内容时，若再加上参数“-n”，则会以用户识别和群组识别码替代拥有者和群组名称列出文件清单； -o或--create：执行copy-out模式，建立备份档； -O<备份档>：指定备份档的名称，用来取代标准输出，也能借此通过网络使用另一台主机的保存设备存放备份档； -p或--pass-through：执行copy-pass模式，略过备份步骤，直接将文件复制到目的目录； -r或--rename：当有文件名称需要更改时，采用互动模式； -R<拥有者><:/.><所属群组>或----owner<拥有者><:/.><所属群组> 在copy-in模式还原备份档，或copy-pass模式复制文件时，可指定这些备份，复制的文件的拥有者与所属群组； -s或--swap-bytes：交换每队字节的内容； -S或--swap-halfwords：交换每半个字节的内容； -t或--list：将输入的内容呈现出来； -u或--unconditional：置换所有文件，不论日期时间的新旧与否，皆不予询问而直接覆盖； -v或--verbose：详细显示指令的执行过程； -V或--dot：执行指令时。在每个文件的执行程序前面加上“.”号； --block-size=<区块大小>：设置输入/输出的区块大小，假如设置数值为5，则区块大小为2500，若设置成10，则区块大小为5120，以此类推； --force-local：强制将备份档存放在本地主机； --help：在线帮助； --no-absolute-filenames：使用相对路径建立文件名称； --no-preserve-owner：不保留文件的拥有者，谁解开了备份档，那些文件就归谁所有； -only-verify-crc：当备份档采用CRC备份格式时，可使用这项参数检查备份档内的每个文件是否正确无误； --quiet：不显示复制了多少区块； --sparse：倘若一个文件内含有大量的连续0字节，则将此文件存在稀疏文件； --version：显示版本信息。", "实例": "将/etc下的所有普通文件都备份到/opt/etc.cpio，使用以下命令：", "class": "文件备份和恢复"}
{"title": "restore命令", "语法": "restore(选项)", "选项": "-b<区块大小>：设置区块大小，单位为Byte； -c：不检查倾倒操作的备份格式，仅准许读取使用旧格式的备份文件； -C：使用对比模式，将备份的文件与现行的文件相互对比； -D<文件系统>：允许用户指定文件系统的名称； -f<备份文件>：从指定的文件中读取备份数据，进行还原操作； -h：仅解除目录而不包括与该目录相关的所有文件； -i：使用互动模式，在进行还原操作时，restore指令将依序询问用户； -m：解开符合指定的inode编号的文件或目录而非用文件名称指定； -r：进行还原操作； -R：全面还原文件系统时，检查应从何处开始进行； -s<文件编号>：当备份数据超过一卷磁带时，用户可以指定备份文件的编号； -t：指定文件名称，若该文件已存在备份文件中，则列出它们的名称； -v：显示指令执行过程； -x：设置文件名称，且从指定的存储媒体里读入它们，若该文件已存在在备份文件中，则将其还原到文件系统内； -y：不询问任何问题，一律以同意回答并继续执行指令。", "实例": "dump -9 -u -f /dev/hda3 /home/frank/", "class": "文件备份和恢复"}
{"title": "dump命令", "语法": "dump(选项)(参数)", "选项": "-0123456789：备份的层级； -b<区块大小>：指定区块的大小，单位为KB； -B<区块数目>：指定备份卷册的区块数目； -c：修改备份磁带预设的密度与容量； -d<密度>：设置磁带的密度。单位为BPI； -f<设备名称>：指定备份设备； -h<层级>：当备份层级等于或大于指定的层级时，将不备份用户标示为“nodump”的文件； -n：当备份工作需要管理员介入时，向所有“operator”群组中的使用者发出通知； -s<磁带长度>：备份磁带的长度，单位为英尺； -T<日期>：指定备份的时间与日期； -u：备份完毕后，在/etc/dumpdates中记录备份的文件系统、层级、日期与时间等； -w：与-W类似，但仅显示需要备份的文件； -W：显示需要备份的文件及其最后一次备份的层级、时间与日期。", "参数": "备份源：指定要备份的文件、目录或者文件系统。", "实例": "将/home目录所有内容备份到/tmp/homeback.bak文件中，备份层级为0并在/etc/dumpdates中记录相关信息：", "class": "文件备份和恢复"}
{"title": "ftp命令", "语法": "ftp(选项)(参数)", "选项": "-d：详细显示指令执行过程，便于排错或分析程序执行的情况； -i：关闭互动模式，不询问任何问题； -g：关闭本地主机文件名称支持特殊字符的扩充特性； -n：不使用自动登录； -v：显示指令执行过程。", "参数": "主机：指定要连接的FTP服务器的主机名或ip地址。", "实例": "FTP>ascii: 设定以ASCII方式传送文件(缺省值) FTP>bell: 每完成一次文件传送,报警提示. FTP>binary: 设定以二进制方式传送文件. FTP>bye: 终止主机FTP进程,并退出FTP管理方式. FTP>case: 当为ON时,用MGET命令拷贝的文件名到本地机器中,全部转换为小写字母. FTP>cd: 同UNIX的CD命令. FTP>cdup: 返回上一级目录. FTP>chmod: 改变远端主机的文件权限. FTP>close: 终止远端的FTP进程,返回到FTP命令状态, 所有的宏定义都被删除. FTP>delete: 删除远端主机中的文件. FTP>dir [remote-directory] [local-file] 列出当前远端主机目录中的文件.如果有本地文件,就将结果写至本地文件. FTP>get [remote-file] [local-file] 从远端主机中传送至本地主机中. FTP>help [command] 输出命令的解释. FTP>lcd: 改变当前本地主机的工作目录,如果缺省,就转到当前用户的HOME目录. FTP>ls [remote-directory] [local-file] 同DIR. FTP>macdef: 定义宏命令. FTP>mdelete [remote-files] 删除一批文件. FTP>mget [remote-files] 从远端主机接收一批文件至本地主机. FTP>mkdir directory-name 在远端主机中建立目录. FTP>mput local-files 将本地主机中一批文件传送至远端主机. FTP>open host [port] 重新建立一个新的连接. FTP>prompt: 交互提示模式. FTP>put local-file [remote-file] 将本地一个文件传送至远端主机中. FTP>pwd: 列出当前远端主机目录. FTP>quit: 同BYE. FTP>recv remote-file [local-file] 同GET. FTP>rename [from] [to] 改变远端主机中的文件名. FTP>rmdir directory-name 删除远端主机中的目录. FTP>send local-file [remote-file] 同PUT. FTP>status: 显示当前FTP的状态. FTP>system: 显示远端主机系统类型. FTP>user user-name [password] [account] 重新以别的用户名登录远端主机. FTP>? [command]: 同HELP. [command]指定需要帮助的命令名称。如果没有指定 command，ftp 将显示全部命令的列表。 FTP>! 从 ftp 子系统退出到外壳。", "class": "文件传输"}
{"title": "tftp命令", "语法": "tftp(选项)(参数)", "选项": "-c：指定与tftp服务器连接成功后，立即要执行的指令； -m：指定文件传输模式。可以是ASCII或者Binary； -v：显示指令详细执行过程； -V：显示指令版本信息。", "参数": "主机：指定tftp要联机的tftp服务器的ip地址或主机名。", "实例": "1、安装tftp服务器", "class": "文件传输"}
{"title": "scp命令", "语法": "scp(选项)(参数)", "选项": "-1：使用ssh协议版本1； -2：使用ssh协议版本2； -4：使用ipv4； -6：使用ipv6； -B：以批处理模式运行； -C：使用压缩； -F：指定ssh配置文件； -l：指定宽带限制； -o：指定使用的ssh选项； -P：指定远程主机的端口号； -p：保留文件的最后修改时间，最后访问时间和权限模式； -q：不显示复制进度； -r：以递归方式复制。", "参数": "源文件：指定要复制的源文件。\n目标文件：目标文件。格式为user@host：filename（文件名为目标文件的名称）。", "实例": "从远程复制到本地的scp命令与上面的命令雷同，只要将从本地复制到远程的命令后面2个参数互换顺序就行了。", "class": "文件传输"}
{"title": "ncftp命令", "语法": "ncftp(选项)(参数)", "选项": "-u：指定登录FTP服务器时使用的用户名； -p：指定登录FTP服务器时使用的密码； -P：如果FTP服务器没有使用默认的TCP协议的21端口，则使用此选项指定FTP服务器的端口号。 -m：在传之前尝试在目录位置创建目录(用于传目录的情况) -R：递规传子目录", "参数": "FTP服务器：指定远程FTP服务器的ip地址或主机名。", "安装": "wget ftp://ftp.ncftp.com/ncftp/ncftp-3.2.3-src.tar.gz tar zxvf ncftp-3.2.3-src.tar.gz cd ncftp-3.2.3/ ./configure --prefix=/usr/local/ncftp make && make install", "实例": "将本地/etc/目录内的所有文件和目录，上传到FTP服务器的flv/games/目录内(如果不存在flv/games/目录则自动创建)。", "class": "文件传输"}
{"title": "rcp命令", "语法": "rcp(选项)(参数)", "选项": "-p：保留源文件或目录的属性，包括拥有者、所属群组、权限与时间； -r：递归处理，将指定目录下的文件与子目录一并处理； -x：加密两台Linux主机间传送的所有信息。 -D：指定远程服务器的端口号。", "参数": "源文件：指定要复制的源文件。源文件可以有多个。", "实例": "rcp命令使用条件", "class": "文件传输"}
{"title": "Linux 4.0+內核對硬件交換模塊的支持(HW Switch Offload)命令", "class": "内核与模块管理"}
{"title": "lsb_release命令", "class": "内核与模块管理"}
{"title": "sysctl命令", "语法": "sysctl(选项)(参数)", "选项": "-n：打印值时不打印关键字； -e：忽略未知关键字错误； -N：仅打印名称； -w：当改变sysctl设置时使用此项； -p：从配置文件“/etc/sysctl.conf”加载内核参数设置； -a：打印当前所有可用的内核参数变量和值； -A：以表格方式打印当前所有可用的内核参数变量和值。", "参数": "变量=值：设置内核参数对应的变量值。", "实例": "查看所有可读变量：", "配置sysctl": "编辑此文件：/etc/sysctl.conf", "class": "内核与模块管理"}
{"title": "slabtop命令", "语法": "slabtop(选项)", "选项": "--delay=n, -d n：每n秒更新一次显示的信息，默认是每3秒； --sort=S, -s S：指定排序标准进行排序（排序标准，参照下面或者man手册）； --once, -o：显示一次后退出； --version, -V：显示版本； --help：显示帮助信息。", "知识扩展": "内核的模块在分配资源的时候，为了提高效率和资源的利用率，都是透过slab来分配的。通过slab的信息，再配合源码能粗粗了解系统的运行情况，比如说什么资源有没有不正常的多，或者什么资源有没有泄漏。linux系统透过/proc/slabinfo来向用户暴露slab的使用情况。", "实例": "slabtop Active / Total Objects (% used) : 897519 / 1245930 (72.0%) Active / Total Slabs (% used) : 38605 / 38605 (100.0%) Active / Total Caches (% used) : 94 / 145 (64.8%) Active / Total Size (% used) : 129558.22K / 153432.58K (84.4%) Minimum / Average / Maximum Object : 0.01K / 0.12K / 128.00K OBJS ACTIVE USE OBJ SIZE SLABS OBJ/SLAB CACHE SIZE NAME 440136 171471 38% 0.05K 6113 72 24452K buffer_head 190086 148576 78% 0.05K 2437 78 9748K selinux_inode_security 151840 146366 96% 0.48K 18980 8 75920K ext3_inode_cache 144333 144143 99% 0.02K 711 203 2844K avtab_node 130529 128488 98% 0.13K 4501 29 18004K dentry_cache 99214 99071 99% 0.03K 878 113 3512K size-32 43834 28475 64% 0.27K 3131 14 12524K radix_tree_node 17818 9450 53% 0.06K 302 59 1208K size-64 4602 4562 99% 0.05K 59 78 236K sysfs_dir_cache 3220 2855 88% 0.08K 70 46 280K vm_area_struct 2460 2114 85% 0.12K 82 30 328K size-128 1564 1461 93% 0.04K 17 92 68K Acpi-Operand 1540 1540 100% 0.33K 140 11 560K inode_cache 1524 466 30% 0.01K 6 254 24K anon_vma 1440 515 35% 0.05K 20 72 80K avc_node 1440 1154 80% 0.19K 72 20 288K filp 1170 1023 87% 0.05K 15 78 60K ext3_xattr 845 724 85% 0.02K 5 169 20K Acpi-Namespace 638 315 49% 0.35K 58 11 232K proc_inode_cache 450 434 96% 0.25K 30 15 120K size-256 424 386 91% 0.50K 53 8 212K size-512 312 107 34% 0.05K 4 78 16K delayacct_cache 306 284 92% 0.43K 34 9 136K shmem_inode_cache 303 108 35% 0.04K 3 101 12K pid 300 261 87% 0.19K 15 20 60K skbuff_head_cache 300 300 100% 0.12K 10 30 40K bio 260 260 100% 32.00K 260 1 8320K size-32768 254 6 2% 0.01K 1 254 4K revoke_table 236 55 23% 0.06K 4 59 16K fs_cache 216 203 93% 1.00K 54 4 216K size-1024 214 214 100% 2.00K 107 2 428K size-2048 203 83 40% 0.02K 1 203 4K biovec-1", "class": "内核与模块管理"}
{"title": "kernelversion命令", "语法": "kernelversion", "class": "内核与模块管理"}
{"title": "get_module命令", "语法": "get_module 模块名", "实例": "使用lsmod命令查看内核模块：", "class": "内核与模块管理"}
{"title": "kexec命令", "语法": "kexec(选项)", "选项": "-l：指定内核映像文件； -e：允许当前被加载的内核； -f：强制立即调用系统调用“kexec”，而不调用“shutdown”； -t：指定新内核的类型； -u：卸载当前的kexec目标内核。", "class": "内核与模块管理"}
{"title": "dmesg命令", "语法": "dmesg(选项)", "选项": "-c：显示信息后，清除ring buffer中的内容； -s<缓冲区大小>：预设置为8196，刚好等于ring buffer的大小； -n：设置记录信息的层级。", "实例": "[root@localhost ~]# dmesg | head Linux version 2.6.18-348.6.1.el5 (mockbuild@builder17.centos.org) (gcc version 4.1.2 20080704 (Red Hat 4.1.2-54)) #1 SMP Tue May 21 15:34:22 EDT 2013 BIOS-provided physical RAM map: BIOS-e820: 0000000000010000 - 000000000009f400 (usable) BIOS-e820: 000000000009f400 - 00000000000a0000 (reserved) BIOS-e820: 00000000000f0000 - 0000000000100000 (reserved) BIOS-e820: 0000000000100000 - 000000007f590000 (usable) BIOS-e820: 000000007f590000 - 000000007f5e3000 (ACPI NVS) BIOS-e820: 000000007f5e3000 - 000000007f5f0000 (ACPI data) BIOS-e820: 000000007f5f0000 - 000000007f600000 (reserved) BIOS-e820: 00000000e0000000 - 00000000e8000000 (reserved)", "class": "内核与模块管理"}
{"title": "uname命令", "语法": "uname(选项)", "选项": "-a或--all：显示全部的信息； -m或--machine：显示电脑类型； -n或-nodename：显示在网络上的主机名称； -r或--release：显示操作系统的发行编号； -s或--sysname：显示操作系统名称； -v：显示操作系统的版本； -p或--processor：输出处理器类型或\"unknown\"； -i或--hardware-platform：输出硬件平台或\"unknown\"； -o或--operating-system：输出操作系统名称； --help：显示帮助； --version：显示版本信息。", "实例": "使用uname命令查看全部信息：", "class": "内核与模块管理"}
{"title": "depmod命令", "语法": "depmod(选项)", "选项": "-a或--all：分析所有可用的模块； -d或debug：执行排错模式； -e：输出无法参照的符号； -i：不检查符号表的版本； -m<文件>或system-map<文件>：使用指定的符号表文件； -s或--system-log：在系统记录中记录错误； -v或--verbose：执行时显示详细的信息； -V或--version：显示版本信息； --help：显示帮助。", "实例": "depmod -b /home/windsome/EMMA3PF-KernelSource-20080626/install_pos -e -F ./boot/System.map -v 2.6.18_pro500-bcm91250-mips2_fp_be -A -a", "class": "内核与模块管理"}
{"title": "bmodinfo命令", "语法": "bmodinfo(选项)(参数)", "选项": "-a：显示模块作者； -d：显示模块的描述信息； -l：显示模块的许可信息； -p：显示模块的参数信息； -n：显示模块对应的文字信息； -0：用ASCII码的0字符分割字段值，而不使用新行。", "参数": "模块名：要显示详细信息的模块名称。", "实例": "显示sg模块的信息：", "class": "内核与模块管理"}
{"title": "modprobe命令", "语法": "modprobe(选项)(参数)", "选项": "-a或--all：载入全部的模块； -c或--show-conf：显示所有模块的设置信息； -d或--debug：使用排错模式； -l或--list：显示可用的模块； -r或--remove：模块闲置不用时，即自动卸载模块； -t或--type：指定模块类型； -v或--verbose：执行时显示详细的信息； -V或--version：显示版本信息； -help：显示帮助。", "参数": "模块名：要加载或移除的模块名称。", "实例": "查看modules的配置文件：", "class": "内核与模块管理"}
{"title": "rmmod命令", "语法": "rmmod(选项)(参数)", "选项": "-v：显示指令执行的详细信息； -f：强制移除模块，使用此选项比较危险； -w：等待着，直到模块能够被除时在移除模块； -s：向系统日志（syslog）发送错误信息。", "参数": "模块名：要移除的模块名称。", "实例": "用rmmod命令主要用于卸载正在使用的Linux内核模块，与modprobe -r命令相似，如下所示：", "class": "内核与模块管理"}
{"title": "insmod命令", "语法": "insmod(选项)(参数)", "选项": "-f：不检查目前kernel版本与模块编译时的kernel版本是否一致，强制将模块载入； -k：将模块设置为自动卸除； -m：输出模块的载入信息； -o<模块名称>：指定模块的名称，可使用模块文件的文件名； -p：测试模块是否能正确地载入kernel； -s：将所有信息记录在系统记录文件中； -v：执行时显示详细的信息； -x：不要汇出模块的外部符号； -X：汇出模块所有的外部符号，此为预设置。", "参数": "内核模块：指定要加载的内核模块文件。", "实例": "加载RAID1阵列级别模块，如下所示：", "class": "内核与模块管理"}
{"title": "lsmod命令", "语法": "lsmod", "实例": "[root@LinServ-1 ~]# lsmod Module Size Used by ipv6 272801 15 xfrm_nalgo 13381 1 ipv6 crypto_api 12609 1 xfrm_nalgo ip_conntrack_ftp 11569 0 xt_limit 6721 2 xt_state 6209 2 ip_conntrack 53665 2 ip_conntrack_ftp,xt_state nfnetlink 10713 1 ip_conntrack xt_tcpudp 7105 6 xt_multiport 7233 1 iptable_filter 7105 1 ip_tables 17029 1 iptable_filter x_tables 17349 5 xt_limit,xt_state,xt_tcpudp,xt_multiport,ip_tables dm_mirror 24393 0 dm_multipath 27213 0 scsi_dh 12481 1 dm_multipath video 21193 0 backlight 10049 1 video sbs 18533 0 power_meter 16461 0 hwmon 7365 1 power_meter i2c_ec 9025 1 sbs dell_wmi 8401 0 wmi 12137 1 dell_wmi button 10705 0 battery 13637 0 asus_acpi 19289 0 ac 9157 0 lp 15849 0 snd_hda_intel 401453 0 snd_seq_dummy 7877 0 snd_seq_oss 32577 0 snd_seq_midi_event 11073 1 snd_seq_oss snd_seq 49585 5 snd_seq_dummy,snd_seq_oss,snd_seq_midi_event snd_seq_device 11725 3 snd_seq_dummy,snd_seq_oss,snd_seq snd_pcm_oss 42817 0 snd_mixer_oss 19009 1 snd_pcm_oss snd_pcm 72517 2 snd_hda_intel,snd_pcm_oss ide_cd 40161 0 snd_timer 24517 2 snd_seq,snd_pcm tpm_tis 16713 0 r8169 43077 0 snd_page_alloc 14281 2 snd_hda_intel,snd_pcm tpm 19041 1 tpm_tis i2c_i801 12737 0 mii 9409 1 r8169 serio_raw 10693 0 i2c_core 24897 2 i2c_ec,i2c_i801 snd_hwdep 12869 1 snd_hda_intel tpm_bios 11073 1 tpm cdrom 36577 1 ide_cd pcspkr 7105 0 parport_pc 29669 1 sg 36973 0 snd 57797 9 snd_hda_intel,snd_seq_oss,snd_seq,snd_seq_device,snd_pcm_oss,snd_mixer_oss,snd_pcm,snd_timer,snd_hwdep parport 37513 2 lp,parport_pc soundcore 11553 1 snd dm_raid45 67273 0 dm_message 6977 1 dm_raid45 dm_region_hash 15681 1 dm_raid45 dm_log 14785 3 dm_mirror,dm_raid45,dm_region_hash dm_mod 63993 4 dm_mirror,dm_multipath,dm_raid45,dm_log dm_mem_cache 9537 1 dm_raid45 ata_piix 23749 4 libata 158085 1 ata_piix sd_mod 25409 6 scsi_mod 144277 4 scsi_dh,sg,libata,sd_mod ext3 126281 3 jbd 57705 1 ext3 uhci_hcd 25421 0 ohci_hcd 24937 0 ehci_hcd 34509 0", "class": "内核与模块管理"}
{"title": "讓你提前認識軟件開發(2)：軟件開發工程師常用的工具軟件命令", "class": "常用工具命令"}
{"title": "磁盤與文件系統管理命令", "class": "常用工具命令"}
{"title": "技巧05監測樹莓派的硬件命令", "class": "常用工具命令"}
{"title": "linux文件和目錄管理的基本命令命令", "class": "常用工具命令"}
{"title": "Find命令", "class": "常用工具命令"}
{"title": "rm – Remove命令", "class": "常用工具命令"}
{"title": "cd – Change Directory命令", "對於當前在終端運行的會中中， cd <directory> 將給定的文件夾（或目錄）設置成當前工作目錄。": "", "class": "常用工具命令"}
{"title": "ls – List命令", "class": "常用工具命令"}
{"title": "Decompression Bomb命令", "class": "常用工具命令"}
{"title": "Malicious Source Code命令", "class": "常用工具命令"}
{"title": "Dd Command命令", "class": "常用工具命令"}
{"title": "Tar Bomb命令", "class": "常用工具命令"}
{"title": "Mkfs Command命令", "class": "常用工具命令"}
{"title": "Rm -Rf Command命令", "class": "常用工具命令"}
{"title": "Mv Folder/Dev/Null Command命令", "class": "常用工具命令"}
{"title": "蘋果與斯坦福攜手深入進行心臟項目研究命令", "class": "常用工具命令"}
{"title": "pssh命令", "安装pssh": "在CentOS系统环境下，介绍yum的安装和源码安装的方式：", "选项": "--version：查看版本 --help：查看帮助，即此信息 -h：主机文件列表，内容格式”[user@]host[:port]” -H：主机字符串，内容格式”[user@]host[:port]” -：登录使用的用户名 -p：并发的线程数【可选】 -o：输出的文件目录【可选】 -e：错误输入文件【可选】 -t：TIMEOUT 超时时间设置，0无限制【可选】 -O：SSH的选项 -v：详细模式 -A：手动输入密码模式 -x：额外的命令行参数使用空白符号，引号，反斜线处理 -X：额外的命令行参数，单个参数模式，同-x -i：每个服务器内部处理信息输出 -P：打印出服务器返回信息", "实例": "获取每台服务器的uptime：", "class": "常用工具命令"}
{"title": "screen命令", "语法": "# screen [-AmRvx -ls -wipe][-d ][-h ][-r ][-s ][-S ]", "选项": "-A 　将所有的视窗都调整为目前终端机的大小。 -d <作业名称> 　将指定的screen作业离线。 -h <行数> 　指定视窗的缓冲区行数。 -m 　即使目前已在作业中的screen作业，仍强制建立新的screen作业。 -r <作业名称> 　恢复离线的screen作业。 -R 　先试图恢复离线的作业。若找不到离线的作业，即建立新的screen作业。 -s 　指定建立新视窗时，所要执行的shell。 -S <作业名称> 　指定screen作业的名称。 -v 　显示版本信息。 -x 　恢复之前离线的screen作业。 -ls或--list 　显示目前所有的screen作业。 -wipe 　检查目前所有的screen作业，并删除已经无法使用的screen作业。", "常用screen参数": "screen -S yourname -> 新建一个叫yourname的session screen -ls -> 列出当前所有的session screen -r yourname -> 回到yourname这个session screen -d yourname -> 远程detach某个session screen -d -r yourname -> 结束当前session并回到yourname这个session", "使用 screen": "安装screen", "screen 高级应用": "会话共享", "class": "常用工具命令"}
{"title": "speedtest-cli命令", "安装speedtest－cli": "speedtest-cli需要在python 2.4-3.4的环境下，安装方法都很简单，自己选择以下最适合你的一种。", "用法": "-h, --help show this help message and exit --share 分享你的网速，该命令会在speedtest网站上生成网速测试结果的图片。 --simple Suppress verbose output, only show basic information --list 根据距离显示speedtest.net的测试服务器列表。 --server=SERVER 指定列表中id的服务器来做测试。 --mini=MINI URL of the Speedtest Mini server --source=SOURCE Source ip address to bind to --version Show the version number and exit", "实例": "列出所有在中国的测试服务器：", "class": "常用工具命令"}
{"title": "clockdiff命令", "选项": "-o：使用IP时间戳选项来测量系统时间差。时间戳只用3个。 -o1：使用IP时间戳选项来测量系统时间差。用4个时间戳。如果-o和-o1都没有设置，那么就是用ICMP时间戳来测试系统时间差。", "实例": "lixi@lixi-desktop:~$ ping -T tsandaddr www.ustc.edu.cn -c 1 PING www.ustc.edu.cn (202.38.64.9) 56(124) bytes of data. 64 bytes from 202.38.64.9: icmp_seq=1 ttl=62 time=0.823 ms TS: lixi-desktop.local (210.45.74.25) 12522473 absolute 210.45.74.1 -251 local-gw.ustc.edu.cn (202.38.64.126) 248 202.38.64.9 -857514 Unrecorded hops: 3 --- www.ustc.edu.cn ping statistics --- 1 packets transmitted, 1 received, 0% packet loss, time 0ms rtt min/avg/max/mdev = 0.823/0.823/0.823/0.000 ms", "class": "常用工具命令"}
{"title": "ntpdate命令", "语法": "ntpdate [ -b] [ -d] [ -s] [ -u] [ -aKeyid] [ -eAuthenticationDelay] [ -kKeyFile] [ -oVersion] [ -pSamples] [ -tTimeOut] Server...", "选项": "-aKeyid\n使用 Keyid 来认证全部数据包。\n-b\n通过调用 settimeofday 子例程来增加时钟的时间。\n-d\n指定调试方式。判断 ntpdate 命令会产生什么结果（不产生实际的结果）。结果再现在屏幕上。这个标志使用无特权的端口。\n-eAuthenticationDelay\n指定延迟认证处理的时间秒数。\n-kKeyFile\n当不使用缺省值 /etc/ntp.keys 文件时，为包含密钥的文件指定一个不同的名称。 请参阅文件KeyFile的描述。\n-oVersion\n当轮询它的发出数据包时，指定使用的 NTP 版本实现。 Version 的值可以是 1，2，3。缺省值是 3。\n-pSamples\n指定从每个服务器获取的样本的数目。 Samples 的值在 1 和 8 之间，并包括 1 和 8。它的缺省值是 4。\n-s\n指定日志操作 syslog 设施的使用，而不是使用标准输出。 当运行 ntpdate 命令和 cron命令时，它是很有用的。\n-tTimeOut\n指定等待响应的时间。给定 TimeOut 的值四舍五入为 0.2 秒的倍数。缺省值是 1 秒。\n-u\n指定使用无特权的端口发送数据包。 当在一个对特权端口的输入流量进行阻拦的防火墙后是很有益的， 并希望在防火墙之外和主机同步。防火墙是一个系统或者计算机，它控制从外网对专用网的访问。", "class": "常用工具命令"}
{"title": "rsync命令", "语法": "rsync [OPTION]... SRC DEST rsync [OPTION]... SRC [USER@]host:DEST rsync [OPTION]... [USER@]HOST:SRC DEST rsync [OPTION]... [USER@]HOST::SRC DEST rsync [OPTION]... SRC [USER@]HOST::DEST rsync [OPTION]... rsync://[USER@]HOST[:PORT]/SRC [DEST]", "选项": "-v, --verbose 详细模式输出。 -q, --quiet 精简输出模式。 -c, --checksum 打开校验开关，强制对文件传输进行校验。 -a, --archive 归档模式，表示以递归方式传输文件，并保持所有文件属性，等于-rlptgoD。 -r, --recursive 对子目录以递归模式处理。 -R, --relative 使用相对路径信息。 -b, --backup 创建备份，也就是对于目的已经存在有同样的文件名时，将老的文件重新命名为~filename。可以使用--suffix选项来指定不同的备份文件前缀。 --backup-dir 将备份文件(如~filename)存放在在目录下。 -suffix=SUFFIX 定义备份文件前缀。 -u, --update 仅仅进行更新，也就是跳过所有已经存在于DST，并且文件时间晚于要备份的文件，不覆盖更新的文件。 -l, --links 保留软链结。 -L, --copy-links 想对待常规文件一样处理软链结。 --copy-unsafe-links 仅仅拷贝指向SRC路径目录树以外的链结。 --safe-links 忽略指向SRC路径目录树以外的链结。 -H, --hard-links 保留硬链结。 -p, --perms 保持文件权限。 -o, --owner 保持文件属主信息。 -g, --group 保持文件属组信息。 -D, --devices 保持设备文件信息。 -t, --times 保持文件时间信息。 -S, --sparse 对稀疏文件进行特殊处理以节省DST的空间。 -n, --dry-run现实哪些文件将被传输。 -w, --whole-file 拷贝文件，不进行增量检测。 -x, --one-file-system 不要跨越文件系统边界。 -B, --block-size=SIZE 检验算法使用的块尺寸，默认是700字节。 -e, --rsh=command 指定使用rsh、ssh方式进行数据同步。 --rsync-path=PATH 指定远程服务器上的rsync命令所在路径信息。 -C, --cvs-exclude 使用和CVS一样的方法自动忽略文件，用来排除那些不希望传输的文件。 --existing 仅仅更新那些已经存在于DST的文件，而不备份那些新创建的文件。 --delete 删除那些DST中SRC没有的文件。 --delete-excluded 同样删除接收端那些被该选项指定排除的文件。 --delete-after 传输结束以后再删除。 --ignore-errors 及时出现IO错误也进行删除。 --max-delete=NUM 最多删除NUM个文件。 --partial 保留那些因故没有完全传输的文件，以是加快随后的再次传输。 --force 强制删除目录，即使不为空。 --numeric-ids 不将数字的用户和组id匹配为用户名和组名。 --timeout=time ip超时时间，单位为秒。 -I, --ignore-times 不跳过那些有同样的时间和长度的文件。 --size-only 当决定是否要备份文件时，仅仅察看文件大小而不考虑文件时间。 --modify-window=NUM 决定文件是否时间相同时使用的时间戳窗口，默认为0。 -T --temp-dir=DIR 在DIR中创建临时文件。 --compare-dest=DIR 同样比较DIR中的文件来决定是否需要备份。 -P 等同于 --partial。 --progress 显示备份过程。 -z, --compress 对备份的文件在传输时进行压缩处理。 --exclude=PATTERN 指定排除不需要传输的文件模式。 --include=PATTERN 指定不排除而需要传输的文件模式。 --exclude-from=FILE 排除FILE中指定模式的文件。 --include-from=FILE 不排除FILE指定模式匹配的文件。 --version 打印版本信息。 --address 绑定到特定的地址。 --config=FILE 指定其他的配置文件，不使用默认的rsyncd.conf文件。 --port=PORT 指定其他的rsync服务端口。 --blocking-io 对远程shell使用阻塞IO。 -stats 给出某些文件的传输状态。 --progress 在传输时现实传输过程。 --log-format=formAT 指定日志文件格式。 --password-file=FILE 从FILE中得到密码。 --bwlimit=KBPS 限制I/O带宽，KBytes per second。 -h, --help 显示帮助信息。", "实例": "SSH方式", "class": "常用工具命令"}
{"title": "vdfuse命令", "什么是VirtualBox": "VirtualBox是一款功能强大的x86虚拟机软件，它不仅具有丰富的特色，而且性能也很优异。更可喜的是，VirtualBox于数日前走向开源，成为了一个发布在GPL许可之下的自由软件。VirtualBox可以在Linux和Windows主机中运行，并支持在其中安装Windows (NT 4.0、2000、XP、Server 2003、Vista)、DOS/Windows 3.x、Linux (2.4 和 2.6)、OpenBSD等系列的客户操作系统。", "语法": "vdfuse [options] -f image-file mountpoint", "选项": "-h 帮助 -r 只读 -t 类型 (VDI, VMDK, VHD, or raw; default: auto) -f 镜像文件 -a 允许所有用户读取 -w 允许所有用户都写 -g 前台运行 -v 输出反馈 -d debug模式", "实例": "使用如下如下语句挂载.vdi文件：", "class": "常用工具命令"}
{"title": "ngrep命令", "安装": "ngrep命令的下载地址：http://ngrep.sourceforge.net/，libpcap下载地址：http://www.tcpdump.org/。先用yum install libpcap完全安装libpcap，注意有时候用libpcap安装包安装的不完整会影响ngrep的使用。", "语法": "ngrep <-LhNXViwqpevxlDtTRM> <-IO pcap_dump> <-n num> <-d dev> <-A num> <-s snaplen> <-S limitlen> <-w normal|byline|single|none> <-c cols> <-P char> <-F file> <match expression> <bpf filter>", "选项": "-e ：显示空数据包 -i ：忽略大小写 -v ：反转匹配 -R ：don't do privilege revocation logic -x ：以16进制格式显示 -X ：以16进制格式匹配 -w ：整字匹配 -p ：不使用混杂模式 -l ：make stdout line buffered -D ：replay pcap_dumps with their recorded time intervals -t ：在每个匹配的包之前显示时间戳 -T ：显示上一个匹配的数据包之间的时间间隔 -M ：仅进行单行匹配 -I ：从文件中读取数据进行匹配 -O ：将匹配的数据保存到文件 -n ：仅捕获指定数目的数据包进行查看 -A ：匹配到数据包后dump随后的指定数目的数据包 -s ：set the bpf caplen -S ：set the limitlen on matched packets -W ：设置显示格式byline将解析包中的换行符 -c ：强制显示列的宽度 -P ：set the non-printable display char to what is specified -F ：使用文件中定义的bpf(Berkeley Packet Filter) -N ：显示由IANA定义的子协议号 -d ：使用哪个网卡，可以用-L选项查询 -L ：查询网卡接口", "实例": "捕捉cloudian：18080端口的request和response，-W byline用来解析包中的换行符，否则包里的所有数据都是连续的，可读性差。-d lo是监听本地网卡：", "class": "常用工具命令"}
{"title": "tempfile命令", "tempfile命令": "tempfile命令只有在基于Debian的发行版中才默认自带，比如Ubuntu，其他发行版没有这个命令。", "$$变量": "如果没有tempfile命令的Linux发行版，也可以使用自己的临时文件名：", "class": "常用工具命令"}
{"title": "xargs命令", "xargs命令用法": "xargs用作替换工具，读取输入数据重新格式化后输出。", "子Shell（Subshells）": "运行一个shell脚本时会启动另一个命令解释器.，就好像你的命令是在命令行提示下被解释的一样，类似于批处理文件里的一系列命令。每个shell脚本有效地运行在父shell(parent shell)的一个子进程里。这个父shell是指在一个控制终端或在一个xterm窗口中给你命令指示符的进程。", "class": "常用工具命令"}
{"title": "awk命令", "模式": "模式可以是以下任意一个：", "操作": "操作由一个或多个命令、函数、表达式组成，之间由换行符或分号隔开，并位于大括号内，主要部分是：", "awk的工作原理": "awk 'BEGIN{ commands } pattern{ commands } END{ commands }'", "算术运算符": "运算符\n描述\n+ -\n加，减\n* / &\n乘，除与求余\n+ - !\n一元加，减和逻辑非\n^ ***\n求幂\n++ --\n增加或减少，作为前缀或后缀", "赋值运算符": "运算符\n描述\n= += -= *= /= %= ^= **=\n赋值语句", "逻辑运算符": "运算符\n描述\n||\n逻辑或\n&&\n逻辑与", "正则运算符": "运算符\n描述\n~ ~!\n匹配正则表达式和不匹配正则表达式", "关系运算符": "运算符\n描述\n< <= > >= != ==\n关系运算符", "其它运算符": "运算符\n描述\n$\n字段引用\n空格\n字符串连接符\n?:\nC条件表达式\nin\n数组中是否存在某键值", "运算级优先级表": "级别越高越优先", "读取下一条记录": "awk中next语句使用：在循环逐行匹配，如果遇到next，就会跳过当前行，直接忽略下面语句。而进行下一行匹配。net语句一般用于多行合并：", "简单地读取一条记录": "awk getline用法：输出重定向需用到getline函数。getline从标准输入、管道或者当前正在处理的文件之外的其他输入文件获得输入。它负责从输入获得下一行的内容，并给NF,NR和FNR等内建变量赋值。如果得到一条记录，getline函数返回1，如果到达文件的末尾就返回0，如果出现错误，例如打开文件失败，就返回-1。", "关闭文件": "awk中允许在程序中关闭一个输入或输出文件，方法是使用awk的close语句。", "输出到一个文件": "awk中允许用如下方式将结果输出到一个文件：", "条件判断语句": "if(表达式) 语句1 else 语句2", "循环语句": "while语句", "其他语句": "break 当 break 语句用于 while 或 for 语句时，导致退出程序循环。\ncontinue 当 continue 语句用于 while 或 for 语句时，使程序循环移动到下一个迭代。\nnext 能能够导致读入下一个输入行，并返回到脚本的顶部。这可以避免对当前输入行执行其他的操作过程。\nexit 语句使主输入循环退出并将控制转移到END,如果END存在的话。如果没有定义END规则，或在END中应用exit语句，则终止脚本的执行。", "数组的定义": "数字做数组索引（下标）：", "数组相关函数": "得到数组长度：", "二维、多维数组使用": "awk的多维数组在本质上是一维数组，更确切一点，awk在存储上并不支持多维数组。awk提供了逻辑上模拟二维数组的访问方式。例如，array[2,4]=1这样的访问是允许的。awk使用一个特殊的字符串SUBSEP(�34)作为分割字段，在上面的例子中，关联数组array存储的键值实际上是2�344。", "算术函数": "格式\n描述\natan2( y, x )\n返回 y/x 的反正切。\ncos( x )\n返回 x 的余弦；x 是弧度。\nsin( x )\n返回 x 的正弦；x 是弧度。\nexp( x )\n返回 x 幂函数。\nlog( x )\n返回 x 的自然对数。\nsqrt( x )\n返回 x 平方根。\nint( x )\n返回 x 的截断至整数的值。\nrand( )\n返回任意数字 n，其中 0 <= n < 1。\nsrand( [expr] )\n将 rand 函数的种子值设置为 Expr 参数的值，或如果省略 Expr 参数则使用某天的时间。返回先前的种子值。", "字符串函数": "格式\n描述\ngsub( Ere, Repl, [ In ] )\n除了正则表达式所有具体值被替代这点，它和 sub 函数完全一样地执行。\nsub( Ere, Repl, [ In ] )\n用 Repl 参数指定的字符串替换 In 参数指定的字符串中的由 Ere 参数指定的扩展正则表达式的第一个具体值。sub 函数返回替换的数量。出现在 Repl 参数指定的字符串中的 &（和符号）由 In 参数指定的与 Ere 参数的指定的扩展正则表达式匹配的字符串替换。如果未指定 In 参数，缺省值是整个记录（$0 记录变量）。\nindex( String1, String2 )\n在由 String1 参数指定的字符串（其中有出现 String2 指定的参数）中，返回位置，从 1 开始编号。如果 String2 参数不在 String1 参数中出现，则返回 0（零）。\nlength [(String)]\n返回 String 参数指定的字符串的长度（字符形式）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nblength [(String)]\n返回 String 参数指定的字符串的长度（以字节为单位）。如果未给出 String 参数，则返回整个记录的长度（$0 记录变量）。\nsubstr( String, M, [ N ] )\n返回具有 N 参数指定的字符数量子串。子串从 String 参数指定的字符串取得，其字符以 M 参数指定的位置开始。M 参数指定为将 String 参数中的第一个字符作为编号 1。如果未指定 N 参数，则子串的长度将是 M 参数指定的位置到 String 参数的末尾 的长度。\nmatch( String, Ere )\n在 String 参数指定的字符串（Ere 参数指定的扩展正则表达式出现在其中）中返回位置（字符形式），从 1 开始编号，或如果 Ere 参数不出现，则返回 0（零）。RSTART 特殊变量设置为返回值。RLENGTH 特殊变量设置为匹配的字符串的长度，或如果未找到任何匹配，则设置为 -1（负一）。\nsplit( String, A, [Ere] )\n将 String 参数指定的参数分割为数组元素 A[1], A[2], . . ., A[n]，并返回 n 变量的值。此分隔可以通过 Ere 参数指定的扩展正则表达式进行，或用当前字段分隔符（FS 特殊变量）来进行（如果没有给出 Ere 参数）。除非上下文指明特定的元素还应具有一个数字值，否则 A 数组中的元素用字符串值来创建。\ntolower( String )\n返回 String 参数指定的字符串，字符串中每个大写字符将更改为小写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\ntoupper( String )\n返回 String 参数指定的字符串，字符串中每个小写字符将更改为大写。大写和小写的映射由当前语言环境的 LC_CTYPE 范畴定义。\nsprintf(Format, Expr, Expr, . . . )\n根据 Format 参数指定的 printf 子例程格式字符串来格式化 Expr 参数指定的表达式并返回最后生成的字符串。", "一般函数": "格式\n描述\nclose( Expression )\n用同一个带字符串值的 Expression 参数来关闭由 print 或 printf 语句打开的或调用 getline 函数打开的文件或管道。如果文件或管道成功关闭，则返回 0；其它情况下返回非零值。如果打算写一个文件，并稍后在同一个程序中读取文件，则 close 语句是必需的。\nsystem(command )\n执行 Command 参数指定的命令，并返回退出状态。等同于 system 子例程。\nExpression | getline [ Variable ]\n从来自 Expression 参数指定的命令的输出中通过管道传送的流中读取一个输入记录，并将该记录的值指定给 Variable 参数指定的变量。如果当前未打开将 Expression 参数的值作为其命令名称的流，则创建流。创建的流等同于调用 popen 子例程，此时 Command 参数取 Expression 参数的值且 Mode 参数设置为一个是 r 的值。只要流保留打开且 Expression 参数求得同一个字符串，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ] < Expression\n从 Expression 参数指定的文件读取输入的下一个记录，并将 Variable 参数指定的变量设置为该记录的值。只要流保留打开且 Expression 参数对同一个字符串求值，则对 getline 函数的每次后续调用读取另一个记录。如果未指定 Variable 参数，则 $0 记录变量和 NF 特殊变量设置为从流读取的记录。\ngetline [ Variable ]\n将 Variable 参数指定的变量设置为从当前输入文件读取的下一个输入记录。如果未指定 Variable 参数，则 $0 记录变量设置为该记录的值，还将设置 NF、NR 和 FNR 特殊变量。", "时间函数": "格式\n描述\n函数名\n说明\nmktime( YYYY MM dd HH MM ss[ DST])\n生成时间格式\nstrftime([format [, timestamp]])\n格式化时间输出，将时间戳转为时间字符串\n具体格式，见下表.\nsystime()\n得到时间戳,返回从1970年1月1日开始到当前时间(不计闰年)的整秒数", "class": "常用工具命令"}
{"title": "yes命令", "语法": "yes(参数)", "参数": "字符串：指定要重复打印的字符串。", "实例": "[root@localhost ~]# yes testline testline testline testline testline testline testline testline testline ...一直重复打印 testline，按Ctrl+C结束。", "class": "常用工具命令"}
{"title": "date命令", "语法": "date(选项)(参数)", "选项": "-d<字符串>：显示字符串所指的日期与时间。字符串前后必须加上双引号； -s<字符串>：根据字符串来设置日期与时间。字符串前后必须加上双引号； -u：显示GMT； --help：在线帮助； --version：显示版本信息。", "参数": "<+时间日期格式>：指定显示时使用的日期时间格式。", "日期格式字符串列表": "%H 小时，24小时制（00~23） %I 小时，12小时制（01~12） %k 小时，24小时制（0~23） %l 小时，12小时制（1~12） %M 分钟（00~59） %p 显示出AM或PM %r 显示时间，12小时制（hh:mm:ss %p） %s 从1970年1月1日00:00:00到目前经历的秒数 %S 显示秒（00~59） %T 显示时间，24小时制（hh:mm:ss） %X 显示时间的格式（%H:%M:%S） %Z 显示时区，日期域（CST） %a 星期的简称（Sun~Sat） %A 星期的全称（Sunday~Saturday） %h,%b 月的简称（Jan~Dec） %B 月的全称（January~December） %c 日期和时间（Tue Nov 20 14:12:58 2012） %d 一个月的第几天（01~31） %x,%D 日期（mm/dd/yy） %j 一年的第几天（001~366） %m 月份（01~12） %w 一个星期的第几天（0代表星期天） %W 一年的第几个星期（00~53，星期一为第一天） %y 年的最后两个数字（1999则是99）", "实例": "格式化输出：", "class": "常用工具命令"}
{"title": "consoletype命令", "语法": "consoletype", "实例": "[root@localhost ~]# consoletype pty", "class": "常用工具命令"}
{"title": "info命令", "语法": "info(选项)(参数)", "选项": "-d：添加包含info格式帮助文档的目录； -f：指定要读取的info格式的帮助文档； -n：指定首先访问的info帮助文件的节点； -o：输出被选择的节点内容到指定文件。", "参数": "帮助主题：指定需要获得帮助的主题，可以是指令、函数以及配置文件。", "实例": "在info后面输入命令的名称就可以查看该命令的info帮助文档了：", "class": "常用工具命令"}
{"title": "hostid命令", "语法": "hostid", "选项": "--help：显示帮助信息； --version：显示版本信息。", "实例": "[root@localhost ~]# hostid 007f0100", "class": "常用工具命令"}
{"title": "clear命令", "语法": "clear", "实例": "直接输入clear命令当前终端上的任何信息就可被清除。", "class": "常用工具命令"}
{"title": "whoami命令", "语法": "whoami(选项)", "选项": "--help：在线帮助； --version：显示版本信息。", "实例": "[root@localhost ~]# whoami root [root@localhost ~]# id -un root", "class": "常用工具命令"}
{"title": "users命令", "语法": "users(选项)", "选项": "--help：显示命令的帮助信息； --version：显示命令的版本信息。", "实例": "[root@localhost ~]# users root root", "class": "常用工具命令"}
{"title": "sleep命令", "语法": "sleep(参数)", "参数": "时间：指定要暂停时间的长度。", "实例": "有时在写一些以循环方式运行的监控脚本，设置时间间隔是必不可少的，下面是一个Shell进度条的脚本演示在脚本中生成延时。", "class": "常用工具命令"}
{"title": "md5sum命令", "语法": "md5sum(选项)(参数)", "选项": "-b：二进制模式读取文件； -t或--text：把输入的文件作为文本文件看待； -c：从指定文件中读取MD5校验和，并进行校验； --status：验证成功时不输出任何信息； -w：当校验不正确时给出警告信息。", "参数": "文件：指定保存着文件名和校验和的文本文件。", "实例": "生成一个文件insert.sql的md5值：", "class": "常用工具命令"}
{"title": "mesg命令", "语法": "mesg(参数)", "参数": "y/n：y表示运行向当前终端写信息，n表示禁止向当前终端写信息。", "实例": "[root@localhost ~]# mesg y #允许系统用户将信息直接显示在你的屏幕上。 [root@localhost ~]# mesg n #不允许系统用户将信息直接显示在你的屏幕上。", "class": "常用工具命令"}
{"title": "mtools命令", "语法": "mtools(选项)", "选项": "-a：长文件名重复时自动更改目标文件的长文件名； -A：短文件名重复但长文件名不同时自动更改目标文件的短文件名； -o：长文件名重复时，将目标文件覆盖现有的文件； -O：短文件名重复但长文件名不同时，将目标文件覆盖现有的文件； -r：长文件名重复时，要求用户更改目标文件的长文件名； -R：短文件名重复但长文件名不同时，要求用户更改目标文件的短文件名； -s：长文件名重复时，则不处理该目标文件； -S：短文件名重复但长文件名不同时，则不处理该目标文件； -v：执行时显示详细的说明； -V：显示版本信息。", "实例": "使用mtools命令显示其支持的所有的指令，输入如下命令：", "class": "常用工具命令"}
{"title": "login命令", "语法": "login(选项)(参数)", "选项": "-p：告诉login指令不销毁环境变量； -h：指定远程服务器的主机名。", "参数": "用户名：指定登录使用的用户名。", "class": "常用工具命令"}
{"title": "系統管理與維護命令", "class": "文件系统管理"}
{"title": "Linux Fork Bomb Command命令", "class": "文件系统管理"}
{"title": "基於Web的文件管理器，發布 eXtplorer 2.1.5 版本命令", "class": "文件系统管理"}
{"title": "SkyNet：用開源系統管理物聯網命令", "class": "文件系统管理"}
{"title": "Linux jobs命令用法详解：显示Linux中的任务列表及任务状态命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "文件系统管理"}
{"title": "repquota命令", "语法": "repquota(选项)(参数)", "选项": "-a：列出在/etc/fstab文件里，有加入quota设置的分区的使用状况，包括用户和群组； -g：列出所有群组的磁盘空间限制； -u：列出所有用户的磁盘空间限制； -v：显示该用户或群组的所有空间限制。", "参数": "文件系统：要打印报表的文件系统或者对应的设备文件名。", "实例": "显示所有文件系统的磁盘使用情况", "class": "文件系统管理"}
{"title": "e2label命令", "语法": "e2label(参数)", "参数": "文件系统：指定文件系统所对应的设备文件名；\n新卷标：为文件系统指定新卷标。", "实例": "许多用了多年Linux的人可能也没有用过e2label命令。但是这个命令相当有效。在介绍它之前,我们先看看/etc/fstab文件：", "class": "文件系统管理"}
{"title": "findfs命令", "语法": "findfs(参数)", "参数": "LABEL=<卷标>或者UUID=<UUID>：按照卷标或者UUID查询文件系统。", "实例": "通过卷标名查找对应的文件系统：", "class": "文件系统管理"}
{"title": "resize2fs命令", "语法": "resize2fs(选项)(参数)", "选项": "-d：打开调试特性； -p：打印已完成的百分比进度条； -f：强制执行调整大小操作，覆盖掉安全检查操作； -F：开始执行调整大小前，刷新文件系统设备的缓冲区。", "参数": "设备文件名：增大要调整大小的文件系统所对应的设备文件名；\n大小：文件系统的新大小。", "实例": "LV分区重设大小", "class": "文件系统管理"}
{"title": "e2image命令", "语法": "e2image(选项)(参数)", "选项": "-l：将文件中的“ext2/ext3”文件系统元数据还原到分区上。", "参数": "文件系统：指定文件系统对应的设备文件名；\n文件：指定保存文件系统元数据的文件名。", "class": "文件系统管理"}
{"title": "tune2fs命令", "语法": "tune2fs(选项)(参数)", "选项": "-c：调整最大加载次数； -C：设置文件系统已经被加载的次数； -e：设置内核代码检测到错误时的行为； -f：强制执行修改，即使发生错误； -i：设置相邻两次文件系统检查的相隔时间； -j：为“ext2”文件系统添加日志功能，将其转换为“ext3”文件系统； -l：显示文件超级块内容； -L：设置文件系统卷标； -m：显示文件保留块的百分比； -M：设置文件系统最后被加载到的目录； -o：设置或清除文件系统加载的特性或选项； -O：设置或清除文件系统的特性或选项； -r：设置文件系统保留块的大小； -T：设置文件系统上次被检查的时间； -u：设置可以使用文件系统保留块的用户； -U：设置文件系统的UUID。", "参数": "文件系统：指定调整的文件系统或者其对应的设备文件名。", "实例": "tune2fs -c 30 /dev/hda1 设置强制检查前文件系统可以挂载的次数 tune2fs -c -l /dev/hda1 关闭强制检查挂载次数限制。 tune2fs -i 10 /dev/hda1 10天后检查 tune2fs -i 1d /dev/hda1 1天后检查 tune2fs -i 3w /dev/hda1 3周后检查 tune2fs -i 6m /dev/hda1 半年后检查 tune2fs -i 0 /dev/hda1 禁用时间检查 tune2fs -j /dev/hda1 添加日志功能，将ext2转换成ext3文件系统 tune2fs -r 40000 /dev/hda1 调整/dev/hda1分区的保留空间为40000个磁盘块 tune2fs -o acl,user_xattr /dev/hda1 设置/dev/hda1挂载选项，启用Posix Access Control Lists和用户指定的扩展属性", "class": "文件系统管理"}
{"title": "sync命令", "语法": "sync(选项)", "选项": "--help：显示帮助； --version：显示版本信息。", "buffer与cache": "buffer：为了解决写磁盘的效率\ncache：为了解决读磁盘的效率", "class": "文件系统管理"}
{"title": "swapoff命令", "语法": "swapoff(选项)(参数)", "选项": "-a：关闭配置文件“/etc/fstab”中所有的交换空间。", "参数": "交换空间：指定需要激活的交换空间，可以是交换文件和交换分区，如果是交换分区则指定交换分区对应的设备文件。", "实例": "关闭交换分区", "class": "文件系统管理"}
{"title": "swapon命令", "语法": "swapon(选项)(参数)", "选项": "-a：将/etc/fstab文件中所有设置为swap的设备，启动为交换区； -h：显示帮助； -p<优先顺序>：指定交换区的优先顺序； -s：显示交换区的使用状况； -V：显示版本信息。", "参数": "交换空间：指定需要激活的交换空间，可以是交换文件和交换分区，如果是交换分区则指定交换分区对应的设备文件。", "实例": "mkswap -c /dev/hdb4 （-c是检查有无坏块） swapon -v /dev/hdb4 swapon -s Filename type Size Used Priority /dev/hda5 partition 506008 96 -1 /dev/hdb4 partition 489972 0 -2", "class": "文件系统管理"}
{"title": "quota命令", "语法": "quota(选项)(参数)", "选项": "-g：列出群组的磁盘空间限制； -q：简明列表，只列出超过限制的部分； -u：列出用户的磁盘空间限制； -v：显示该用户或群组，在所有挂入系统的存储设备的空间限制； -V：显示版本信息。", "参数": "用户或者工作组：指定要显示的用户或者工作组。", "实例": "我们可以限制某一群组所能使用的最大磁盘配额，而且可以再限制某一使用者的最大磁盘配额 ，好比做一个收费的应用，vip可以得到空间更大一些。另外，以 Link 的方式，来使邮件可以作为限制的配额（更改/var/spool/mail 这个路径），不2，需要重新再规划一个硬盘！直接使用 Link 的方式指向 /home （或者其它已经做好的 quota 磁盘）就可以！这通常是用在原本规划不好，但是却又不想要更动原有主机架构的情况中！", "class": "文件系统管理"}
{"title": "quotastats命令", "语法": "quotastats", "实例": "显示磁盘配额限制状态", "class": "文件系统管理"}
{"title": "edquota命令", "语法": "edquota(选项)(参数)", "选项": "-u：设置用户的quota，这是预设的参数； -g：设置群组的quota； -p<源用户名称>：将源用户的quota设置套用至其他用户或群组； -t：设置宽限期限。", "参数": "用户：指定要编辑磁盘配额限制的用户名或者工作组。", "实例": "配置系统的磁盘配额支持", "class": "文件系统管理"}
{"title": "quotaon命令", "语法": "quotaon(选项)(参数)", "选项": "-a：开启在/ect/fstab文件里，有加入quota设置的分区的空间限制； -g：开启群组的磁盘空间限制； -u：开启用户的磁盘空间限制； -v：显示指令指令执行过程。", "参数": "文件系统：指定要激活磁盘配额功能的文件系统。", "class": "文件系统管理"}
{"title": "quotacheck命令", "语法": "quotacheck(选项)(参数)", "选项": "-a：扫描在/etc/fstab文件里，有加入quota设置的分区； -d：详细显示指令执行过程，便于排错或了解程序执行的情形； -g：扫描磁盘空间时，计算每个群组识别码所占用的目录和文件数目； -R：排除根目录所在的分区； -u：扫描磁盘空间时，计算每个用户识别码所占用的目录和文件数目； -v：显示指令执行过程。", "参数": "文件系统：指定要扫描的文件系统。", "实例": "将所有的在/etc/mtab内，含有quota支持的partition进行扫描：", "class": "文件系统管理"}
{"title": "quotaoff命令", "语法": "quotaoff(选项)(参数)", "选项": "-a：关闭在/etc/fstab文件里，有加入quota设置的分区的空间限制； -g：关闭群组的磁盘空间限制； -u：关闭用户的磁盘空间限制； -v：显示指令执行过程。", "参数": "文件系统：指定要关闭磁盘配额功能的文件系统。", "class": "文件系统管理"}
{"title": "mkfs命令", "语法": "mkfs(选项)(参数)", "选项": "fs：指定建立文件系统时的参数； -t<文件系统类型>：指定要建立何种文件系统； -v：显示版本信息与详细的使用方法； -V：显示简要的使用方法； -c：在制做档案系统前，检查该partition是否有坏轨。", "参数": "文件系统：指定要创建的文件系统对应的设备文件名；\n块数：指定文件系统的磁盘块数。", "实例": "在/dev/hda5上建一个msdos的档案系统，同时检查是否有坏轨存在，并且将过程详细列出来：", "class": "文件系统管理"}
{"title": "mountpoint命令", "语法": "mountpoint(选项)(参数)", "选项": "-q：不打印任何信息； -d：打印文件系统的主设备号和次设备号； -x：打印块数设备的主设备号和次设备号。", "参数": "目录：指定要判断的目录。", "实例": "查看/mnt目录是不是挂载点：", "class": "文件系统管理"}
{"title": "umount命令", "语法": "umount(选项)(参数)", "选项": "-a：卸除/etc/mtab中记录的所有文件系统； -h：显示帮助； -n：卸除时不要将信息存入/etc/mtab文件中； -r：若无法成功卸除，则尝试以只读的方式重新挂入文件系统； -t<文件系统类型>：仅卸除选项中所指定的文件系统； -v：执行时显示详细的信息； -V：显示版本信息。", "参数": "文件系统：指定要卸载的文件系统或者其对应的设备文件名。", "实例": "下面两条命令分别通过设备名和挂载点卸载文件系统，同时输出详细信息：", "class": "文件系统管理"}
{"title": "e2fsck命令", "语法": "e2fsck(选项)(参数)", "选项": "-a：不询问使用者意见，便自动修复文件系统； -b<superblock>：指定superblock，而不使用预设的superblock； -B<区块大小>：指定区块的大小，单位为字节； -c：一并执行badblocks，以标示损坏的区块； -C：将检查过程的信息完整记录在file descriptor中，使得整个检查过程都能完整监控； -d：显示排错信息； -f：即使文件系统没有错误迹象，仍强制地检查正确性； -F：执行前先清除设备的缓冲区； -l<文件>：将文件中指定的区块加到损坏区块列表； -L<文件>：先清除损坏区块列表，再将文件中指定的区块加到损坏区块列表。因此损坏区块列表的区块跟文件中指定的区块是一样的； -n：以只读模式开启文件系统，并采取非互动方式执行，所有的问题对话均设置以\"no\"回答； -p：不询问使用者意见，便自动修复文件系统； -r：此参数只为了兼容性而存在，并无实际作用； -s：如果文件系统的字节顺序不适当，就交换字节顺序，否则不做任何动作； -S：不管文件系统的字节顺序，一律交换字节顺序； -t：显示时间信息； -v：执行时显示详细的信息； -V：显示版本信息； -y：采取非互动方式执行，所有的问题均设置以\"yes\"回答。", "参数": "文件系统或者分区：指定文件系统或者分区所对应的设备文件名。", "实例": "检查/dev/sda1是否有问题，如发现问题便自动修复：", "class": "文件系统管理"}
{"title": "dumpe2fs命令", "语法": "dumpe2fs(选项)(参数)", "选项": "-b：打印文件系统中预留的块信息； -ob<超级块>：指定检查文件系统时使用的超级块； -OB<块大小>：检查文件系统时使用的指定的块大小； -h：仅显示超级块信息； -i：从指定的文件系统映像文件中读取文件系统信息； -x：以16进制格式打印信息块成员。", "参数": "文件系统：指定要查看信息的文件系统。", "实例": "dumpe2fs /dev/hda1 dumpe2fs 1.39 (29-May-2006) Filesystem volume name: / last mounted on: <not available> Filesystem UUID: 845ccd40-1f3b-4729-a63d-cb80f51b082a Filesystem magic number: 0xEF53 Filesystem revision #: 1 (dynamic) Filesystem features: has_journal ext_attr resize_inode dir_index filetype needs_recovery sparse_super large_file Default mount options: user_xattr acl Filesystem state: clean Errors behavior: Continue Filesystem OS type: Linux Inode count: 5242880 Block count: 5241817 Reserved block count: 262090 free blocks: 4434157 Free inodes: 5170836 First block: 0 Block size: 4096 Fragment size: 4096 Reserved GDT blocks: 1022 Blocks per group: 32768 Fragments per group: 32768 Inodes per group: 32768 Inode blocks per group: 1024 Filesystem created: Sun Mar 24 02:09:14 2013 Last mount time: Thu Aug 1 16:42:07 2013 Last write time: Thu Aug 1 16:42:07 2013 Mount count: 10 Maximum mount count: -1 Last checked: Sun Mar 24 02:09:14 2013 Check interval: 0 (<none>) Reserved blocks uid: 0 (user root) Reserved blocks gid: 0 (group root) First inode: 11 Inode size: 128 Journal inode: 8 First orphan inode: 3735559 Default directory hash: tea Directory Hash Seed: e3f7162e-1194-4161-805d-763db89dbc69 Journal backup: inode blocks Journal size: 128M Group 0: (Blocks 0-32767) Primary superblock at 0, Group descriptors at 1-2 Reserved GDT blocks at 3-1024 Block bitmap at 1025 (+1025), Inode bitmap at 1026 (+1026) Inode table at 1027-2050 (+1027) 0 free blocks, 32757 free inodes, 2 directories Free blocks: Free inodes: 12-32768 ...", "class": "文件系统管理"}
{"title": "fsck命令", "语法": "fsck(选项)(参数)", "选项": "-a：自动修复文件系统，不询问任何问题； -A：依照/etc/fstab配置文件的内容，检查文件内所列的全部文件系统； -N：不执行指令，仅列出实际执行会进行的动作； -P：当搭配\"-A\"参数使用时，则会同时检查所有的文件系统； -r：采用互动模式，在执行修复时询问问题，让用户得以确认并决定处理方式； -R：当搭配\"-A\"参数使用时，则会略过/目录的文件系统不予检查； -s：依序执行检查作业，而非同时执行； -t<文件系统类型>：指定要检查的文件系统类型； -T：执行fsck指令时，不显示标题信息； -V：显示指令执行过程。", "参数": "文件系统：指定要查看信息的文件系统。", "实例": "linux的文件系统损坏会导致linux不正常关机，出错的时候如果系统告诉你是哪一块硬盘的分区有问题，比如是/dev/hda2，接着用如下的命令去对付它：", "class": "文件系统管理"}
{"title": "mount命令", "语法": "mount(选项)(参数)", "选项": "-V：显示程序版本； -l：显示已加载的文件系统列表； -h：显示帮助信息并退出； -v：冗长模式，输出指令执行的详细信息； -n：加载没有写入文件“/etc/mtab”中的文件系统； -r：将文件系统加载为只读模式； -a：加载文件“/etc/fstab”中描述的所有文件系统。", "参数": "设备文件名：指定要加载的文件系统对应的设备名；\n加载点：指定加载点目录。", "实例": "mount -t auto /dev/cdrom /mnt/cdrom mount: mount point /mnt/cdrom does not exist /mnt/cdrom目录不存在，需要先创建。 cd /mnt -bash: cd: /mnt: No such file or directory mkdir -p /mnt/cdrom 创建/mnt/cdrom目录 ls bin dev home lib media mnt proc sbin srv tmp var boot etc initrd lost+found misc opt root selinux sys usr mount -t auto /dev/cdrom /mnt/cdrom 挂载cdrom mount: block device /dev/cdrom is write-protected, mounting read-only 挂载成功 ll /mnt/cdrom 查看cdrom里面内容 total 859 dr-xr-xr-x 4 root root 2048 Sep 4 2005 CentOS -r--r--r-- 2 root root 8859 Mar 19 2005 centosdocs-man.css -r--r--r-- 9 root root 18009 Mar 1 2005 GPL dr-xr-xr-x 2 root root 241664 May 7 02:32 headers dr-xr-xr-x 4 root root 2048 May 7 02:23 images dr-xr-xr-x 2 root root 4096 May 7 02:23 isolinux dr-xr-xr-x 2 root root 18432 May 2 18:50 NOTES -r--r--r-- 2 root root 5443 May 7 01:49 RELEASE-NOTES-en.html dr-xr-xr-x 2 root root 2048 May 7 02:34 repodata -r--r--r-- 9 root root 1795 Mar 1 2005 rpm-GPG-KEY -r--r--r-- 2 root root 1795 Mar 1 2005 RPM-GPG-KEY-centos4 -r--r--r-- 1 root root 571730 May 7 01:39 yumgroups.xml", "class": "文件系统管理"}
{"title": "mke2fs命令", "语法": "mke2fs(选项)(参数)", "选项": "-b<区块大小>：指定区块大小，单位为字节； -c；检查是否有损坏的区块； -f<不连续区段大小>：指定不连续区段的大小，单位为字节； -F：不管指定的设备为何，强制执行mke2fs； -i<字节>：指定\"字节/inode\"的比例； -N<inode数>：指定要建立的inode数目； -l<文件>：从指定的文件中，读取文件西中损坏区块的信息； -L<标签>：设置文件系统的标签名称； -m<百分比值>：指定给管理员保留区块的比例，预设为5%； -M：记录最后一次挂入的目录； -q：执行时不显示任何信息； -r：指定要建立的ext2文件系统版本； -R=<区块数>：设置磁盘阵列参数； -S：仅写入superblock与group descriptors，而不更改inode able inode bitmap以及block bitmap； -v：执行时显示详细信息； -V：显示版本信息。", "参数": "设备文件：指定要创建的文件系统的分区设备文件名；\n块数：指定要创建的文件系统的磁盘块数量。", "实例": "创建指定的ext2文件系统。", "class": "文件系统管理"}
{"title": "RHCSA 系列（二）: 如何進行文件和目錄管理命令", "创建、删除、复制和移动文件及目录": "文件和目錄管理是每一個系統管理員都應該掌握的必備技能。它包括了從頭開始的創建、刪除文本文件（每個程序的核心配置）以及目錄（你用來組織文件和其它目錄），以及識別已有文件的類型。", "输入输出重定向以及管道": "命令行環境提供了兩個非常有用的功能：允許重定向命令的輸入和輸出為另一個文件，以及發送命令的輸出到另一個命令，這分別稱為重定向和管道。", "归档，压缩，解包，解压文件": "如果你需要傳輸、備份、或者通過郵件發送一組文件，你可以使用一個存檔（或打包）工具，如 tar，通常與gzip，bzip2，或 xz 等壓縮工具配合使用。", "创建软连接和硬链接": "在Linux中，有2種類型的鏈接文件：硬鏈接和軟（也稱為符號）鏈接。因為硬鏈接文件只是現存文件的另一個名字，使用相同的 inode 號，它指向實際的數據；而符號鏈接只是指向的文件名。", "class": "Shell内建命令"}
{"title": "Pstree命令", "class": "Shell内建命令"}
{"title": "Vmstat命令", "class": "Shell内建命令"}
{"title": "xeyes命令", "class": "Shell内建命令"}
{"title": "fg , bg命令", "class": "Shell内建命令"}
{"title": "w命令", "class": "Shell内建命令"}
{"title": "sh命令", "语法": "bash [options] [file]", "选项": "-c string：命令从-c后的字符串读取。 -i：实现脚本交互。 -n：进行shell脚本的语法检查。 -x：实现shell脚本逐条语句的跟踪。", "实例": "使用-x选项跟踪脚本调试shell脚本，能打印出所执行的每一行命令以及当前状态：", "class": "Shell内建命令"}
{"title": "trap命令", "语法": "trap [-lp] [[arg] sigspec ...]", "选项参数说明": "如果arg参数缺省或者为“-”，每个接收到的sigspec信号都将会被重置为它们进入shell时的值；", "信号": "信号是一种进程间通信机制，它给应用程序提供一种异步的软件中断，使应用程序有机会接受其他程序活终端发送的命令(即信号)。应用程序收到信号后，有三种处理方式：忽略，默认，或捕捉。进程收到一个信号后，会检查对该信号的处理机制。如果是SIG_IGN，就忽略该信号；如果是SIG_DFT，则会采用系统默认的处理动作，通常是终止进程或忽略该信号；如果给该信号指定了一个处理函数(捕捉)，则会中断当前进程正在执行的任务，转而去执行该信号的处理函数，返回后再继续执行被中断的任务。", "捕获信号": "当你按下 Ctrl + C 键或 Break 键在终端一个shell程序的执行过程中，正常程序将立即终止，并返回命令提示符。这可能并不总是可取的。例如，你可能最终留下了一堆临时文件，将不会清理。", "class": "Shell内建命令"}
{"title": "let命令", "语法": "let arg [arg ...] #arg代表运算式", "用法": "自加操作let no++\n自减操作let no--\n简写形式let no+=10，let no-=20，分别等同于let no=no+10，let no=no-20", "实例": "#!/bin/bash let a=5+4 b=9-3 echo $a $b", "class": "Shell内建命令"}
{"title": "seq命令", "语法": "seq [选项]... 尾数 seq [选项]... 首数 尾数 seq [选项]... 首数 增量 尾数", "选项": "-f, --format=格式 使用printf 样式的浮点格式 -s, --separator=字符串 使用指定字符串分隔数字（默认使用：\\n） -w, --equal-width 在列前添加0 使得宽度相同", "实例": "-f选项：指定格式", "class": "Shell内建命令"}
{"title": "tput命令", "什么是 terminfo 数据库？": "UNIX 系统上的 terminfo 数据库用于定义终端和打印机的属性及功能，包括各设备（例如，终端和打印机）的行数和列数以及要发送至该设备的文本的属性。UNIX 中的几个常用程序都依赖 terminfo 数据库提供这些属性以及许多其他内容，其中包括 vi 和 emacs 编辑器以及 curses 和 man 程序。", "实例": "使输出的字符串有颜色，底色，加粗：", "class": "Shell内建命令"}
{"title": "apropos命令", "语法": "apropos [-dalhvV] [-e|-w|-r] [-s section] [-m system[,...]] [-M path] [-L locale] [-C file] keyword ...", "选项": "-d, --debug：输出调试信息。 -v, --verbose：输出详细的警告信息。 -r, -- regex：将每个keyword作为正则表达式解释。这是默认行为。每个keyword将匹配手册页和描述。 -w, --wildcard：将每个keyword作为shell样式的通配符解释。 -e, --exact：每个keyword将精确匹配手册页名字和描述。 -a, --and：只显示匹配所有keyword的手册页和描述。默认显示匹配任何keyword的项。 -l, --long：不根据终端宽度缩减输出。 -s section, --section section：只查找指定的手册section。 -m system[,...], --systems=system[,...]：用于查找其它操作系统的手册页。 -M path, --manpath=path：指定从其它以冒号分隔的手册页层次查找。默认使用$MANPATH环境变量。这个选项覆盖$MANPATH的内容。 -L locale, --locale=locale：apropos调用C函数setlocale来得到当前本地化信息，包括$LC_MESSAGE和$LANG。使用该选项提供一个locale字符串来临时更改本地化信息。 -C file, --config-file=file：使用这个用户配置文件而不是默认的~/.manpath。 -h, --help：打印帮助信息并退出。 -V, --version：打印版本信息并退出。", "返回值": "返回0表示成功，1表示用法、语法或配置文件错误，2表示操作错误，16表示没有找到匹配的内容。", "实例": "[root@localhost ~]# man -k who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::whoami (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid [root@localhost ~]# apropos who at.allow [at] (5) - determine who can submit jobs via at or batch at.deny [at] (5) - determine who can submit jobs via at or batch jwhois (1) - client for the whois service jwhois (rpm) - Internet whois/nicname client. Net::LDAP::Extension::WhoAmI (3pm) - LDAP Who am I? Operation w (1) - Show who is logged on and what they are doing who (1p) - display who is on the system who (1) - show who is logged on whoami (1) - print effective userid", "class": "Shell内建命令"}
{"title": "set命令", "语法": "set(选项)(参数)", "选项": "-a：标示已修改的变量，以供输出至环境变量。 -b：使被中止的后台程序立刻回报执行状态。 -C：转向所产生的文件无法覆盖已存在的文件。 -d：Shell预设会用杂凑表记忆使用过的指令，以加速指令的执行。使用-d参数可取消。 -e：若指令传回值不等于0，则立即退出shell。 -f：取消使用通配符。 -h：自动记录函数的所在位置。 -H Shell：可利用\"!\"加<指令编号>的方式来执行history中记录的指令。 -k：指令所给的参数都会被视为此指令的环境变量。 -l：记录for循环的变量名称。 -m：使用监视模式。 -n：只读取指令，而不实际执行。 -p：启动优先顺序模式。 -P：启动-P参数后，执行指令时，会以实际的文件或目录来取代符号连接。 -t：执行完随后的指令，即退出shell。 -u：当执行时使用到未定义过的变量，则显示错误信息。 -v：显示shell所读取的输入值。 -x：执行指令后，会先显示该指令及所下的参数。", "参数": "取消某个set曾启动的参数。", "实例": "使用declare命令定义一个新的环境变量\"mylove\"，并且将其值设置为\"Visual C++\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "command命令", "语法": "command(参数)", "参数": "指令：需要调用的指令及参数。", "实例": "使用command命令调用执行echo Linux，输入如下命令：", "class": "Shell内建命令"}
{"title": "dris命令", "语法": "dris(选项)", "选项": "+n：显示从左边算起第n笔的目录； -n：显示从右边算起第n笔的目录； -l：显示目录完整的记录。", "class": "Shell内建命令"}
{"title": "fc命令", "语法": "fc(选项)(参数)", "选项": "-l：显示历史命令； -n：显示历史命令时，不显示编号； -r：反序显示历史命令。", "参数": "起始指令编号：指定要编辑的起始指令编号；\n结尾指令编号：指定要编辑的结尾指令编号。", "实例": "使用该指令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "bind命令", "语法": "bind(选项)", "选项": "-d：显示按键配置的内容； -f<按键配置文件>：载入指定的按键配置文件； -l：列出所有的功能； -m<按键配置>：指定按键配置； -q<功能>：显示指定功能的按键； -v：列出目前的按键配置与其功能。", "实例": "bind -x '\"\\C-l\":ls -l' #直接按 CTRL+L 就列出目录", "class": "Shell内建命令"}
{"title": "readonly命令", "语法": "readonly(选项)(参数)", "选项": "-f：定义只读函数； -a：定义只读数组变量； -p：显示系统中全部只读变量列表。", "参数": "变量定义：定义变量，格式为“变量名=‘变量值’”。", "实例": "使用readonly命令显示系统中所有的已经定义的只读变量，输入如下命令：", "class": "Shell内建命令"}
{"title": "read命令", "语法": "read(选项)(参数)", "选项": "-p：指定读取值时的提示符； -t：指定读取值时等待的时间（秒）。", "参数": "变量：指定读取值的变量名。", "实例": "下面的列表给出了read命令的常用方式：", "class": "Shell内建命令"}
{"title": "bg命令", "语法": "bg(参数)", "参数": "作业标识：指定需要放到后台的作业标识号。", "实例": "使用bg命令将任务号为1的任务放到后台继续执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "ulimit命令", "语法": "ulimit(选项)", "选项": "-a：显示目前资源限制的设定； -c <core文件上限>：设定core文件的最大值，单位为区块； -d <数据节区大小>：程序数据节区的最大值，单位为KB； -f <文件大小>：shell所能建立的最大文件，单位为区块； -H：设定资源的硬性限制，也就是管理员所设下的限制； -m <内存大小>：指定可使用内存的上限，单位为KB； -n <文件数目>：指定同一时间最多可开启的文件数； -p <缓冲区大小>：指定管道缓冲区的大小，单位512字节； -s <堆叠大小>：指定堆叠的上限，单位为KB； -S：设定资源的弹性限制； -t <CPU时间>：指定CPU使用时间的上限，单位为秒； -u <程序数目>：用户最多可开启的程序数目； -v <虚拟内存大小>：指定可使用的虚拟内存上限，单位为KB。", "实例": "[root@localhost ~]# ulimit -a core file size (blocks, -c) 0 #core文件的最大值为100 blocks。 data seg size (kbytes, -d) unlimited #进程的数据段可以任意大。 scheduling priority (-e) 0 file size (blocks, -f) unlimited #文件可以任意大。 pending signals (-i) 98304 #最多有98304个待处理的信号。 max locked memory (kbytes, -l) 32 #一个任务锁住的物理内存的最大值为32KB。 max memory size (kbytes, -m) unlimited #一个任务的常驻物理内存的最大值。 open files (-n) 1024 #一个任务最多可以同时打开1024的文件。 pipe size (512 bytes, -p) 8 #管道的最大空间为4096字节。 POSIX message queues (bytes, -q) 819200 #POSIX的消息队列的最大值为819200字节。 real-time priority (-r) 0 stack size (kbytes, -s) 10240 #进程的栈的最大值为10240字节。 cpu time (seconds, -t) unlimited #进程使用的CPU时间。 max user processes (-u) 98304 #当前用户同时打开的进程（包括线程）的最大个数为98304。 virtual memory (kbytes, -v) unlimited #没有限制进程的最大地址空间。 file locks (-x) unlimited #所能锁住的文件的最大个数没有限制。", "class": "Shell内建命令"}
{"title": "enable命令", "语法": "enable(选项)(参数)", "选项": "-n：关闭指定的内部命令； -a：显示所有激活的内部命令； -f：从指定文件中读取内部命令。", "参数": "内部命令：指定要关闭或激活的内部命令。", "实例": "使用enable命令显示所有激活的内部命令：", "class": "Shell内建命令"}
{"title": "declare命令", "语法": "declare(选项)(参数)", "选项": "+/-：\"-\"可用来指定变量的属性，\"+\"则是取消变量所设的属性； -f：仅显示函数； r：将变量设置为只读； x：指定的变量会成为环境变量，可供shell以外的程序来使用； i：[设置值]可以是数值，字符串或运算式。", "参数": "shell变量：声明shell变量，格式为“变量名=值”。", "实例": "首先使用declare命令定义shell变量\"test\"，并且将其值设置为\"man.linuxde.net\"，输入如下命令：", "class": "Shell内建命令"}
{"title": "wait命令", "语法": "wait(参数)", "参数": "进程或作业标示：指定进程号或者作业号。", "实例": "使用命令wait等待作业号为1的作业完成后再返回，输入如下命令：", "class": "Shell内建命令"}
{"title": "builtin命令", "语法": "builtin(参数)", "参数": "shell内部命令：指定需要执行的shell内部命令。", "实例": "使用builtin命令执行shell内部命alias显示命令别名，输入如下命令：", "class": "Shell内建命令"}
{"title": "shopt命令", "语法": "shopt(选项)(参数)", "选项": "-s：激活指定的shell行为选项； -u：关闭指定的shell行为选项。", "参数": "shell选项：指定要操作的shell选项。", "实例": "使用shopt命令显示当前所有可以设置的shell操作选项，输入如下命令：", "class": "Shell内建命令"}
{"title": "exit命令", "语法": "exit(参数)", "参数": "返回值：指定shell返回值。", "实例": "退出当前shell：", "class": "Shell内建命令"}
{"title": "jobs命令", "语法": "jobs(选项)(参数)", "选项": "-l：显示进程号； -p：仅任务对应的显示进程号； -n：显示任务状态的变化； -r：仅输出运行状态（running）的任务； -s：仅输出停止状态（stoped）的任务。", "参数": "任务标识号：指定要显示的任务识别号。", "实例": "使用jobs命令显示当前系统的任务列表，输入如下命令：", "class": "Shell内建命令"}
{"title": "help命令", "语法": "help(选项)(参数)", "选项": "-s：输出短格式的帮助信息。仅包括命令格式。", "参数": "内部命令：指定需要显示帮助信息的shell内部命令。", "实例": "使用help命令显示shell内部shopt命令的帮助信息，输入如下命令：", "class": "Shell内建命令"}
{"title": "history命令", "语法": "history(选项)(参数)", "选项": "-c：清空当前历史命令； -a：将历史命令缓冲区中命令写入历史命令文件中； -r：将历史命令文件中的命令读入当前历史命令缓冲区； -w：将当前历史命令缓冲区命令写入历史命令文件中。", "参数": "n：打印最近的n条历史命令。", "实例": "使用history命令显示最近使用的10条历史命令，输入如下命令：", "class": "Shell内建命令"}
{"title": "logout命令", "语法": "logout", "class": "Shell内建命令"}
{"title": "export命令", "语法": "export(选项)(参数)", "选项": "-f：代表[变量名称]中为函数名称； -n：删除指定的变量。变量实际上并未删除，只是不会输出到后续指令的执行环境中； -p：列出所有的shell赋予程序的环境变量。", "参数": "变量：指定要输出或者删除的环境变量。", "实例": "一般来说，配置交叉编译工具链的时候需要指定编译工具的路径，此时就需要设置环境变量。查看已经存在的环境变量：", "class": "Shell内建命令"}
{"title": "exec命令", "语法": "exec(选项)(参数)", "选项": "-c：在空环境中执行指定的命令。", "参数": "指令：要执行的指令和相应的参数。", "实例": "首先使用echo命令将文本“Linux C++”进行输出，输入如下命令：", "class": "Shell内建命令"}
{"title": "env命令", "语法": "env(选项)(参数)", "选项": "-i：开始一个新的空的环境； -u<变量名>：从当前环境中删除指定的变量。", "参数": "变量定义：定义在新的环境中变量，定义多个变量定义用空格隔开。格式为“变量名=值”；\n指定：指定要执行的指令和参数。", "实例": "[root@localhost ~]# env hostname=LinServ-1 TERM=linux SHELL=/bin/bash HISTSIZE=1000 SSH_CLIENT=192.168.2.111 2705 22 SSH_TTY=/dev/pts/0 USER=root LS_COLORS=no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:bd=40;33;01:cd=40;33;01:or=01;05;37;41:mi=01;05;37;41:ex=01;32:*.cmd=01;32:*.exe=01;32:*.com=01;32:*.btm=01;32:*.bat=01;32:*.sh=01;32:*.csh=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.bz=01;31:*.tz=01;31:*.rpm=01;31:*.cpio=01;31:*.jpg=01;35:*.gif=01;35:*.bmp=01;35:*.xbm=01;35:*.xpm=01;35:*.png=01;35:*.tif=01;35: mail=/var/spool/mail/root PATH=/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin INPUTRC=/etc/inputrc pwd=/root LANG=zh_CN.UTF-8 SHLVL=1 HOME=/root logname=root SSH_CONNECTION=192.168.2.111 2705 192.168.2.2 22 LESSOPEN=|/usr/bin/lesspipe.sh %s G_BROKEN_FILENAMES=1 _=/bin/env", "class": "Shell内建命令"}
{"title": "unset命令", "语法": "unset(选项)(参数)", "选项": "-f：仅删除函数； -v：仅删除变量。", "参数": "shell变量或函数：指定要删除的shell变量或shell函数。", "实例": "使用unset命令将前面所创建的环境变量mylove及其对应的值进行删除，输入如下命令：", "class": "Shell内建命令"}
{"title": "kill命令", "语法": "kill(选项)(参数)", "选项": "-a：当处理当前进程时，不限制命令名和进程号的对应关系； -l <信息编号>：若不加<信息编号>选项，则-l参数会列出全部的信息名称； -p：指定kill 命令只打印相关进程的进程号，而不发送任何信号； -s <信息名称或编号>：指定要送出的信息； -u：指定用户。", "参数": "进程或作业识别号：指定要删除的进程或作业。", "实例": "列出所有信号名称：", "class": "Shell内建命令"}
{"title": "unalias命令", "语法": "unalias(选项)(参数)", "选项": "-a：取消所有命令别名。", "参数": "命令别名：指定要取消的命令别名。", "实例": "使用unalias命令将已经设置的命令别名\"cc\"取消，输入如下命令：", "class": "Shell内建命令"}
{"title": "type命令", "语法": "type(选项)(参数)", "选项": "-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”； -p：如果给出的指令为外部指令，则显示其绝对路径； -a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。", "参数": "指令：要显示类型的指令。", "实例": "[root@localhost ~]# type ls ls is aliased to `ls --color=tty' [root@localhost ~]# type cd cd is a shell builtin [root@localhost ~]# type date date is /bin/date [root@localhost ~]# type mysql mysql is /usr/bin/mysql [root@localhost ~]# type nginx -bash: type: nginx: not found [root@localhost ~]# type if if is a shell keyword [root@localhost ~]# type which which is aliased to `alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde' [root@localhost ~]# type -a cd cd is a shell builtin [root@localhost ~]# type -a grep grep is /bin/grep", "class": "Shell内建命令"}
{"title": "fg命令", "语法": "fg(参数)", "参数": "作业标识：指定要放到前台的作业标识号。", "实例": "使用fg命令将任务号为1的任务从后台执行转换到前台执行，输入如下命令：", "class": "Shell内建命令"}
{"title": "alias命令", "语法": "alias(选项)(参数)", "选项": "-p：打印已经设置的命令别名。", "参数": "命令别名设置：定义命令别名，格式为“命令别名=‘实际命令’”。", "实例": "alias 的基本使用方法为：", "class": "Shell内建命令"}
{"title": "黑客世界的隱秘江湖：1個漏洞叫價300萬命令", "class": "硬件管理"}
{"title": "Windows的Linux子系统现已支持“复制/粘贴”操作命令", "class": "硬件管理"}
{"title": "losetup命令", "语法": "losetup [ -e encryption ] [ -o offset ] loop_device file losetup [ -d ] loop_device", "选项": "-a 显示所有循环设备的状态。 -d 卸除设备。 -e <加密选项> 启动加密编码 。 -f 寻找第一个未使用的循环设备。 -o <偏移量>设置数据偏移量，单位是字节。", "参数": "loop_device：循环设备可以是/dev/loop0, /dev/loop1 ... /dev/loop7。\nfile：要与循环设备相关联的文件名，这个往往是一个磁盘镜象文件，如 *.img", "loop设备介绍": "在类 UNIX 系统里，loop 设备是一种伪设备(pseudo-device)，或者也可以说是仿真设备。它能使我们像块设备一样访问一个文件。在使用之前，一个 loop 设备必须要和一个文件进行连接。这种结合方式给用户提供了一个替代块特殊文件的接口。因此，如果这个文件包含有一个完整的文件系统，那么这个文件就可以像一个磁盘设备一样被 mount 起来。", "实例": "创建空的磁盘镜像文件，这里创建一个1.44M的软盘：", "class": "硬件管理"}
{"title": "dmidecode命令", "语法": "dmidecode [选项]", "选项": "-d：(default:/dev/mem)从设备文件读取信息，输出内容与不加参数标准输出相同。 -h：显示帮助信息。 -s：只显示指定DMI字符串的信息。(string) -t：只显示指定条目的信息。(type) -u：显示未解码的原始条目内容。 --dump-bin file：将DMI数据转储到一个二进制文件中。 --from-dump FILE：从一个二进制文件读取DMI数据。 -V：显示版本信息。", "实例": "查看服务器型号：dmidecode | grep 'Product Name' 查看主板的序列号：dmidecode |grep 'Serial Number' 查看系统序列号：dmidecode -s system-serial-number 查看内存信息：dmidecode -t memory 查看OEM信息：dmidecode -t 11", "class": "硬件管理"}
{"title": "hwclock命令", "语法": "hwclock(选项)", "选项": "--adjust：hwclock每次更改硬件时钟时，都会记录在/etc/adjtime文件中。使用--adjust参数，可使hwclock根据先前的记录来估算硬件时钟的偏差，并用来校正目前的硬件时钟； --debug：显示hwclock执行时详细的信息； --directisa：hwclock预设从/dev/rtc设备来存取硬件时钟。若无法存取时，可用此参数直接以I/O指令来存取硬件时钟； --hctosys：将系统时钟调整为与目前的硬件时钟一致； --set --date=<日期与时间>：设定硬件时钟； --show：显示硬件时钟的时间与日期； --systohc：将硬件时钟调整为与目前的系统时钟一致； --test：仅测试程序，而不会实际更改硬件时钟； --utc：若要使用格林威治时间，请加入此参数，hwclock会执行转换的工作； --version：显示版本信息。", "实例": "设置硬件时间要依赖于操作系统时间，具体方法如下：", "class": "硬件管理"}
{"title": "cdrecord命令", "语法": "cdrecord(选项)(参数)", "选项": "-v：显示刻录光盘的详细过程； -eject：刻录完成后弹出光盘； speed=<刻录倍速>：指定光盘刻录的倍速； dev=<刻录机设备号>：指定使用“-scanbus”参数扫描到的刻录机的设备号； -scanbus：扫描系统中可用的刻录机。", "参数": "ISO文件：指定刻录光盘使用的ISO映像文件。", "实例": "查看系统所有 CD-R(w) 设备：", "class": "硬件管理"}
{"title": "setpci命令", "语法": "setpci(选项)(参数)", "选项": "-v：显示指令执行的细节信息； -f：当没有任何操作需要完成时，不显示任何信息； -D：测试模式，并不真正将配置信息写入寄存器； -d：仅显示给定厂商和设备的信息； -s：仅显示指定总线、插槽上的设备或设备上的功能块信息。", "参数": "PCI设备：指定要配置的PCI设备；\n操作：指定要完成的配置操作。", "实例": "Linux下调节笔记本屏幕亮度方法：", "class": "硬件管理"}
{"title": "lspci命令", "语法": "lspci(选项)", "选项": "-n：以数字方式显示PCI厂商和设备代码； -t：以树状结构显示PCI设备的层次关系，包括所有的总线、桥、设备以及它们之间的联接； -b：以总线为中心的视图； -d：仅显示给定厂商和设备的信息； -s：仅显示指定总线、插槽上的设备和设备上的功能块信息； -i：指定PCI编号列表文件，而不使用默认的文件； -m：以机器可读方式显示PCI设备信息。", "实例": "[root@localhost ~]# lspci 00:00.0 host bridge: Intel Corporation 5500 I/O Hub to ESI Port (rev 22) 00:01.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 1 (rev 22) 00:02.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 2 (rev 22) 00:03.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 3 (rev 22) 00:07.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 7 (rev 22) 00:08.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 8 (rev 22) 00:09.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 9 (rev 22) 00:0a.0 PCI bridge: Intel Corporation 5520/5500/X58 I/O Hub PCI Express Root Port 10 (rev 22) 00:10.0 PIC: Intel Corporation 5520/5500/X58 Physical and Link Layer Registers Port 0 (rev 22) 00:10.1 PIC: Intel Corporation 5520/5500/X58 Routing and Protocol Layer Registers Port 0 (rev 22) 00:11.0 PIC: Intel Corporation 5520/5500 Physical and Link Layer Registers Port 1 (rev 22) 00:11.1 PIC: Intel Corporation 5520/5500 Routing & Protocol Layer Register Port 1 (rev 22) 00:14.0 PIC: Intel Corporation 5520/5500/X58 I/O Hub System Management Registers (rev 22) 00:14.1 PIC: Intel Corporation 5520/5500/X58 I/O Hub GPIO and Scratch Pad Registers (rev 22) 00:14.2 PIC: Intel Corporation 5520/5500/X58 I/O Hub Control Status and RAS Registers (rev 22) 00:14.3 PIC: Intel Corporation 5520/5500/X58 I/O Hub Throttle Registers (rev 22) 00:16.0 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.1 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.2 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.3 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.4 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.5 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.6 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:16.7 System peripheral: Intel Corporation 5520/5500/X58 Chipset QuickData Technology Device (rev 22) 00:1a.0 USB controller: Intel Corporation 82801JI (ICH10 Family) USB UHCI Controller #4 00:1a.1 USB controller: Intel Corporation 82801JI (ICH10 Family) USB UHCI Controller #5 00:1a.7 USB controller: Intel Corporation 82801JI (ICH10 Family) USB2 EHCI Controller #2 00:1b.0 Audio device: Intel Corporation 82801JI (ICH10 Family) HD Audio Controller 00:1c.0 PCI bridge: Intel Corporation 82801JI (ICH10 Family) PCI Express Root Port 1 00:1c.4 PCI bridge: Intel Corporation 82801JI (ICH10 Family) PCI Express Root Port 5 00:1c.5 PCI bridge: Intel Corporation 82801JI (ICH10 Family) PCI Express Root Port 6 00:1d.0 USB controller: Intel Corporation 82801JI (ICH10 Family) USB UHCI Controller #1 00:1d.1 USB controller: Intel Corporation 82801JI (ICH10 Family) USB UHCI Controller #2 00:1d.2 USB controller: Intel Corporation 82801JI (ICH10 Family) USB UHCI Controller #3 00:1d.3 USB controller: Intel Corporation 82801JI (ICH10 Family) USB UHCI Controller #6 00:1d.7 USB controller: Intel Corporation 82801JI (ICH10 Family) USB2 EHCI Controller #1 00:1e.0 PCI bridge: Intel Corporation 82801 PCI Bridge (rev 90) 00:1f.0 ISA bridge: Intel Corporation 82801JIR (ICH10R) lpc Interface Controller 00:1f.2 IDE interface: Intel Corporation 82801JI (ICH10 Family) 4 port SATA IDE Controller #1 00:1f.3 SMBus: Intel Corporation 82801JI (ICH10 Family) SMBus Controller 00:1f.5 IDE interface: Intel Corporation 82801JI (ICH10 Family) 2 port SATA IDE Controller #2 01:01.0 VGA compatible controller: ASPEED Technology, Inc. ASPEED Graphics Family (rev 10) 02:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection 03:00.0 Ethernet controller: Intel Corporation 82574L Gigabit Network Connection 04:00.0 Serial Attached SCSI controller: LSI Logic / Symbios Logic SAS2008 PCI-Express Fusion-MPT SAS-2 [Falcon] (rev 03)", "class": "硬件管理"}
{"title": "lsusb命令", "语法": "lsusb(选项)", "选项": "-v：显示USB设备的详细信息； -s<总线：设备号>仅显示指定的总线和（或）设备号的设备； -d<厂商：产品>：仅显示指定厂商和产品编号的设备； -t：以树状结构显示无理USB设备的层次； -V：显示命令的版本信息。", "实例": "插入usb鼠标后执行lsusb的输出内容如下:", "class": "硬件管理"}
{"title": "arch命令", "语法": "arch", "实例": "arch x86_64", "class": "硬件管理"}
{"title": "volname命令", "语法": "volname(参数)", "参数": "设备文件名：指定要显示卷名称的设备。", "class": "硬件管理"}
{"title": "systool命令", "语法": "systool(选项)(参数)", "选项": "-a：显示被请求资源的属性； -b<总线>：显示指定总线的信息； -c<class>：显示指定类的信息； -d：仅显示设备； -h：显示指令的用法； -m<模块名称>：显示指定模块的信息； -p：显示资源的“sysfs”绝对路径； -v：显示所有属性； -A<属性>：显示请求资源的属性值； -D：仅显示驱动程序信息； -P：显示设备的父类。", "参数": "设备：指定要查看信息的设备名称。", "实例": "[root@localhost ~]# systool Supported sysfs buses: acpi i2c ide pci_express pci pcmcia platform pnp scsi serio usb Supported sysfs classes: backlight cpuid dma_v3 firmware graphics hidraw hwmon i2c-adapter input leds mem misc msr net pci_bus pcmcia_socket printer raw sas_device sas_end_device sas_expander sas_host sas_phy sas_port scsi_device scsi_disk scsi_generic scsi_host sound tty usb_device usb_endpoint usb_host vc vtconsole Supported sysfs devices: acpi pci0000:00 platform pnp0 sequencer2 sequencer seq system timer Supported sysfs modules: 8250 acpi_memhotplug ac asus_acpi ata_piix auth_rpcgss backlight battery button cifs cpufreq crypto_api dell_wmi dm_log dm_mem_cache dm_message dm_mirror dm_mod dm_multipath dm_raid45 dm_region_hash dock e1000e edac_mc ehci_hcd exportfs ext3 hwmon i2c_core i2c_ec i2c_i801 i7core_edac i8042 ip_conntrack_netbios_ns ip_conntrack ip_tables iptable_filter ipv6 it821x jbd joydev keyboard libata lockd lp md_mod mousedev mpt2sas nfnetlink nfs_acl nfsd nls_utf8 ohci_hcd parport_pc parport pci_hotplug pcmcia pcmcia_core pcspkr piix power_meter printk processor psmouse rsrc_nonstatic sbs scsi_dh scsi_mod scsi_transport_sas sd_mod serio_raw sg shpchp snd_hda_intel snd_hwdep snd_mixer_oss snd_page_alloc snd_pcm_oss snd_pcm snd_seq_device snd_seq_dummy snd_seq_midi_event snd_seq_oss snd_seq snd_timer snd soundcore sunrpc tcp_bic tpm_bios tpm_tis tpm uhci_hcd usbcore usbhid video wmi x_tables xfrm_nalgo xt_limit xt_state xt_tcpudp yenta_socket", "class": "硬件管理"}
{"title": "inotifywait命令", "安装inotify-tools": "inotify-tools项目地址：https://github.com/rvoicilas/inotify-tools\ninotify-tools下载地址：http://github.com/downloads/rvoicilas/inotify-tools/inotify-tools-3.14.tar.gz", "inotify相关参数": "inotify定义了下列的接口参数，可以用来限制inotify消耗kernel memory的大小。由于这些参数都是内存参数，因此，可以根据应用需求，实时的调节其大小：", "inotifywait命令使用": "#!/bin/bash #filename watchdir.sh path=$1 /usr/local/bin/inotifywait -mrq --timefmt '%d/%m/%y/%H:%M' --format '%T %w %f' -e modify,delete,create,attrib $path 执行输出： ./watchdir.sh /data/wsdata/tools/ 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swx 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swx 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp 04/01/13/16:34 /data/wsdata/tools/ .j.jsp.swp 04/01/13/16:35 /data/wsdata/tools/ 4913 04/01/13/16:35 /data/wsdata/tools/ 4913 04/01/13/16:35 /data/wsdata/tools/ 4913 04/01/13/16:35 /data/wsdata/tools/ j.jsp 04/01/13/16:35 /data/wsdata/tools/ j.jsp 04/01/13/16:35 /data/wsdata/tools/ j.jsp 04/01/13/16:35 /data/wsdata/tools/ j.jsp~ 04/01/13/16:35 /data/wsdata/tools/ .j.jsp.swp", "inotifywait命令参数": "-m是要持续监视变化。\n-r使用递归形式监视目录。\n-q减少冗余信息，只打印出需要的信息。\n-e指定要监视的事件列表。\n--timefmt是指定时间的输出格式。\n--format指定文件变化的详细信息。", "class": "性能监测与优化"}
{"title": "nethogs命令", "在RHEL、CentOS和Fedora下安装NetHogs": "要安装NetHogs，你必须要启用你所用Linux下的EPEL源。然后运行下面的yum命令下载安装NetHogs包。", "在Ubuntu、Linux mint和Debian下安装NetHogs": "键入apt-get命令安装NetHogs包：", "NetHogs用法": "在基于RedHat系统下键入如下命令启动NetHogs工具。", "NetHogs 命令行参数": "以下就是NetHogs命令行的参数，用-d来添加刷新频率参数，device name 用来检测给定的某个或者某些设备的带宽（默认是eth0）。例如：设置5秒钟的刷新频率，键入如下命令即可：", "交互命令": "以下是NetHogs的一些交互命令（键盘快捷键）", "class": "性能监测与优化"}
{"title": "ifstat命令", "下载": "http://gael.roualland.free.fr/ifstat/ （官网） wget http://gael.roualland.free.fr/ifstat/ifstat-1.1.tar.gz", "编译安装": "tar -zxvf ifstat-1.1.tar.gz cd ifstat-1.1 ./configure #默认会安装到/usr/local/bin/目录中 make ;make install", "选项": "-l 监测环路网络接口（lo）。缺省情况下，ifstat监测活动的所有非环路网络接口。经使用发现，加上-l参数能监测所有的网络接口的信息，而不是只监测 lo的接口信息，也就是说，加上-l参数比不加-l参数会多一个lo接口的状态信息。 -a 监测能检测到的所有网络接口的状态信息。使用发现，比加上-l参数还多一个plip0的接口信息，搜索一下发现这是并口（网络设备中有一 个叫PLIP (Parallel Line Internet Protocol). 它提供了并口...） -z 隐藏流量是无的接口，例如那些接口虽然启动了但是未用的 -i 指定要监测的接口,后面跟网络接口名 -s 等于加-d snmp:[comm@][#]host[/nn]] 参数，通过SNMP查询一个远程主机 -h 显示简短的帮助信息 -n 关闭显示周期性出现的头部信息（也就是说，不加-n参数运行ifstat时最顶部会出现网络接口的名称，当一屏显示不下时，会再一次出现接口的名称，提示我们显示的流量信息具体是哪个网络接口的。加上-n参数把周期性的显示接口名称关闭，只显示一次） -t 在每一行的开头加一个时间 戳（能告诉我们具体的时间） -T 报告所有监测接口的全部带宽（最后一列有个total，显示所有的接口的in流量和所有接口的out流量，简单的把所有接口的in流量相加,out流量相 加） -w 用指定的列宽，而不是为了适应接口名称的长度而去自动放大列宽 -W 如果内容比终端窗口的宽度还要宽就自动换行 -S 在同一行保持状态更新（不滚动不换行）注：如果不喜欢屏幕滚动则此项非常方便，与bmon的显示方式类似 -b 用kbits/s显示带宽而不是kbytes/s -q 安静模式，警告信息不出现 -v 显示版本信息 -d 指定一个驱动来收集状态信息", "实例": "[root@flow_video]# ifstat -tT time eth0 eth1 eth2 eth3 Total HH:MM:ss KB/s in KB/s out KB/s in KB/s out KB/s in KB/s out KB/s in KB/s out KB/s in KB/s out 16:53:04 0.84 0.62 1256.27 1173.05 0.12 0.18 0.00 0.00 1257.22 1173.86 16:53:05 0.57 0.40 0.57 0.76 0.00 0.00 0.00 0.00 1.14 1.17 16:53:06 1.58 0.71 0.42 0.78 0.00 0.00 0.00 0.00 2.01 1.48 16:53:07 0.57 0.40 1.91 2.61 0.00 0.00 0.00 0.00 2.48 3.01 16:53:08 0.73 0.40 924.02 1248.91 0.00 0.00 0.00 0.00 924.76 1249.31", "class": "性能监测与优化"}
{"title": "dstat命令", "下载安装": "方法一", "使用说明": "安装完后就可以使用了，dstat非常强大，可以实时的监控cpu、磁盘、网络、IO、内存等使用情况。", "语法": "dstat [-afv] [options..] [delay [count]]", "常用选项": "-c：显示CPU系统占用，用户占用，空闲，等待，中断，软件中断等信息。 -C：当有多个CPU时候，此参数可按需分别显示cpu状态，例：-C 0,1 是显示cpu0和cpu1的信息。 -d：显示磁盘读写数据大小。 -D hda,total：include hda and total。 -n：显示网络状态。 -N eth1,total：有多块网卡时，指定要显示的网卡。 -l：显示系统负载情况。 -m：显示内存使用情况。 -g：显示页面使用情况。 -p：显示进程状态。 -s：显示交换分区使用情况。 -S：类似D/N。 -r：I/O请求情况。 -y：系统状态。 --ipc：显示ipc消息队列，信号等信息。 --socket：用来显示tcp udp端口状态。 -a：此为默认选项，等同于-cdngy。 -v：等同于 -pmgdsc -D total。 --output 文件：此选项也比较有用，可以把状态信息以csv的格式重定向到指定的文件中，以便日后查看。例：dstat --output /root/dstat.csv & 此时让程序默默的在后台运行并把结果输出到/root/dstat.csv文件中。", "实例": "如想监控swap，process，sockets，filesystem并显示监控的时间：", "class": "性能监测与优化"}
{"title": "ltrace命令", "语法": "ltrace [option ...] [command [arg ...]]", "选项": "-a 对齐具体某个列的返回值。 -c 计算时间和调用，并在程序退出时打印摘要。 -C 解码低级别名称（内核级）为用户级名称。 -d 打印调试信息。 -e 改变跟踪的事件。 -f 跟踪子进程。 -h 打印帮助信息。 -i 打印指令指针，当库调用时。 -l 只打印某个库中的调用。 -L 不打印库调用。 -n, --indent=NR 对每个调用级别嵌套以NR个空格进行缩进输出。 -o, --output=file 把输出定向到文件。 -p PID 附着在值为PID的进程号上进行ltrace。 -r 打印相对时间戳。 -s STRLEN 设置打印的字符串最大长度。 -S 显示系统调用。 -t, -tt, -ttt 打印绝对时间戳。 -T 输出每个调用过程的时间开销。 -u USERNAME 使用某个用户id或组ID来运行命令。 -V, --version 打印版本信息，然后退出。 -x NAME treat the global NAME like a library subroutine.（求翻译）", "实例": "最基本应用，不带任何参数：", "class": "性能监测与优化"}
{"title": "iotop命令", "安装": "Ubuntu", "语法": "iotop（选项）", "选项": "-o：只显示有io操作的进程 -b：批量显示，无交互，主要用作记录到文件。 -n NUM：显示NUM次，主要用于非交互式模式。 -d SEC：间隔SEC秒显示一次。 -p PID：监控的进程pid。 -u USER：监控的进程用户。", "实例": "直接执行iotop就可以看到效果了：", "class": "性能监测与优化"}
{"title": "strace命令", "语法": "strace [ -dffhiqrtttTvxx ] [ -acolumn ] [ -eexpr ] ... [ -ofile ] [-ppid ] ... [ -sstrsize ] [ -uusername ] [ -Evar=val ] ... [ -Evar ]... [ command [ arg ... ] ] strace -c [ -eexpr ] ... [ -Ooverhead ] [ -Ssortby ] [ command [ arg... ] ]", "选项": "-c 统计每一系统调用的所执行的时间,次数和出错的次数等. -d 输出strace关于标准错误的调试信息. -f 跟踪由fork调用所产生的子进程. -ff 如果提供-o filename,则所有进程的跟踪结果输出到相应的filename.pid中,pid是各进程的进程号. -F 尝试跟踪vfork调用.在-f时,vfork不被跟踪. -h 输出简要的帮助信息. -i 输出系统调用的入口指针. -q 禁止输出关于脱离的消息. -r 打印出相对时间关于,,每一个系统调用. -t 在输出中的每一行前加上时间信息. -tt 在输出中的每一行前加上时间信息,微秒级. -ttt 微秒级输出,以秒了表示时间. -T 显示每一调用所耗的时间. -v 输出所有的系统调用.一些调用关于环境变量,状态,输入输出等调用由于使用频繁,默认不输出. -V 输出strace的版本信息. -x 以十六进制形式输出非标准字符串 -xx 所有字符串以十六进制形式输出. -a column 设置返回值的输出位置.默认 为40. -e expr 指定一个表达式,用来控制如何跟踪.格式：[qualifier=][!]value1[,value2]... qualifier只能是 trace,abbrev,verbose,raw,signal,read,write其中之一.value是用来限定的符号或数字.默认的 qualifier是 trace.感叹号是否定符号.例如:-eopen等价于 -e trace=open,表示只跟踪open调用.而-etrace!=open 表示跟踪除了open以外的其他调用.有两个特殊的符号 all 和 none. 注意有些shell使用!来执行历史记录里的命令,所以要使用\\\\. -e trace=set 只跟踪指定的系统 调用.例如:-e trace=open,close,rean,write表示只跟踪这四个系统调用.默认的为set=all. -e trace=file 只跟踪有关文件操作的系统调用. -e trace=process 只跟踪有关进程控制的系统调用. -e trace=network 跟踪与网络有关的所有系统调用. -e strace=signal 跟踪所有与系统信号有关的 系统调用 -e trace=ipc 跟踪所有与进程通讯有关的系统调用 -e abbrev=set 设定strace输出的系统调用的结果集.-v 等与 abbrev=none.默认为abbrev=all. -e raw=set 将指定的系统调用的参数以十六进制显示. -e signal=set 指定跟踪的系统信号.默认为all.如 signal=!SIGIO(或者signal=!io),表示不跟踪SIGIO信号. -e read=set 输出从指定文件中读出 的数据.例如: -e read=3,5 -e write=set 输出写入到指定文件中的数据. -o filename 将strace的输出写入文件filename -p pid 跟踪指定的进程pid. -s strsize 指定输出的字符串的最大长度.默认为32.文件名一直全部输出. -u username 以username的UID和GID执行被跟踪的命令", "实例": "追踪系统调用", "常用参数说明": "除了-c参数之外，strace还提供了其他有用的参数给我们，让我们能很方便的得到自己想要的信息，下面就对那些常用的参数一一做个介绍。", "综合例子": "说了那么多的功能和参数，现在我们来一个实用点的，就是研究下Oracle的lgwr进程，看看这个进程是不是像文档所说的那样没3s钟写一次log文件，考虑到lgwr写日志的触发条件比较多，我们需要找一个空闲的Oracle实例做这个实验。", "class": "性能监测与优化"}
{"title": "fuser命令", "语法": "fuser(选项)(参数)", "选项": "-a：显示命令行中指定的所有文件； -k：杀死访问指定文件的所有进程； -i：杀死进程前需要用户进行确认； -l：列出所有已知信号名； -m：指定一个被加载的文件系统或一个被加载的块设备； -n：选择不同的名称空间； -u：在每个进程后显示所属的用户名。", "参数": "文件：可以是文件名或者TCP、UDP端口号。", "实例": "要列出使用/etc/passwd文件的本地进程的进程号，请输入：", "class": "性能监测与优化"}
{"title": "lsof命令", "语法": "lsof(选项)", "选项": "-a：列出打开文件存在的进程； -c<进程名>：列出指定进程所打开的文件； -g：列出GID号进程详情； -d<文件号>：列出占用该文件号的进程； +d<目录>：列出目录下被打开的文件； +D<目录>：递归列出目录下被打开的文件； -n<目录>：列出使用NFS的文件； -i<条件>：列出符合条件的进程。（4、6、协议、:端口、 @ip ） -p<进程号>：列出指定进程号所打开的文件； -u：列出UID号进程详情； -h：显示帮助信息； -v：显示版本信息。", "实例": "lsof command PID USER FD type DEVICE SIZE NODE NAME init 1 root cwd DIR 8,2 4096 2 / init 1 root rtd DIR 8,2 4096 2 / init 1 root txt REG 8,2 43496 6121706 /sbin/init init 1 root mem REG 8,2 143600 7823908 /lib64/ld-2.5.so init 1 root mem REG 8,2 1722304 7823915 /lib64/libc-2.5.so init 1 root mem REG 8,2 23360 7823919 /lib64/libdl-2.5.so init 1 root mem REG 8,2 95464 7824116 /lib64/libselinux.so.1 init 1 root mem REG 8,2 247496 7823947 /lib64/libsepol.so.1 init 1 root 10u FIFO 0,17 1233 /dev/initctl migration 2 root cwd DIR 8,2 4096 2 / migration 2 root rtd DIR 8,2 4096 2 / migration 2 root txt unknown /proc/2/exe ksoftirqd 3 root cwd DIR 8,2 4096 2 / ksoftirqd 3 root rtd DIR 8,2 4096 2 / ksoftirqd 3 root txt unknown /proc/3/exe migration 4 root cwd DIR 8,2 4096 2 / migration 4 root rtd DIR 8,2 4096 2 / migration 4 root txt unknown /proc/4/exe ksoftirqd 5 root cwd DIR 8,2 4096 2 / ksoftirqd 5 root rtd DIR 8,2 4096 2 / ksoftirqd 5 root txt unknown /proc/5/exe events/0 6 root cwd DIR 8,2 4096 2 / events/0 6 root rtd DIR 8,2 4096 2 / events/0 6 root txt unknown /proc/6/exe events/1 7 root cwd DIR 8,2 4096 2 /", "class": "性能监测与优化"}
{"title": "tload命令", "语法": "tload(选项)(参数)", "选项": "-s：指定闲时的刻度； -d：指定间隔的时间（秒）。", "参数": "终端：指定显示信息的终端设备文件。", "实例": "使用tload命令查看系统负载情况：", "class": "性能监测与优化"}
{"title": "time命令", "语法": "time(参数)", "参数": "指令：指定需要运行的额指令及其参数。", "实例": "当测试一个程序或比较不同算法时，执行时间是非常重要的，一个好的算法应该是用时最短的。所有类UNIX系统都包含time命令，使用这个命令可以统计时间消耗。例如：", "class": "性能监测与优化"}
{"title": "vmstat命令", "语法": "vmstat(选项)(参数)", "选项": "-a：显示活动内页； -f：显示启动后创建的进程总数； -m：显示slab信息； -n：头信息仅显示一次； -s：以表格方式显示事件计数器和内存状态； -d：报告磁盘状态； -p：显示指定的硬盘分区状态； -S：输出信息的单位。", "参数": "事件间隔：状态信息刷新的时间间隔；\n次数：显示报告的次数。", "实例": "vmstat 3 procs -----------memory---------- ---swap-- -----io---- --system-- -----cpu------ r b swpd free buff cache si so bi bo in cs us sy id wa st 0 0 320 42188 167332 1534368 0 0 4 7 1 0 0 0 99 0 0 0 0 320 42188 167332 1534392 0 0 0 0 1002 39 0 0 100 0 0 0 0 320 42188 167336 1534392 0 0 0 19 1002 44 0 0 100 0 0 0 0 320 42188 167336 1534392 0 0 0 0 1002 41 0 0 100 0 0 0 0 320 42188 167336 1534392 0 0 0 0 1002 41 0 0 100 0 0", "class": "性能监测与优化"}
{"title": "sar命令", "语法": "sar(选项)(参数)", "选项": "-A：显示所有的报告信息； -b：显示I/O速率； -B：显示换页状态； -c：显示进程创建活动； -d：显示每个块设备的状态； -e：设置显示报告的结束时间； -f：从指定文件提取报告； -i：设状态信息刷新的间隔时间； -P：报告每个CPU的状态； -R：显示内存状态； -u：显示CPU利用率； -v：显示索引节点，文件和其他内核表的状态； -w：显示交换分区状态； -x：显示给定进程的状态。", "参数": "间隔时间：每次报告的间隔时间（秒）；\n次数：显示报告的次数。", "实例": "察看内存和交换空间的使用率：", "class": "性能监测与优化"}
{"title": "mpstat命令", "语法": "mpstat(选项)(参数)", "选项": "-P：指定CPU编号。", "参数": "间隔时间：每次报告的间隔时间（秒）；\n次数：显示报告的次数。", "实例": "当mpstat不带参数时，输出为从系统启动以来的平均值。", "class": "性能监测与优化"}
{"title": "iostat命令", "语法": "iostat(选项)(参数)", "选项": "-c：仅显示CPU使用情况； -d：仅显示设备利用率； -k：显示状态以千字节每秒为单位，而不使用块每秒； -m：显示状态以兆字节每秒为单位； -p：仅显示块设备和所有被使用的其他分区的状态； -t：显示每个报告产生时的时间； -V：显示版号并退出； -x：显示扩展状态。", "参数": "间隔时间：每次报告的间隔时间（秒）；\n次数：显示报告的次数。", "实例": "用iostat -x /dev/sda1来观看磁盘I/O的详细情况：", "class": "性能监测与优化"}
{"title": "free命令", "语法": "free(选项)", "选项": "-b：以Byte为单位显示内存使用情况； -k：以KB为单位显示内存使用情况； -m：以MB为单位显示内存使用情况； -o：不显示缓冲区调节列； -s<间隔秒数>：持续观察内存使用状况； -t：显示内存总和列； -V：显示版本信息。", "实例": "free -m total used free shared buffers cached Mem: 2016 1973 42 0 163 1497 -/+ buffers/cache: 312 1703 Swap: 4094 0 4094", "class": "性能监测与优化"}
{"title": "uptime命令", "语法": "uptime(选项)", "选项": "-V：显示指令的版本信息。", "实例": "使用uptime命令查看系统负载：", "class": "性能监测与优化"}
{"title": "top命令", "语法": "top(选项)", "选项": "-b：以批处理模式操作； -c：显示完整的治命令； -d：屏幕刷新间隔时间； -I：忽略失效过程； -s：保密模式； -S：累积模式； -i<时间>：设置间隔时间； -u<用户名>：指定用户名； -p<进程号>：指定进程； -n<次数>：循环显示的次数。", "top交互命令": "在top命令执行过程中可以使用的一些交互命令。这些命令都是单字母的，如果在命令行中使用了-s选项， 其中一些命令可能会被屏蔽。", "实例": "top - 09:44:56 up 16 days, 21:23, 1 user, load average: 9.59, 4.75, 1.92 Tasks: 145 total, 2 running, 143 sleeping, 0 stopped, 0 zombie Cpu(s): 99.8%us, 0.1%sy, 0.0%ni, 0.2%id, 0.0%wa, 0.0%hi, 0.0%si, 0.0%st Mem: 4147888k total, 2493092k used, 1654796k free, 158188k buffers Swap: 5144568k total, 56k used, 5144512k free, 2013180k cached", "class": "性能监测与优化"}
{"title": "blkid命令", "语法": "blkid -L | -U blkid [-c ] [-ghlLv] [-o] [-s ][-t ] [-w ] [ ...] blkid -p [-s ] [-O ] [-S ][-o] ... blkid -i [-s ] [-o] ...", "选项": "-c <file> 指定cache文件(default: /etc/blkid.tab, /dev/null = none) -d don't encode non-printing characters -h 显示帮助信息 -g garbage collect the blkid cache -o <format> 指定输出格式 -k list all known filesystems/RAIDs and exit -s <tag> 显示指定信息，默认显示所有信息 -t <token> find device with a specific token (NAME=value pair) -l look up only first device with token specified by -t -L <label> convert LABEL to device name -U <uuid> convert UUID to device name -v 显示版本信息 -w <file> write cache to different file (/dev/null = no write) <dev> specify device(s) to probe (default: all devices) Low-level probing options: -p low-level superblocks probing (bypass cache) -i gather information about I/O limits -S <size> overwrite device size -O <offset> probe at the given offset -u <list> filter by \"usage\" (e.g. -u filesystem,raid) -n <list> filter by filesystem type (e.g. -n vfat,ext3)", "实例": "1、列出当前系统中所有已挂载文件系统的类型：", "class": "磁盘管理"}
{"title": "du命令", "语法": "du [选项][文件]", "选项": "-a或-all 显示目录中个别文件的大小。 -b或-bytes 显示目录或文件大小时，以byte为单位。 -c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。 -k或--kilobytes 以KB(1024bytes)为单位输出。 -m或--megabytes 以MB为单位输出。 -s或--summarize 仅显示总计，只列出最后加总的值。 -h或--human-readable 以K，M，G为单位，提高信息的可读性。 -x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。 -L<符号链接>或--dereference<符号链接> 显示选项中所指定符号链接的源文件大小。 -S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。 -X<文件>或--exclude-from=<文件> 在<文件>指定目录或文件。 --exclude=<目录或文件> 略过指定的目录或文件。 -D或--dereference-args 显示指定符号链接的源文件大小。 -H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。 -l或--count-links 重复计算硬件链接的文件。", "实例": "显示目录或者文件所占空间：", "class": "磁盘管理"}
{"title": "lsblk命令", "选项": "-a, --all 显示所有设备。 -b, --bytes 以bytes方式显示设备大小。 -d, --nodeps 不显示 slaves 或 holders。 -D, --discard print discard capabilities。 -e, --exclude <list> 排除设备 (default: RAM disks)。 -f, --fs 显示文件系统信息。 -h, --help 显示帮助信息。 -i, --ascii use ascii characters only。 -m, --perms 显示权限信息。 -l, --list 使用列表格式显示。 -n, --noheadings 不显示标题。 -o, --output <list> 输出列。 -P, --pairs 使用key=\"value\"格式显示。 -r, --raw 使用原始格式显示。 -t, --topology 显示拓扑结构信息。", "实例": "lsblk命令默认情况下将以树状列出所有块设备。打开终端，并输入以下命令：", "class": "磁盘管理"}
{"title": "vgremove命令", "语法": "vgremove(选项)(参数)", "选项": "-f：强制删除。", "参数": "卷组：指定要删除的卷组名称。", "实例": "使用vgremove命令删除LVM卷组\"vg1000\"。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvresize命令", "语法": "lvresize(选项)(参数)", "选项": "-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； -l：指定逻辑卷的大小（LE数）。", "参数": "逻辑卷：指定要删除的逻辑卷。", "实例": "使用lvresize命令调整最大的逻辑卷大小。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvremove命令", "语法": "lvremove(选项)(参数)", "选项": "-f：强制删除。", "参数": "逻辑卷：指定要删除的逻辑卷。", "实例": "使用lvremove命令删除指定的逻辑卷。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvreduce命令", "语法": "lvreduce(选项)(参数)", "选项": "-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； -l：指定逻辑卷的大小（LE数）。", "参数": "逻辑卷：指定要操作的逻辑卷对应的设备文件。", "实例": "使用lvreduce命令减少指定的逻辑卷的空间大小。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvs命令", "语法": "pvs(选项)(参数)", "选项": "--noheadings：不输出标题头； --nosuffix：不输出空间大小的单位。", "参数": "物理卷：要显示报表的物理卷列表。", "实例": "使用pvs命令显示系统中所有物理卷的信息报表。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvchange命令", "语法": "pvchange(选项)(参数)", "选项": "-u：生成新的UUID； -x：是否允许分配PE。", "参数": "物理卷：指定要修改属性的物理卷所对应的设备文件。", "实例": "使用pvchange命令禁止分配指定物理卷上的PE。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvck命令", "语法": "pvck(选项)(参数)", "选项": "-d：调试模式； -v：详细信息模式； --labelsector：指定LVE卷标所在扇区。", "参数": "物理卷：指定要检查的物理卷对应的设备文件。", "实例": "使用pvck命令检查物理卷/dev/sdb1。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvremove命令", "语法": "pvremove(选项)(参数)", "选项": "-d：调试模式； -f：强制删除； -y：对提问回答“yes”。", "参数": "物理卷：指定要删除的物理卷对应的设备文件名。", "实例": "使用pvremove指令删除物理卷/dev/sdb2。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvextend命令", "语法": "lvextend(选项)(参数)", "选项": "-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； -l：指定逻辑卷的大小（LE数）。", "参数": "逻辑卷：指定要扩展空间的逻辑卷。", "实例": "使用lvextend命令为逻辑卷/dev/vg1000/lvol0增加100M空间。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvdisplay命令", "语法": "pvdisplay(选项)(参数)", "选项": "-s：以短格式输出； -m：显示PE到LE的映射。", "参数": "物理卷：要显示的物理卷对应的设备文件名。", "实例": "使用pvdisplay命令显示指定的物理卷的基本信息。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvdisplay命令", "语法": "lvdisplay(参数)", "参数": "逻辑卷：指定要显示属性的逻辑卷对应的设备文件。", "实例": "使用lvdisplay命令显示指定逻辑卷的属性。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvscan命令", "语法": "pvscan(选项)", "选项": "-d：调试模式； -e：仅显示属于输出卷组的物理卷； -n：仅显示不属于任何卷组的物理卷； -s：短格式输出； -u：显示UUID。", "实例": "使用pvscan命令扫描当前系统中所有硬盘的物理卷，在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvscan命令", "语法": "lvscan(选项)", "选项": "-b：显示逻辑卷的主设备和次设备号。", "实例": "使用lvscan命令扫描系统中的所有逻辑卷。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lvcreate命令", "语法": "lvcreate(选项)(参数)", "选项": "-L：指定逻辑卷的大小，单位为“kKmMgGtT”字节； -l：指定逻辑卷的大小（LE数）。", "参数": "逻辑卷：指定要创建的逻辑卷名称。", "实例": "使用lvcreate命令在卷组\"vg1000\"上创建一个200MB的逻辑卷。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "pvcreate命令", "语法": "pvcreate(选项)(参数)", "选项": "-f：强制创建物理卷，不需要用户确认； -u：指定设备的UUID； -y：所有的问题都回答“yes”； -Z：是否利用前4个扇区。", "参数": "物理卷：指定要创建的物理卷对应的设备文件名。", "实例": "查看磁盘信息：", "class": "磁盘管理"}
{"title": "vgconvert命令", "语法": "vgconvert(选项)(参数)", "选项": "-M：要转换的卷组格式。", "参数": "卷组：指定要转换格式的卷组。", "实例": "转换卷组元数据格式前，使用vgchange命令将卷组设置为非活动状态。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "blockdev命令", "语法": "blockdev(选项)(参数)", "参数": "设备文件名：指定要操作的磁盘的设备文件名。", "实例": "设置设备为只读：", "class": "磁盘管理"}
{"title": "mkswap命令", "语法": "mkswap(选项)(参数)", "选项": "-c：建立交换区前，先检查是否有损坏的区块； -f：在SPARC电脑上建立交换区时，要加上此参数； -v0：建立旧式交换区，此为预设值； -v1：建立新式交换区。", "参数": "设备：指定交换空间对应的设备文件或者交换文件。", "实例": "查看系统swap space大小：", "class": "磁盘管理"}
{"title": "vgchange命令", "语法": "vgchange(选项)(参数)", "选项": "-a：设置卷组的活动状态。", "参数": "卷组：指定要设置属性的卷组。", "实例": "使用vgchange命令将卷组状态改为活动的。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "mknod命令", "语法": "mknod(选项)(参数)", "选项": "-Z：设置安全的上下文； -m：设置权限模式； -help：显示帮助信息； --version：显示版本信息。", "参数": "文件名：要创建的设备文件名；\n类型：指定要创建的设备文件的类型；\n主设备号：指定设备文件的主设备号；\n次设备号：指定设备文件的次设备号。", "实例": "ls -la /dev/ttyUSB* crw-rw—- 1 root dialout 188, 0 2008-02-13 18:32 /dev/ttyUSB0 mknod /dev/ttyUSB32 c 188 32", "扩展知识": "Linux的设备管理是和文件系统紧密结合的，各种设备都以文件的形式存放在/dev目录 下，称为设备文件。应用程序可以打开、关闭和读写这些设备文件，完成对设备的操作，就像操作普通的数据文件一样。", "class": "磁盘管理"}
{"title": "mkisofs命令", "语法": "mkisofs(选项)(参数)", "选项": "-a或--all：mkisofs通常不处理备份文件。使用此参数可以把备份文件加到映像文件中； -A<应用程序id>或-appid<应用程序ID>：指定光盘的应用程序ID； -abstract<摘要文件>：指定摘要文件的文件名； -b<开机映像文件>或-eltorito-boot<开机映像文件>：指定在制作可开机光盘时所需的开机映像文件； -biblio<ISBN文件>：指定ISBN文件的文件名，ISBN文件位于光盘根目录下，记录光盘的ISBN； -c<开机文件名称>：制作可开机光盘时，mkisofs会将开机映像文件中的全-eltorito-catalog<开机文件名称>全部内容作成一个文件； -C<盘区编号，盘区编号>：将许多节区合成一个映像文件时，必须使用此参数； -copyright<版权信息文件>：指定版权信息文件的文件名； -d或-omit-period：省略文件后的句号； -D或-disable-deep-relocation：ISO 9660最多只能处理8层的目录，超过8层的部分，RRIP会自动将它们设置成ISO 9660兼容的格式。使用-D参数可关闭此功能； -f或-follow-links：忽略符号连接； -h：显示帮助； -hide<目录或文件名>：使指定的目录或文件在ISO 9660或Rock RidgeExtensions的系统中隐藏； -hide-joliet<目录或文件名>：使指定的目录或文件在Joliet系统中隐藏； -J或-joliet：使用Joliet格式的目录与文件名称； -l或-full-iso9660-filenames：使用ISO 9660 32字符长度的文件名； -L或-allow-leading-dots：允许文件名的第一个字符为句号； -log-file<记录文件>：在执行过程中若有错误信息，预设会显示在屏幕上； -m<目录或文件名>或-exclude<目录或文件名>：指定的目录或文件名将不会房入映像文件中； -M<映像文件>或-prev-session<映像文件>：与指定的映像文件合并； -N或-omit-version-number：省略ISO 9660文件中的版本信息； -o<映像文件>或-output<映像文件>：指定映像文件的名称； -p<数据处理人>或-preparer<数据处理人>：记录光盘的数据处理人； -print-size：显示预估的文件系统大小； -quiet：执行时不显示任何信息； -r或-rational-rock：使用Rock Ridge Extensions，并开放全部文件的读取权限； -R或-rock：使用Rock Ridge Extensions； -sysid<系统ID>：指定光盘的系统ID； -T或-translation-table：建立文件名的转换表，适用于不支持Rock Ridge Extensions的系统上； -v或-verbose：执行时显示详细的信息； -V<光盘ID>或-volid<光盘ID>：指定光盘的卷册集ID； -volset-size<光盘总数>：指定卷册集所包含的光盘张数； -volset-seqno<卷册序号>：指定光盘片在卷册集中的编号； -x<目录>：指定的目录将不会放入映像文件中； -z：建立通透性压缩文件的SUSP记录，此记录目前只在Alpha机器上的Linux有效。", "参数": "路径：需要添加到映像文件中的路径。", "实例": "linux中用mkisofs命令把文件制作成ISO步骤：", "class": "磁盘管理"}
{"title": "mkinitrd命令", "语法": "mkinitrd(选项)(参数)", "选项": "-f：若指定的映像问家名称与现有文件重复，则覆盖现有的文件； -v：执行时显示详细的信息； --omit-scsi-modules：不要载入SCSI模块； --preload=<模块名称>：指定要载入的模块； --with=<模块名称>：指定要载入的模块； --version：显示版本信息。", "参数": "映像文件：指定要创建的映像文件；\n内核版本：指定内核版本。", "实例": "[root@localhost tmp]# mkinitrd -v -f myinitrd.img $(uname -r) Creating initramfs WARNING: using /tmp for temporary files Looking for deps of module ide-disk Looking for deps of module ext3 jbd Looking for deps of module jbd Using modules: ./kernel/fs/jbd/jbd.ko ./kernel/fs/ext3/ext3.ko /sbin/nash -> /tmp/initrd.Vz3928/bin/nash /sbin/insmod.static -> /tmp/initrd.Vz3928/bin/insmod /sbin/udev.static -> /tmp/initrd.Vz3928/sbin/udev /etc/udev/udev.conf -> /tmp/initrd.Vz3928/etc/udev/udev.conf copy from /lib/modules/2.6.9-5.EL/./kernel/fs/jbd/jbd.ko(elf32-i386) to /tmp/initrd.Vz3928/lib/jbd.ko(elf32-i386) copy from /lib/modules/2.6.9-5.EL/./kernel/fs/ext3/ext3.ko(elf32-i386) to /tmp/initrd.Vz3928/lib/ext3.ko(elf32-i386) Loading module jbd Loading module ext3 [root@localhost tmp]# file myinitrd.img myinitrd.img: gzip compressed data, from Unix, max compression [root@localhost tmp]# mv myinitrd.img myinitrd.img.gz [root@localhost tmp]# gzip -d myinitrd.img.gz [root@localhost tmp]# file myinitrd.img myinitrd.img: ASCII cpio archive (SVR4 with no CRC)", "class": "磁盘管理"}
{"title": "vgreduce命令", "语法": "vgreduce(选项)(参数)", "选项": "-a：如果命令行中没有指定要删除的物理卷，则删除所有的空物理卷； --removemissing：删除卷组中丢失的物理卷，使卷组恢复正常状态。", "参数": "卷组：指定要操作的卷组名称；\n物理卷列表：指定要删除的物理卷列表。", "实例": "使用vgreduce命令从卷组\"vg2000\"中移除物理卷/dev/sdb2。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "hdparm命令", "语法": "hdparm(选项)(参数)", "选项": "-a<快取分区>：设定读取文件时，预先存入块区的分区数，若不加上<快取分区>选项，则显示目前的设定； -A<0或1>：启动或关闭读取文件时的快取功能； -c<I/O模式>：设定IDE32位I/O模式； -C：检测IDE硬盘的电源管理模式； -d<0或1>：设定磁盘的DMA模式； -f：将内存缓冲区的数据写入硬盘，并清楚缓冲区； -g：显示硬盘的磁轨，磁头，磁区等参数； -h：显示帮助； -i：显示硬盘的硬件规格信息，这些信息是在开机时由硬盘本身所提供； -I：直接读取硬盘所提供的硬件规格信息； -k<0或1>：重设硬盘时，保留-dmu参数的设定； -K<0或1>：重设硬盘时，保留-APSWXZ参数的设定； -m<磁区数>：设定硬盘多重分区存取的分区数； -n<0或1>：忽略硬盘写入时所发生的错误； -p<PIO模式>：设定硬盘的PIO模式； -P<磁区数>：设定硬盘内部快取的分区数； -q:在执行后续的参数时，不在屏幕上显示任何信息； -r<0或1>:设定硬盘的读写模式； -S<时间>:设定硬盘进入省电模式前的等待时间； -t;评估硬盘的读取效率； -T：平谷硬盘快取的读取效率； -u<0或1>：在硬盘存取时，允许其他中断要求同时执行； -v：显示硬盘的相关设定； -w<0或1>：设定硬盘的写入快取； -X<传输模式>：设定硬盘的传输模式； -y：使IDE硬盘进入省电模式； -Y：使IDE硬盘进入睡眠模式； -Z：关闭某些Seagate硬盘的自动省电功能。", "参数": "设备文件：指定id驱动对应的设备文件名。", "实例": "显示硬盘的相关设置：", "class": "磁盘管理"}
{"title": "vgextend命令", "语法": "vgextend(选项)(参数)", "选项": "-d：调试模式； -t：仅测试。", "参数": "卷组：指定要操作的卷组名称；\n物理卷列表：指定要添加到卷组中的物理卷列表。", "实例": "使用vgextend命令向卷组\"vg2000\"中添加物理卷。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "partprobe命令", "语法": "partprobe(选项)(参数)", "选项": "-d：不更新内核； -s：显示摘要和分区； -h：显示帮助信息； -v：显示版本信息。", "参数": "设备：指定需要确认分区表改变的硬盘对应的设备文件。", "实例": "使用partprobe不重启系统添加新的磁盘分区，主机自带硬盘超过300GB，目前只划分使用了3个主分区，不到70GB，如下：", "class": "磁盘管理"}
{"title": "vgscan命令", "语法": "vgscan(选项)", "选项": "-d：调试模式； --ignorerlockingfailure：忽略锁定失败的错误。", "实例": "使用vgscan命令扫描系统中所有的卷组。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "vgcreate命令", "语法": "vgcreate(选项)(参数)", "选项": "-l：卷组上允许创建的最大逻辑卷数； -p：卷组中允许添加的最大物理卷数； -s：卷组上的物理卷的PE大小。", "参数": "卷组名：要创建的卷组名称；\n物理卷列表：要加入到卷组中的物理卷列表。", "实例": "使用vgcreate命令创建卷组 \"vg1000\"，并且将物理卷/dev/sdb1和/dev/sdb2添加到卷组中。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "fdisk命令", "语法": "fdisk(选项)(参数)", "选项": "-b<分区大小>：指定每个分区的大小； -l：列出指定的外围设备的分区表状况； -s<分区编号>：将指定的分区大小输出到标准输出上，单位为区块； -u：搭配\"-l\"参数列表，会用分区数目取代柱面数目，来表示每个分区的起始地址； -v：显示版本信息。", "参数": "设备文件：指定要进行分区或者显示分区的硬盘设备文件。", "实例": "首先选择要进行操作的磁盘：", "class": "磁盘管理"}
{"title": "badblocks命令", "语法": "badblock(选项)(参数)", "选项": "-b<区块大小>：指定磁盘的区块大小，单位为字节； -o<输出文件>：将检查的结果写入指定的输出文件； -s：在检查时显示进度； -v：执行时显示详细的信息； -w：在检查时，执行写入测试。", "参数": "磁盘装置：指定要检查的磁盘装置；\n磁盘区块数：指定磁盘装置的区块总数；\n启始区块：指定要从哪个区块开始检查。", "实例": "badblocks以4096的一个block，每一个block检查16次，将结果输出到“hda-badblocks-list”文件里。", "其他": "1、fsck使用badblocks的信息", "class": "磁盘管理"}
{"title": "vgdisplay命令", "语法": "vgdisplay(选项)(参数)", "选项": "-A：仅显示活动卷组的属性； -s：使用短格式输出的信息。", "参数": "卷组：要显示属性的卷组名称。", "实例": "使用vgdisplay命令显示存在的卷组\"vg1000\"的属性。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "mkbootdisk命令", "语法": "mkbootdisk(选项)(参数)", "选项": "--device<设备>：指定设备； --mkinitrdargs<参数>：设置mkinitrd的参数； --noprompt：不会提示用户插入磁盘； --verbose：执行时显示详细的信息； --version：显示版本信息。", "参数": "内核：指定内核版本。", "实例": "mkbootdisk --device /dev/fd0 `uname -r`", "class": "磁盘管理"}
{"title": "grub命令", "语法": "grub(选项)", "选项": "--batch：打开批处理模式； --boot-drive=<驱动器>：指定stage2的引导驱动器； --config-file<配置文件>：指定stage2的配置文件； --device-map=<文件>：指定设备的映射文件； --help：显示帮助信息； --install-partition=<分区>：指定stage2安装分区； --no-config-file：不使用配置文件； --no-pager：不使用内部分页器； --preset-menu：使用预设菜单； --probe-second-floppy：检测第二个软盘驱动器； --read-only：只读模式。", "实例": "利用grub命令来启动损坏的Linux系统，可能你的电脑因为某些原因损坏不能自动启动了。当然原因很多，可能的现象也很多。", "class": "磁盘管理"}
{"title": "convertquota命令", "语法": "convertquota(选项)(参数)", "选项": "-u：仅转换用户磁盘配额数据文件； -g：仅转换组磁盘配额数据文件； -f：将老的磁盘配额文件转换为新的格式； -e：将新的文件格式从大字节序换为小字节序。", "参数": "文件系统：指定要转换磁盘配额数据文件格式的文件系统（硬盘分区）。", "实例": "使用convertquota指令转换指定文件系统/data的磁盘配额数据文件。在命令行中输入下面的命令：", "class": "磁盘管理"}
{"title": "lilo命令", "语法": "lilo(选项)", "选项": "-b<外围设备代号>：指定安装lilo之处的外围设备代号； -c：使用紧致映射模式； -C<配置文件>：指定lilo的配置文件； -d<延迟时间>：设置开机延迟时间； -D<识别标签>：指定开机后预设启动的操作系统，或系统核心识别标签； -f<几何参数文件>：指定磁盘的几何参数配置文件； -i<开机磁区文件>：指定欲使用的开机磁区文件，预设是/boot目录里的boot.b文件； -I<识别标签>：显示系统核心存放之处； -l：产生线形磁区地址； -m<映射文件>：指定映射文件； -P<fix/ignore>：决定要修复或忽略分区表的错误； -q：列出映射的系统核心文件； -r<根目录>：设置系统启动时欲挂入成为根目录的目录； -R<执行指令>：设置下次启动系统时，首先执行的指令； -s<备份文件>：指定备份文件； -S<备份文件>：强制指定备份文件； -t：不执行指令，仅列出实际执行会进行的动作； -u<外围色设备代号>：删除lilo； -U<外围设备代号>：此选项的效果和指定\"-u\"参数类似，当不检查时间戳记； -v：显示指令执行过程； -V：显示版本信息。", "实例": "使用 LILO 作为引导加载程序", "class": "磁盘管理"}
{"title": "df命令", "语法": "df(选项)(参数)", "选项": "-a或--all：包含全部的文件系统； --block-size=<区块大小>：以指定的区块大小来显示区块数目； -h或--human-readable：以可读性较高的方式来显示信息； -H或--si：与-h参数相同，但在计算时是以1000 Bytes为换算单位而非1024 Bytes； -i或--inodes：显示inode的信息； -k或--kilobytes：指定区块大小为1024字节； -l或--local：仅显示本地端的文件系统； -m或--megabytes：指定区块大小为1048576字节； --no-sync：在取得磁盘使用信息前，不要执行sync指令，此为预设值； -P或--portability：使用POSIX的输出格式； --sync：在取得磁盘使用信息前，先执行sync指令； -t<文件系统类型>或--type=<文件系统类型>：仅显示指定文件系统类型的磁盘信息； -T或--print-type：显示文件系统的类型； -x<文件系统类型>或--exclude-type=<文件系统类型>：不要显示指定文件系统类型的磁盘信息； --help：显示帮助； --version：显示版本信息。", "参数": "文件：指定文件系统上的文件。", "实例": "查看系统磁盘设备，默认是KB为单位：", "class": "磁盘管理"}
{"title": "parted命令", "语法": "parted(选项)(参数)", "选项": "-h：显示帮助信息； -i：交互式模式； -s：脚本模式，不提示用户； -v：显示版本号。", "参数": "设备：指定要分区的硬盘所对应的设备文件；\n命令：要执行的parted命令。", "实例": "从串行技术出现以来，越来越多用户选择使用大容量的SATA硬盘创建磁盘阵列；特别是MD1000/MD3000，很轻易就突破2T的LUN，故在此给大家一些指引。", "class": "磁盘管理"}
